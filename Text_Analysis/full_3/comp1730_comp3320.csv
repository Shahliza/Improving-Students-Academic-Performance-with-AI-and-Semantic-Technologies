score,s1,s2
0.9405,This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.,This course teaches introductory programming within a problem solving framework applicable to the sciences.
0.9558,Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.,"The course emphasises technical programming, the simulation of scientific systems and the processing of scientific data."
0.9377,"The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95.",The course will be taught using one or more programming languages which are widely applicable to scientific work.
0.9349,"The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures.",The course will be taught using one or more programming languages which are widely applicable to scientific work.
0.9288,It will also look at practical methods of estimating and measuring algorithm/architecture performance.,There will be an introduction to widely-used computer science algorithms and to machine architecture.
0.9219,"The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems.",Have an understanding of practical aspects of machine architecture including finite precision and rounding errors.
0.9216,appreciate the building blocks of scientific and engineering software.,"The course emphasises technical programming, the simulation of scientific systems and the processing of scientific data."
0.9470,demonstrate a basic knowledge of numerical computing using an appropriate programming language.,This course teaches introductory programming within a problem solving framework applicable to the sciences.
0.9417,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.,"The course emphasises technical programming, the simulation of scientific systems and the processing of scientific data."
0.9487,be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.,Have a practical understanding of the processing of scientific data.
0.9219,have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.,Have a practical understanding of the processing of scientific data.
0.9226,have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.,Have an understanding of practical aspects of machine architecture including finite precision and rounding errors.
0.9228,"be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance.",Be able to describe and design small computer programs using both procedural and object-oriented methodologies.
