score,s1,s2
0.9448,This course provides basic approaches for designing and analysing algorithms and data structures.,It will also look at practical methods of estimating and measuring algorithm/architecture performance.
0.9175,It will focus on two fundamental problems in computing: Sorting and searching.,Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.
0.9463,"It will cover various data structures and algorithm design techniques for solving these two classes of problems, as well as basic performance measures and analysis techniques for solving such problems.",It will also look at practical methods of estimating and measuring algorithm/architecture performance.
0.9371,"Display an advanced understanding of a variety of algorithms, including linear selection, minimum spanning trees, single source shortest path, Huffman coding, etc, with real-life applications and the resource requirements.",be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.
0.9271,"Expertly apply the most effective algorithmic techniques including dynamic programming, greedy policy, and divide-and-conquer, to solve some practical problems.",be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.
0.9336,Define and analyse time and space complexities of algorithms.,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.
0.9346,"Demonstrate experience in the design and implementation of algorithms for practical problems, using languages like C, C++.",be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.
