score,s1,s2
0.9066,Computer graphics are an essential part of modern software.,Understand fundamental concepts of GUIs and user interfaces; understand the basics of modeling and simulation.
0.9388,"In this course students will learn about fundamental algorithms, data structures and programming models used in 3D graphics applications.","This course continues to build on topics taught in the previous two courses. It focuses on construction of medium scale programs, using design patterns and tools that are used in the software development process."
0.9274,"These key concepts in computer graphics programming will be covered from their mathematical foundations through to their application in domains such as data visualisation, virtual reality, computer games and film animation/VFX.","Students will learn appropriate application of programming abstractions they have learned in previous courses to the structuring of medium scale software: inheritance, generic types, polymorphism, procedural abstraction, and abstract recursive data structures (including abstract syntax trees as a program representation, and tools that manipulate them)."
0.9461,In this course students will explore these concepts through practical implementation in a modern computer graphics software context.,The course also treats intellectual property considerations in software development and deployment.
0.9105,"Explain the stages of a modern, hardware-accelerated 3D rendering pipeline",Apply fundamental programming concepts for medium scale programs.
0.9274,"Construct and manipulate complex models, geometries and scene graphs in both 2D and 3D","Understand, apply, and analyse state and state machines in expressing computations."
0.9146,Implement computer graphics algorithms in a shader language,"Students will learn appropriate application of programming abstractions they have learned in previous courses to the structuring of medium scale software: inheritance, generic types, polymorphism, procedural abstraction, and abstract recursive data structures (including abstract syntax trees as a program representation, and tools that manipulate them)."
