score,s1,s2
0.9208,This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.,This course is an introduction to relational databases and the general skills for designing and using them.
0.9200,Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course."
0.9322,"The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95.","To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course."
0.9208,"The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures.",This course is an introduction to relational databases and the general skills for designing and using them.
0.9256,It will also look at practical methods of estimating and measuring algorithm/architecture performance.,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course."
0.9290,"The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems.","The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security."
0.9090,appreciate the building blocks of scientific and engineering software.,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course."
0.9231,demonstrate a basic knowledge of numerical computing using an appropriate programming language.,This course is an introduction to relational databases and the general skills for designing and using them.
0.9216,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course."
0.9079,be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.,Describe the basic concepts of the relational model and understand its mathematical foundation;
0.9016,have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course."
0.9185,have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course."
0.9031,"be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance.",Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.
