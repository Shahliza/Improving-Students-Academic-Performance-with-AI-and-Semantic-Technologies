score,s1,s2
0.8962,A practically oriented introduction to programming paradigms for parallel computers.,"We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.9217,"Considers definitions of program efficiency on parallel computers, addresses the modelling, analysis and measurement of program performance.","Knowledge, practices and tools considered in this course will include process models, requirements engineering, design, modelling and user experience."
0.9063,"Description, implementation and use of parallel programming languages, parallel features of operating systems, library routines and applications.","Knowledge, practices and tools considered in this course will include process models, requirements engineering, design, modelling and user experience."
0.8926,Be proficient at programming multiple parallel machines in more than one special programming language or programming system.,"We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.9220,Be able to descriptively compare the performance of different programs and methods on one machine,"We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.9326,Demonstrate advanced knowledge of the elements of parallel programming language and system implementation.,"Knowledge, practices and tools considered in this course will include process models, requirements engineering, design, modelling and user experience."
0.9078,Recall the history of parallel systems and describe the developments in the field.,This will be achieved by introducing students to important design methodologies.
