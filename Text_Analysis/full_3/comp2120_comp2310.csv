score,s1,s2
0.9189,This course is based on the foundations set by the previous course on computer organisation.,This will be achieved by introducing students to important design methodologies.
0.9099,It expands particularly into all forms of concurrent programming including aspects of massively parallel programming.,"We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.9446,"This course introduces all basic mechanisms to analyse, design, and manage concurrent, single computer-node (multicore) as well as distributed applications (e.g. as performance or dependability enhancements).","We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.9127,"Following on from the previous course, the fields of operating systems and networking will also be expanded on.",We will build on previous programming courses to deepen and broaden students' knowledge and understanding of the practices and tools used to build large software systems within complex environments.
0.8916,"On the operating system side aspects of security, scheduling algorithms and memory management are discussed.","We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.9156,More specific networking aspects follow on from message passing as a core concurrency construct.,"We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.9156,These include the basics of routing and dependable protocols.,"We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.8889,"Model, design and program concurrent systems.","Knowledge, practices and tools considered in this course will include process models, requirements engineering, design, modelling and user experience."
0.9339,"Select appropriate modeling techniques, tools and mechanisms to solve a range of problems in concurrent and distributed systems.","We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.8912,This includes the appropriate programming language and runtime environment for the task at hand.,"Demonstrate an understanding of the following key software engineering activities within the context of a realistic software engineering process (Requirements, Design, Construction, Architectures, Testing, verification and validation)"
0.8541,Analyse and debug concurrent programs.,We will build on previous programming courses to deepen and broaden students' knowledge and understanding of the practices and tools used to build large software systems within complex environments.
0.8953,"Understand the aspects of an operating system concerning scheduling, protection and memory management.","Demonstrate an understanding of the following key software engineering activities within the context of a realistic software engineering process (Requirements, Design, Construction, Architectures, Testing, verification and validation)"
0.9150,Employ message passing locally and over networks to construct distributed systems.,"We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.9257,Distinguish as well as connect conceptual concurrency with physical parallelism at all levels of a distributed system.,"We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.9146,Identify core aspects of operating systems and networks irrespective of the specific system at hand.,"We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
