score,s1,s2
0.9235,"Real-time and embedded systems are all around us. Controlling cars, trains, or aeroplanes, as well as mobile phones, cameras, or A/V equipment, embedded systems are a challenging and demanding part of computer science and engineering.","We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.9407,This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).,"We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.9283,It also delivers the principles of fault tolerant systems and highly reliable systems.,"We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.9264,"Techniques which are introduced include real-time calculus, real-time scheduling, elementary sensor data filtering and fusion methods, error recovery strategies, and graceful degradation methods.","Knowledge, practices and tools considered in this course will include process models, requirements engineering, design, modelling and user experience."
0.8810,Formulate real-time constraints.,"We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.9187,Employ standard real-time programming constructs.,"We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.9068,Develop a concept to handle the requests level of reliability.,"We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.8993,"Construct and implement an architecture for an asynchronous, distributed real-time system.","We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.9004,Understand and consider constraints from physical dynamical systems.,"Knowledge, practices and tools considered in this course will include process models, requirements engineering, design, modelling and user experience."
0.9186,Participate significantly in the enhancement of the reliability (or analysis) of safety critical systems.,"We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
