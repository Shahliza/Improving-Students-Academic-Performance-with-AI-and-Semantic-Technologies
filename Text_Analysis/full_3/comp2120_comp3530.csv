score,s1,s2
0.9148,"Society relies on many complex systems of interacting technology, people, processes, laws and other elements. Examples of such systems include air transport, telecommunications and energy supply.","Real-world software development is a complex and dynamic activity involving people, technology and processes interacting within a complex environment of clients, users and other stakeholders while being observant of technological, physical, social, legal, and ethical constraints."
0.9299,"Systems Engineering is a holistic, multi-disciplinary and well established approach to the engineering of these complex systems.","We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.9319,"Because software is a critical component of such systems, Software Engineers will often work in Systems Engineering teams.","We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.8876,Systems concepts.,"Knowledge, practices and tools considered in this course will include process models, requirements engineering, design, modelling and user experience."
0.9240,The Systems Engineering life-cycle and processes.,"Knowledge, practices and tools considered in this course will include process models, requirements engineering, design, modelling and user experience."
0.9507,"Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification.","Knowledge, practices and tools considered in this course will include process models, requirements engineering, design, modelling and user experience."
0.9107,"Preliminary system design: subsystem design requirements, design review.","Demonstrate an understanding of the following key software engineering activities within the context of a realistic software engineering process (Requirements, Design, Construction, Architectures, Testing, verification and validation)"
0.9402,"Detailed design and development: Detailed design requirements and design engineering activities; review and feedback, and incorporation of design changes.","Knowledge, practices and tools considered in this course will include process models, requirements engineering, design, modelling and user experience."
0.8991,"Design testing, evaluation and validation.","Demonstrate an understanding of the following key software engineering activities within the context of a realistic software engineering process (Requirements, Design, Construction, Architectures, Testing, verification and validation)"
0.9145,Design for sustainability: approaches that integrate sustainability principles into the design process.,This will be achieved by introducing students to important design methodologies.
0.9060,Integration of Systems Engineering and Software Engineering activities.,"Knowledge, practices and tools considered in this course will include process models, requirements engineering, design, modelling and user experience."
0.9268,describe the holistic and multi-disciplinary nature of complex engineering projects.,"We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.8943,describe the Systems Engineering life-cycle.,"Knowledge, practices and tools considered in this course will include process models, requirements engineering, design, modelling and user experience."
0.9182,identify and explain the activities involved in each phase of the Systems Engineering life-cycle.,"Demonstrate an understanding of the following key software engineering activities within the context of a realistic software engineering process (Requirements, Design, Construction, Architectures, Testing, verification and validation)"
0.9023,explain the role of Software Engineering within the broader context of Systems Engineering.,"Demonstrate an understanding of the following key software engineering activities within the context of a realistic software engineering process (Requirements, Design, Construction, Architectures, Testing, verification and validation)"
0.9268,Students will also improve their ability to understand and solve complex and ill-defined problems.,We will build on previous programming courses to deepen and broaden students' knowledge and understanding of the practices and tools used to build large software systems within complex environments.
0.9267,Students will also improve their ability to communicate with the multi-disciplinary engineering team and the community at large.,We will build on previous programming courses to deepen and broaden students' knowledge and understanding of the practices and tools used to build large software systems within complex environments.
0.9323,Students will also improve their understanding of and commitment to ethical and professional responsibilities.,"This course will empower students with the ability and confidence necessary to exercise critical thinking and professional judgment to select and apply appropriate knowledge, practices and tools to the development of non-trivial software systems."
0.9165,Students will also improve their ability to function as an individual and as a team leader and member in multi-disciplinary and multi-cultural teams.,Students will learn how practices and tools can be adapted to suit specific project needs and contexts.
