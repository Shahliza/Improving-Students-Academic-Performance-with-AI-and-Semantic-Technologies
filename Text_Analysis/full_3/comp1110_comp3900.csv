score,s1,s2
0.9270,"This course will provide an introduction to the field of Human-Computer Interaction and will introduce students to key interaction and experience design paradigms, approaches and methods.","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.9408,"The course will equip students with theory, methods, and techniques to investigate different design situations, develop novel design ideas, and ask critical questions about the role of technology in society.","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.9216,"Characterise key aspects of human-computer interaction, such as interaction design, the user experience, and user interfaces.","Understand the basics of event-driven programming, and its use in constructing GUIs"
0.9163,"Differentiate between design paradigms, approaches, and methods and explain their applicability to different design contexts.","The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.9396,"Investigate the activities and practices of a design space using design research methods, to identify opportunities and issues for design intervention.","Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.9379,"Ideate, prototype, and evaluate novel technology design ideas and their use in context.","Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.9103,"Critically reflect on the role of technology in society, including issues of power, agency, and representation in design.","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
