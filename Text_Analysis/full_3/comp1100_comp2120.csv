score,s1,s2
0.8708,"Real-world software development is a complex and dynamic activity involving people, technology and processes interacting within a complex environment of clients, users and other stakeholders while being observant of technological, physical, social, legal, and ethical constraints.",It introduces students to the field of computer science as a discipline for solving problems through computation and provides the foundation for more advanced courses on programming and software development.
0.9320,"This course will empower students with the ability and confidence necessary to exercise critical thinking and professional judgment to select and apply appropriate knowledge, practices and tools to the development of non-trivial software systems.",It introduces students to the field of computer science as a discipline for solving problems through computation and provides the foundation for more advanced courses on programming and software development.
0.9340,This will be achieved by introducing students to important design methodologies.,The course also introduces students to standard productivity tools for software development that will be used throughout the course and remainder of the computer science degree.
0.9468,We will build on previous programming courses to deepen and broaden students' knowledge and understanding of the practices and tools used to build large software systems within complex environments.,It introduces students to the field of computer science as a discipline for solving problems through computation and provides the foundation for more advanced courses on programming and software development.
0.9191,"We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value.",Describe and apply alternative computational paradigms to simple problems.
0.9162,Students will learn how practices and tools can be adapted to suit specific project needs and contexts.,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.9342,"Knowledge, practices and tools considered in this course will include process models, requirements engineering, design, modelling and user experience.",The course also introduces students to standard productivity tools for software development that will be used throughout the course and remainder of the computer science degree.
0.9317,"Demonstrate an understanding of the following key software engineering activities within the context of a realistic software engineering process (Requirements, Design, Construction, Architectures, Testing, verification and validation)","Describe, understand and evolve programs, via documentation, testing, and debugging."
0.9160,"Demonstrate an ability to use professional judgement to select and apply appropriate knowledge, practices and tools to analyse, design and solve problems relating to the software engineering activities listed above.",Describe and apply alternative computational paradigms to simple problems.
0.9085,Demonstrate how practices and tools can be adapted to suit specific project needs and contexts.,Describe and apply alternative computational paradigms to simple problems.
