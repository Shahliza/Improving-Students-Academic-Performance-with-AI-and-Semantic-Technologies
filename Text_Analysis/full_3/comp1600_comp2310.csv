score,s1,s2
0.8769,This course is based on the foundations set by the previous course on computer organisation.,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.9056,It expands particularly into all forms of concurrent programming including aspects of massively parallel programming.,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.9164,"This course introduces all basic mechanisms to analyse, design, and manage concurrent, single computer-node (multicore) as well as distributed applications (e.g. as performance or dependability enhancements).","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8669,"Following on from the previous course, the fields of operating systems and networking will also be expanded on.","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8866,"On the operating system side aspects of security, scheduling algorithms and memory management are discussed.","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.9052,More specific networking aspects follow on from message passing as a core concurrency construct.,Prove simple programs correct using Hoare Logic.
0.9145,These include the basics of routing and dependable protocols.,Prove simple programs correct using Hoare Logic.
0.8855,"Model, design and program concurrent systems.",Design a Turing Machine which will accomplish simple tasks.
0.9128,"Select appropriate modeling techniques, tools and mechanisms to solve a range of problems in concurrent and distributed systems.","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8813,This includes the appropriate programming language and runtime environment for the task at hand.,Design a Turing Machine which will accomplish simple tasks.
0.8851,Analyse and debug concurrent programs.,Design a Turing Machine which will accomplish simple tasks.
0.8917,"Understand the aspects of an operating system concerning scheduling, protection and memory management.",Design a Turing Machine which will accomplish simple tasks.
0.9036,Employ message passing locally and over networks to construct distributed systems.,Design a Turing Machine which will accomplish simple tasks.
0.9079,Distinguish as well as connect conceptual concurrency with physical parallelism at all levels of a distributed system.,Prove simple programs correct using Hoare Logic.
0.8875,Identify core aspects of operating systems and networks irrespective of the specific system at hand.,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
