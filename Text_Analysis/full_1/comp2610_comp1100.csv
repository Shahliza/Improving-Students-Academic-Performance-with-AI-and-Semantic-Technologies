score,s1,s2
0.8775,This course is the first of three core computer science courses on programming.,Know the basic concepts regarding communications over noisy channels.
0.9039,It introduces students to the field of computer science as a discipline for solving problems through computation and provides the foundation for more advanced courses on programming and software development.,"Understand and apply fundamental concepts in information theory such as probability, entropy, information content and their inter-relationships."
0.9121,"Data structures and algorithms, the key concepts at the core of computer science, receive their first treatment in this course. The course addresses both functional and imperative programming paradigms.","This course provides an introduction to information theory, studying fundamental concepts such as probability, information, and entropy and examining their applications in the areas of data compression, coding, communications, pattern recognition and probabilistic inference."
0.9184,"The course covers functional programming in depth, developing the core idea of functions operating on data structures.","Understand and apply fundamental concepts in information theory such as probability, entropy, information content and their inter-relationships."
0.9034,"Students learn the organization of programming languages using types, how programs are evaluated (reduction), functional composition, recursive functions, algebraic data types, pattern matching, parametric polymorphism, higher-order functions.","Understand and apply fundamental concepts in information theory such as probability, entropy, information content and their inter-relationships."
0.9407,"Students also gain exposure to structural induction and proof, introduction to asymptotic analysis of basic data structures, abstract data types, modules, laziness, and streams.","Understand and apply fundamental concepts in information theory such as probability, entropy, information content and their inter-relationships."
0.9167,The functional paradigm demonstrates elegant solutions to many programming problems.,Understand the relationship of information theoretical principles and Bayesian inference in data modelling and pattern recognition.
0.9005,"The course also introduces imperative programming as an alternative paradigm to functional programming, highlighting similarities and contrasting differences.","Understand some key theorems and inequalities that quantify essential limitations on compression, communication and inference."
0.9045,"Students learn the basic ingredients of imperative programs: mutable variables, sequencing, conditionals, iteration, functions, eager evaluation, and side effects.","Understand and apply fundamental concepts in information theory such as probability, entropy, information content and their inter-relationships."
0.8924,The course also introduces students to standard productivity tools for software development that will be used throughout the course and remainder of the computer science degree.,Know the basic concepts regarding communications over noisy channels.
0.8898,These include distributed software revision control systems.,Understand the principles of data compression.
0.8785,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience.",Know the basic concepts regarding communications over noisy channels.
0.9136,"Apply fundamental programming concepts, using a functional programming language, to solve simple problems.",Implement and analyse basic coding and compression algorithms.
0.9274,Understand basic types and the benefits of static typing.,Know the basic concepts regarding communications over noisy channels.
0.8802,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation.",Understand the relationship of information theoretical principles and Bayesian inference in data modelling and pattern recognition.
0.9100,"Describe, understand and evolve programs, via documentation, testing, and debugging.",Implement and analyse basic coding and compression algorithms.
0.9158,"Discuss, use, and apply the fundamentals of data structures, algorithms, and design; create, implement, and debug algorithms for solving simple problems, including recursively, using divide-and-conquer, and via decomposition.",Implement and analyse basic coding and compression algorithms.
0.9068,"Discuss basic algorithmic analysis for simple algorithms; determine appropriate algorithmic approaches to a problem (brute-force, greedy, divide-and-conquer, recursive backtracking, heuristic, dynamic programming).",Understand the relationship of information theoretical principles and Bayesian inference in data modelling and pattern recognition.
0.9356,Describe and apply alternative computational paradigms to simple problems.,Implement and analyse basic coding and compression algorithms.
0.9013,Understand the legal context for protection of software as intellectual property.,Understand the principles of data compression.
