score,s1,s2
0.9276,This course provides basic approaches for designing and analysing algorithms and data structures.,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.9040,It will focus on two fundamental problems in computing: Sorting and searching.,Design a Turing Machine which will accomplish simple tasks.
0.9295,"It will cover various data structures and algorithm design techniques for solving these two classes of problems, as well as basic performance measures and analysis techniques for solving such problems.","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.9241,"Display an advanced understanding of a variety of algorithms, including linear selection, minimum spanning trees, single source shortest path, Huffman coding, etc, with real-life applications and the resource requirements.","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.9221,"Expertly apply the most effective algorithmic techniques including dynamic programming, greedy policy, and divide-and-conquer, to solve some practical problems.",Prove simple programs correct using Hoare Logic.
0.9086,Define and analyse time and space complexities of algorithms.,Prove simple programs correct using Hoare Logic.
0.9088,"Demonstrate experience in the design and implementation of algorithms for practical problems, using languages like C, C++.","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
