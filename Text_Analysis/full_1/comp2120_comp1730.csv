score,s1,s2
0.9336,This course teaches introductory programming within a problem solving framework applicable to the sciences.,We will build on previous programming courses to deepen and broaden students' knowledge and understanding of the practices and tools used to build large software systems within complex environments.
0.9338,"The course emphasises technical programming, the simulation of scientific systems and the processing of scientific data.","Knowledge, practices and tools considered in this course will include process models, requirements engineering, design, modelling and user experience."
0.9042,There is an emphasis on designing and writing correct code.,This will be achieved by introducing students to important design methodologies.
0.9247,Testing and debugging are seen as integral to the programming enterprise.,"Demonstrate an understanding of the following key software engineering activities within the context of a realistic software engineering process (Requirements, Design, Construction, Architectures, Testing, verification and validation)"
0.9059,Both top-down and object oriented design are taught.,"Knowledge, practices and tools considered in this course will include process models, requirements engineering, design, modelling and user experience."
0.9024,There will be an introduction to widely-used computer science algorithms and to machine architecture.,This will be achieved by introducing students to important design methodologies.
0.9305,The course will be taught using one or more programming languages which are widely applicable to scientific work.,This will be achieved by introducing students to important design methodologies.
0.9200,"Design, write and debug small programs to solve practical problems of a scientific nature.","Demonstrate an ability to use professional judgement to select and apply appropriate knowledge, practices and tools to analyse, design and solve problems relating to the software engineering activities listed above."
0.9131,Have a practical understanding of the processing of scientific data.,We will build on previous programming courses to deepen and broaden students' knowledge and understanding of the practices and tools used to build large software systems within complex environments.
0.9101,Be able to describe and design small computer programs using both procedural and object-oriented methodologies.,"We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value."
0.8900,Have an awareness of good program organisation.,This will be achieved by introducing students to important design methodologies.
0.9102,Have an understanding of some widely-used algorithms.,This will be achieved by introducing students to important design methodologies.
0.9119,Have an understanding of practical aspects of machine architecture including finite precision and rounding errors.,"Knowledge, practices and tools considered in this course will include process models, requirements engineering, design, modelling and user experience."
