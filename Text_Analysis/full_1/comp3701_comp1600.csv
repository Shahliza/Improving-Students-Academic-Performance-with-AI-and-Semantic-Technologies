score,s1,s2
0.8798,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties.",Demonstrate a thorough understanding of the fundamental principles underlying the defence of systems and networks.
0.8733,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages.",Demonstrate a thorough understanding of the fundamental principles underlying the defence of systems and networks.
0.8772,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic).",Demonstrate a thorough understanding of the fundamental principles underlying the defence of systems and networks.
0.8069,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts.",Demonstrate a thorough understanding of the fundamental principles underlying the defence of systems and networks.
0.8601,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle.",Demonstrate a thorough understanding of the fundamental principles underlying the defence of systems and networks.
0.8888,Prove simple programs correct using Hoare Logic.,Operate defensive network architectures and systems in a practical context.
0.8900,Design a Turing Machine which will accomplish simple tasks.,Demonstrate a thorough understanding of the fundamental principles underlying the defence of systems and networks.
