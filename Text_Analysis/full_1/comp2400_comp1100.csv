score,s1,s2
0.9047,This course is the first of three core computer science courses on programming.,This course is an introduction to relational databases and the general skills for designing and using them.
0.9349,It introduces students to the field of computer science as a discipline for solving problems through computation and provides the foundation for more advanced courses on programming and software development.,This course is an introduction to relational databases and the general skills for designing and using them.
0.9280,"Data structures and algorithms, the key concepts at the core of computer science, receive their first treatment in this course. The course addresses both functional and imperative programming paradigms.",This course is an introduction to relational databases and the general skills for designing and using them.
0.9354,"The course covers functional programming in depth, developing the core idea of functions operating on data structures.",Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.
0.9370,"Students learn the organization of programming languages using types, how programs are evaluated (reduction), functional composition, recursive functions, algebraic data types, pattern matching, parametric polymorphism, higher-order functions.","The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security."
0.9386,"Students also gain exposure to structural induction and proof, introduction to asymptotic analysis of basic data structures, abstract data types, modules, laziness, and streams.","The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security."
0.9267,The functional paradigm demonstrates elegant solutions to many programming problems.,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.
0.9299,"The course also introduces imperative programming as an alternative paradigm to functional programming, highlighting similarities and contrasting differences.","To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course."
0.9198,"Students learn the basic ingredients of imperative programs: mutable variables, sequencing, conditionals, iteration, functions, eager evaluation, and side effects.","The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security."
0.9368,The course also introduces students to standard productivity tools for software development that will be used throughout the course and remainder of the computer science degree.,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course."
0.9054,These include distributed software revision control systems.,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.
0.9161,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience.","To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course."
0.9237,"Apply fundamental programming concepts, using a functional programming language, to solve simple problems.",Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.
0.9164,Understand basic types and the benefits of static typing.,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.
0.9057,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation.","The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security."
0.9198,"Describe, understand and evolve programs, via documentation, testing, and debugging.",Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.
0.9260,"Discuss, use, and apply the fundamentals of data structures, algorithms, and design; create, implement, and debug algorithms for solving simple problems, including recursively, using divide-and-conquer, and via decomposition.","The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security."
0.9233,"Discuss basic algorithmic analysis for simple algorithms; determine appropriate algorithmic approaches to a problem (brute-force, greedy, divide-and-conquer, recursive backtracking, heuristic, dynamic programming).","The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security."
0.9313,Describe and apply alternative computational paradigms to simple problems.,Describe the basic concepts of the relational model and understand its mathematical foundation;
0.9000,Understand the legal context for protection of software as intellectual property.,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course."
