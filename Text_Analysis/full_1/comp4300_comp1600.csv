score,s1,s2
0.9222,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties.","Description, implementation and use of parallel programming languages, parallel features of operating systems, library routines and applications."
0.9060,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages.",Demonstrate advanced knowledge of the elements of parallel programming language and system implementation.
0.8977,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic).",Demonstrate advanced knowledge of the elements of parallel programming language and system implementation.
0.8620,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts.",Be able to descriptively compare the performance of different programs and methods on one machine
0.8919,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle.",Be able to descriptively compare the performance of different programs and methods on one machine
0.9174,Prove simple programs correct using Hoare Logic.,Demonstrate advanced knowledge of the elements of parallel programming language and system implementation.
0.9228,Design a Turing Machine which will accomplish simple tasks.,Be able to descriptively compare the performance of different programs and methods on one machine
