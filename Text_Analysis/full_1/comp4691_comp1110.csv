score,s1,s2
0.9021,This course introduces students to the fundamentals of software development with a substantial group software project at its center.,"This course provides foundations and plenty of exercises in practical optimisation problems, while covering all basic elements of optimisation including forms of constraint programming as well as variations on linear programming and convex optimisation."
0.9181,"Major foci are data structures, object oriented programming, and an introduction to software engineering.","This course provides foundations and plenty of exercises in practical optimisation problems, while covering all basic elements of optimisation including forms of constraint programming as well as variations on linear programming and convex optimisation."
0.9090,"Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction.",Be able to use a variety of meta-heuristics to escape local minima in a neighbourhood.
0.9041,"Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming.","This course provides foundations and plenty of exercises in practical optimisation problems, while covering all basic elements of optimisation including forms of constraint programming as well as variations on linear programming and convex optimisation."
0.9109,"Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing.","This course provides foundations and plenty of exercises in practical optimisation problems, while covering all basic elements of optimisation including forms of constraint programming as well as variations on linear programming and convex optimisation."
0.8963,The important role of standard libraries and their collection types will be emphasized. Â GUI programming will be introduced.,Be able to apply Linear Programming and Mixed-Integer Programming model to solve real-world problems.
0.9328,"The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types.","This course provides foundations and plenty of exercises in practical optimisation problems, while covering all basic elements of optimisation including forms of constraint programming as well as variations on linear programming and convex optimisation."
0.9225,The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.,Demonstrate an understanding of the propagation of a global constraint in a Constraint programming system.
0.8996,"The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced.","This course provides foundations and plenty of exercises in practical optimisation problems, while covering all basic elements of optimisation including forms of constraint programming as well as variations on linear programming and convex optimisation."
0.8872,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience.",Demonstrate an understanding of theoretical foundations of convex optimization and be able to use it to characterize optimal solutions to general problems.
0.9427,"Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems.",Be able to apply Linear Programming and Mixed-Integer Programming model to solve real-world problems.
0.9055,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management.",Demonstrate an understanding of the propagation of a global constraint in a Constraint programming system.
0.9075,"Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system.",Demonstrate an understanding of theoretical foundations of convex optimization and be able to use it to characterize optimal solutions to general problems.
0.9131,"Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type.",Demonstrate an understanding of the propagation of a global constraint in a Constraint programming system.
0.9261,"Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic).","This course provides foundations and plenty of exercises in practical optimisation problems, while covering all basic elements of optimisation including forms of constraint programming as well as variations on linear programming and convex optimisation."
0.9192,"Understand the basics of event-driven programming, and its use in constructing GUIs",Demonstrate an understanding of the propagation of a global constraint in a Constraint programming system.
0.9098,"Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools.",Be able to use a variety of meta-heuristics to escape local minima in a neighbourhood.
