score,s1,s2
0.9148,"Real-world software development is a complex and dynamic activity involving people, technology and processes interacting within a complex environment of clients, users and other stakeholders while being observant of technological, physical, social, legal, and ethical constraints.","Society relies on many complex systems of interacting technology, people, processes, laws and other elements. Examples of such systems include air transport, telecommunications and energy supply."
0.9323,"This course will empower students with the ability and confidence necessary to exercise critical thinking and professional judgment to select and apply appropriate knowledge, practices and tools to the development of non-trivial software systems.",Students will also improve their understanding of and commitment to ethical and professional responsibilities.
0.9145,This will be achieved by introducing students to important design methodologies.,Design for sustainability: approaches that integrate sustainability principles into the design process.
0.9268,We will build on previous programming courses to deepen and broaden students' knowledge and understanding of the practices and tools used to build large software systems within complex environments.,Students will also improve their ability to understand and solve complex and ill-defined problems.
0.9319,"We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value.","Because software is a critical component of such systems, Software Engineers will often work in Systems Engineering teams."
0.9266,Students will learn how practices and tools can be adapted to suit specific project needs and contexts.,Students will also improve their ability to understand and solve complex and ill-defined problems.
0.9507,"Knowledge, practices and tools considered in this course will include process models, requirements engineering, design, modelling and user experience.","Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification."
0.9431,"Demonstrate an understanding of the following key software engineering activities within the context of a realistic software engineering process (Requirements, Design, Construction, Architectures, Testing, verification and validation)","Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification."
0.9246,"Demonstrate an ability to use professional judgement to select and apply appropriate knowledge, practices and tools to analyse, design and solve problems relating to the software engineering activities listed above.","Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification."
0.9114,Demonstrate how practices and tools can be adapted to suit specific project needs and contexts.,Design for sustainability: approaches that integrate sustainability principles into the design process.
