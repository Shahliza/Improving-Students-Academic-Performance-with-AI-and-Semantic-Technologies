score,s1,s2
0.8942,"Software Security covers advanced techniques in software vulnerability assessment, discovery and mitigation.","define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.9352,"These include: common patterns in software vulnerabilities, such as stack-based buffer overflow, format string vulnerabilities, and heap-based vulnerabilities; exploitation techniques such as code injection, return-oriented-programming; techniques for vulnerability discovery, such as program binaries reverse engineering, fuzzing and symbolic execution; and mitigation techniques such as memory protection mechanisms, input sanitation, and control flow integrity protection.","The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.9369,"The course features hands-on lectures and labs to analyse software vulnerabilities, both in the source code and in program binaries, and design and implement appropriate mitigation techniques.","identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.9184,Demonstrate a thorough understanding of common sources of vulnerabilities in software.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.9210,Demonstrate a thorough understanding in exploitation techniques against software vulnerabilities and defensive techniques against these exploitations.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.9327,Demonstrate proficiency in software reverse engineering.,demonstrate experience in the design and implementation of a large software system.
0.9287,"Demonstrate proficiency in vulnerability discovery processes, from both source code and binary.","identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.9291,"Apply the vulnerability discovery techniques to real-world software, analyse their vulnerabilities and design and implement appropriate mitigation techniques.","identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
