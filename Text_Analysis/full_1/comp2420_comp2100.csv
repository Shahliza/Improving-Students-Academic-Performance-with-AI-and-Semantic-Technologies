score,s1,s2
0.9294,"This course continues to build on topics taught in the previous two courses. It focuses on construction of medium scale programs, using design patterns and tools that are used in the software development process.","Skills required for data analytics at massive levels – scalable data management on and off the cloud, parallel algorithms, statistical modeling, and proficiency with a complex ecosystem of tools and platforms – span a variety of disciplines and are not easy to obtain through conventional curricula."
0.9241,Students will gain further experience with industry standard revision control and integrated development environment (IDE) tools.,"Skills required for data analytics at massive levels – scalable data management on and off the cloud, parallel algorithms, statistical modeling, and proficiency with a complex ecosystem of tools and platforms – span a variety of disciplines and are not easy to obtain through conventional curricula."
0.9446,"Students will learn appropriate application of programming abstractions they have learned in previous courses to the structuring of medium scale software: inheritance, generic types, polymorphism, procedural abstraction, and abstract recursive data structures (including abstract syntax trees as a program representation, and tools that manipulate them).","Tour the basic techniques of data science, including both SQL and NoSQL solutions for massive data management, basic statistical modeling (e.g., descriptive statistics, linear and non-linear regression), algorithms for machine learning and optimization, and fundamentals of knowledge representation and search."
0.9398,"The course also covers more advanced data structures, such as priority queues, B-trees, red-black trees, and AVL trees, and deepens understanding of appropriate algorithmic strategies.","Tour the basic techniques of data science, including both SQL and NoSQL solutions for massive data management, basic statistical modeling (e.g., descriptive statistics, linear and non-linear regression), algorithms for machine learning and optimization, and fundamentals of knowledge representation and search."
0.9198,The course also treats intellectual property considerations in software development and deployment.,"Demonstrate basic knowledge and understanding of descriptive and predictive data analysis methods, optimization and search, and knowledge representation."
0.9318,Apply fundamental programming concepts for medium scale programs.,Apply their knowledge to a given problem domain and articulate potential data analysis problems.
0.9208,"Understand basic types and the benefits of static typing, with understanding of generics, subtyping, and overloading, and their roles in structuring programs","Demonstrate a conceptual understanding of database systems and architecture, data models and declarative query languages"
0.9258,"Map programming language abstractions through to execution environment; use non-source (text) internal representations of programs (e.g., abstract syntax trees); sketch low-level run-time representations of core language constructs (objects and closures).","Demonstrate a conceptual understanding of database systems and architecture, data models and declarative query languages"
0.9377,"Describe contractual specifications, analyse documentation and specifications against other’s code, develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; explain the importance of correctness for quality software; understand common coding errors and how to avoid them; practice fundamental defensive programming; understand principles of secure design.","Skills required for data analytics at massive levels – scalable data management on and off the cloud, parallel algorithms, statistical modeling, and proficiency with a complex ecosystem of tools and platforms – span a variety of disciplines and are not easy to obtain through conventional curricula."
0.9380,"Use, implement, and evaluate more advanced data structures and associated algorithms; discuss factors other than computational efficiency for evaluating software; create, implement, debug, and evaluate algorithms for solving problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type; analyse design and implementation alternatives.","Demonstrate basic knowledge and understanding of descriptive and predictive data analysis methods, optimization and search, and knowledge representation."
0.9228,"Apply basic algorithmic analysis to simple algorithms; use big-O notation formally, upper lower, and expected case bounds; use and solve recurrence relations; use appropriate algorithmic approaches to solve problems (brute-force, greedy, divide-and-conquer, recursive backtracking, heuristic, dynamic programming, branch-and-bound).","Tour the basic techniques of data science, including both SQL and NoSQL solutions for massive data management, basic statistical modeling (e.g., descriptive statistics, linear and non-linear regression), algorithms for machine learning and optimization, and fundamentals of knowledge representation and search."
0.9326,Explain how system components contribute to performance; understand Amdahl’s law and its limitations; design and conduct performance experiments; use software tools to profile and measure program performance,"Demonstrate basic knowledge and understanding of descriptive and predictive data analysis methods, optimization and search, and knowledge representation."
0.9351,"Understand, apply, and analyse state and state machines in expressing computations.","Demonstrate basic knowledge and understanding of descriptive and predictive data analysis methods, optimization and search, and knowledge representation."
0.9315,Understand fundamental concepts of GUIs and user interfaces; understand the basics of modeling and simulation.,"Demonstrate a conceptual understanding of database systems and architecture, data models and declarative query languages"
0.9336,"Contrast the concepts of copyright, patenting, and trademarks as mechanisms for protecting intellectual property, within the legal context for these mechanisms;  understand, analyse, and evaluate ethical/social tradeoffs in technical decisions, evaluating stakeholder positions.","Identify potential pitfalls, and social and ethical implications of data science."
