score,s1,s2
0.8923,Artificial intelligence is the science that studies and develops methods of making computers more /intelligent/.,"Understand, apply, and analyse state and state machines in expressing computations."
0.9359,"The focus of this course is on core AI techniques for search, knowledge representation and reasoning, planning, and designing intelligent agents.","This course continues to build on topics taught in the previous two courses. It focuses on construction of medium scale programs, using design patterns and tools that are used in the software development process."
0.9247,"The course also aims to give an overview of the historical, philosophical, and logical foundations of AI.",The course also treats intellectual property considerations in software development and deployment.
0.9112,"Identify problems that are amenable to solution by AI methods, and which AI methods may be suited to solving a given problem.","Use, implement, and evaluate more advanced data structures and associated algorithms; discuss factors other than computational efficiency for evaluating software; create, implement, debug, and evaluate algorithms for solving problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type; analyse design and implementation alternatives."
0.9070,"Formalise a given problem in the language/framework of different AI methods (e.g., as a search problem, as a constraint satisfaction problem, as a planning problem, etc).","Use, implement, and evaluate more advanced data structures and associated algorithms; discuss factors other than computational efficiency for evaluating software; create, implement, debug, and evaluate algorithms for solving problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type; analyse design and implementation alternatives."
0.9296,"Implement basic AI algorithms (e.g., standard search or constraint propagation algorithms).","The course also covers more advanced data structures, such as priority queues, B-trees, red-black trees, and AVL trees, and deepens understanding of appropriate algorithmic strategies."
0.9377,"Design and perform an empirical evaluation of different algorithms on a problem formalisation, and state the conclusions that the evaluation supports.","Use, implement, and evaluate more advanced data structures and associated algorithms; discuss factors other than computational efficiency for evaluating software; create, implement, debug, and evaluate algorithms for solving problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type; analyse design and implementation alternatives."
