score,s1,s2
0.8824,This course is the first of three core computer science courses on programming.,"This course studies the standard models for the layered approach to communication between autonomous machines in a network, and the main characteristics of data transmission across various physical link types."
0.9308,It introduces students to the field of computer science as a discipline for solving problems through computation and provides the foundation for more advanced courses on programming and software development.,"It considers how to design networks and protocols for diverse situations, analyses several application and support protocols from a distributed systems viewpoint, and identifies significant problem areas in networked communications."
0.9284,"Data structures and algorithms, the key concepts at the core of computer science, receive their first treatment in this course. The course addresses both functional and imperative programming paradigms.","It considers how to design networks and protocols for diverse situations, analyses several application and support protocols from a distributed systems viewpoint, and identifies significant problem areas in networked communications."
0.9376,"The course covers functional programming in depth, developing the core idea of functions operating on data structures.","It considers how to design networks and protocols for diverse situations, analyses several application and support protocols from a distributed systems viewpoint, and identifies significant problem areas in networked communications."
0.9069,"Students learn the organization of programming languages using types, how programs are evaluated (reduction), functional composition, recursive functions, algebraic data types, pattern matching, parametric polymorphism, higher-order functions.","It considers how to design networks and protocols for diverse situations, analyses several application and support protocols from a distributed systems viewpoint, and identifies significant problem areas in networked communications."
0.9332,"Students also gain exposure to structural induction and proof, introduction to asymptotic analysis of basic data structures, abstract data types, modules, laziness, and streams.","It considers how to design networks and protocols for diverse situations, analyses several application and support protocols from a distributed systems viewpoint, and identifies significant problem areas in networked communications."
0.9308,The functional paradigm demonstrates elegant solutions to many programming problems.,"It considers how to design networks and protocols for diverse situations, analyses several application and support protocols from a distributed systems viewpoint, and identifies significant problem areas in networked communications."
0.9316,"The course also introduces imperative programming as an alternative paradigm to functional programming, highlighting similarities and contrasting differences.","It considers how to design networks and protocols for diverse situations, analyses several application and support protocols from a distributed systems viewpoint, and identifies significant problem areas in networked communications."
0.8947,"Students learn the basic ingredients of imperative programs: mutable variables, sequencing, conditionals, iteration, functions, eager evaluation, and side effects.","It considers how to design networks and protocols for diverse situations, analyses several application and support protocols from a distributed systems viewpoint, and identifies significant problem areas in networked communications."
0.9160,The course also introduces students to standard productivity tools for software development that will be used throughout the course and remainder of the computer science degree.,"Describe and analyse various related technical, administrative and social aspects of specific computer network protocols from standards documents and other primary materials found through research."
0.9124,These include distributed software revision control systems.,Program network communication services for client/server and other application layouts.
0.8872,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience.","Describe and analyse various related technical, administrative and social aspects of specific computer network protocols from standards documents and other primary materials found through research."
0.9237,"Apply fundamental programming concepts, using a functional programming language, to solve simple problems.","It considers how to design networks and protocols for diverse situations, analyses several application and support protocols from a distributed systems viewpoint, and identifies significant problem areas in networked communications."
0.9211,Understand basic types and the benefits of static typing.,Understand and describe the layered protocol model.
0.8901,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation.","Describe and analyse various related technical, administrative and social aspects of specific computer network protocols from standards documents and other primary materials found through research."
0.9149,"Describe, understand and evolve programs, via documentation, testing, and debugging.","It considers how to design networks and protocols for diverse situations, analyses several application and support protocols from a distributed systems viewpoint, and identifies significant problem areas in networked communications."
0.9233,"Discuss, use, and apply the fundamentals of data structures, algorithms, and design; create, implement, and debug algorithms for solving simple problems, including recursively, using divide-and-conquer, and via decomposition.","It considers how to design networks and protocols for diverse situations, analyses several application and support protocols from a distributed systems viewpoint, and identifies significant problem areas in networked communications."
0.9143,"Discuss basic algorithmic analysis for simple algorithms; determine appropriate algorithmic approaches to a problem (brute-force, greedy, divide-and-conquer, recursive backtracking, heuristic, dynamic programming).","It considers how to design networks and protocols for diverse situations, analyses several application and support protocols from a distributed systems viewpoint, and identifies significant problem areas in networked communications."
0.9467,Describe and apply alternative computational paradigms to simple problems.,"It considers how to design networks and protocols for diverse situations, analyses several application and support protocols from a distributed systems viewpoint, and identifies significant problem areas in networked communications."
0.9086,Understand the legal context for protection of software as intellectual property.,"Describe and analyse various related technical, administrative and social aspects of specific computer network protocols from standards documents and other primary materials found through research."
