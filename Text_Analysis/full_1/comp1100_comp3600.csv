score,s1,s2
0.9455,This course provides basic approaches for designing and analysing algorithms and data structures.,"The course covers functional programming in depth, developing the core idea of functions operating on data structures."
0.9184,It will focus on two fundamental problems in computing: Sorting and searching.,"The course covers functional programming in depth, developing the core idea of functions operating on data structures."
0.9319,"It will cover various data structures and algorithm design techniques for solving these two classes of problems, as well as basic performance measures and analysis techniques for solving such problems.",Describe and apply alternative computational paradigms to simple problems.
0.9533,"Display an advanced understanding of a variety of algorithms, including linear selection, minimum spanning trees, single source shortest path, Huffman coding, etc, with real-life applications and the resource requirements.","Students also gain exposure to structural induction and proof, introduction to asymptotic analysis of basic data structures, abstract data types, modules, laziness, and streams."
0.9661,"Expertly apply the most effective algorithmic techniques including dynamic programming, greedy policy, and divide-and-conquer, to solve some practical problems.","Discuss basic algorithmic analysis for simple algorithms; determine appropriate algorithmic approaches to a problem (brute-force, greedy, divide-and-conquer, recursive backtracking, heuristic, dynamic programming)."
0.9453,Define and analyse time and space complexities of algorithms.,Describe and apply alternative computational paradigms to simple problems.
0.9477,"Demonstrate experience in the design and implementation of algorithms for practical problems, using languages like C, C++.","Apply fundamental programming concepts, using a functional programming language, to solve simple problems."
