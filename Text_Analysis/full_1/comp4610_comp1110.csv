score,s1,s2
0.9583,This course introduces students to the fundamentals of software development with a substantial group software project at its center.,In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
0.9333,"Major foci are data structures, object oriented programming, and an introduction to software engineering.","In this course students will learn about fundamental algorithms, data structures and programming models used in 3D graphics applications."
0.9478,"Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction.",In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
0.9321,"Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming.",In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
0.9025,"Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing.","Construct and manipulate complex models, geometries and scene graphs in both 2D and 3D"
0.9174,The important role of standard libraries and their collection types will be emphasized. Â GUI programming will be introduced.,"In this course students will learn about fundamental algorithms, data structures and programming models used in 3D graphics applications."
0.9352,"The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types.","In this course students will learn about fundamental algorithms, data structures and programming models used in 3D graphics applications."
0.9229,The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.,"In this course students will learn about fundamental algorithms, data structures and programming models used in 3D graphics applications."
0.9185,"The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced.",In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
0.9359,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience.",In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
0.9365,"Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems.",In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
0.8888,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management.",Implement computer graphics algorithms in a shader language
0.9207,"Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system.",In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
0.9043,"Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type.","Construct and manipulate complex models, geometries and scene graphs in both 2D and 3D"
0.8943,"Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic).","In this course students will learn about fundamental algorithms, data structures and programming models used in 3D graphics applications."
0.9308,"Understand the basics of event-driven programming, and its use in constructing GUIs","In this course students will learn about fundamental algorithms, data structures and programming models used in 3D graphics applications."
0.9315,"Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools.",In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
