score,s1,s2
0.9459,"This course continues to build on topics taught in the previous two courses. It focuses on construction of medium scale programs, using design patterns and tools that are used in the software development process.",In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
0.9387,Students will gain further experience with industry standard revision control and integrated development environment (IDE) tools.,In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
0.9330,"Students will learn appropriate application of programming abstractions they have learned in previous courses to the structuring of medium scale software: inheritance, generic types, polymorphism, procedural abstraction, and abstract recursive data structures (including abstract syntax trees as a program representation, and tools that manipulate them).","In this course students will learn about fundamental algorithms, data structures and programming models used in 3D graphics applications."
0.9159,"The course also covers more advanced data structures, such as priority queues, B-trees, red-black trees, and AVL trees, and deepens understanding of appropriate algorithmic strategies.","Construct and manipulate complex models, geometries and scene graphs in both 2D and 3D"
0.9461,The course also treats intellectual property considerations in software development and deployment.,In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
0.9360,Apply fundamental programming concepts for medium scale programs.,In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
0.8895,"Understand basic types and the benefits of static typing, with understanding of generics, subtyping, and overloading, and their roles in structuring programs","Construct and manipulate complex models, geometries and scene graphs in both 2D and 3D"
0.9138,"Map programming language abstractions through to execution environment; use non-source (text) internal representations of programs (e.g., abstract syntax trees); sketch low-level run-time representations of core language constructs (objects and closures).",Implement computer graphics algorithms in a shader language
0.9200,"Describe contractual specifications, analyse documentation and specifications against other’s code, develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; explain the importance of correctness for quality software; understand common coding errors and how to avoid them; practice fundamental defensive programming; understand principles of secure design.",In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
0.9183,"Use, implement, and evaluate more advanced data structures and associated algorithms; discuss factors other than computational efficiency for evaluating software; create, implement, debug, and evaluate algorithms for solving problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type; analyse design and implementation alternatives.","Construct and manipulate complex models, geometries and scene graphs in both 2D and 3D"
0.8854,"Apply basic algorithmic analysis to simple algorithms; use big-O notation formally, upper lower, and expected case bounds; use and solve recurrence relations; use appropriate algorithmic approaches to solve problems (brute-force, greedy, divide-and-conquer, recursive backtracking, heuristic, dynamic programming, branch-and-bound).","Construct and manipulate complex models, geometries and scene graphs in both 2D and 3D"
0.9127,Explain how system components contribute to performance; understand Amdahl’s law and its limitations; design and conduct performance experiments; use software tools to profile and measure program performance,In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
0.9274,"Understand, apply, and analyse state and state machines in expressing computations.","Construct and manipulate complex models, geometries and scene graphs in both 2D and 3D"
0.9348,Understand fundamental concepts of GUIs and user interfaces; understand the basics of modeling and simulation.,"In this course students will learn about fundamental algorithms, data structures and programming models used in 3D graphics applications."
0.9136,"Contrast the concepts of copyright, patenting, and trademarks as mechanisms for protecting intellectual property, within the legal context for these mechanisms;  understand, analyse, and evaluate ethical/social tradeoffs in technical decisions, evaluating stakeholder positions.",In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
