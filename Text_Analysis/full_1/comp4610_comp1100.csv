score,s1,s2
0.9245,This course is the first of three core computer science courses on programming.,In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
0.9447,It introduces students to the field of computer science as a discipline for solving problems through computation and provides the foundation for more advanced courses on programming and software development.,In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
0.9325,"Data structures and algorithms, the key concepts at the core of computer science, receive their first treatment in this course. The course addresses both functional and imperative programming paradigms.","In this course students will learn about fundamental algorithms, data structures and programming models used in 3D graphics applications."
0.9380,"The course covers functional programming in depth, developing the core idea of functions operating on data structures.","In this course students will learn about fundamental algorithms, data structures and programming models used in 3D graphics applications."
0.9111,"Students learn the organization of programming languages using types, how programs are evaluated (reduction), functional composition, recursive functions, algebraic data types, pattern matching, parametric polymorphism, higher-order functions.","In this course students will learn about fundamental algorithms, data structures and programming models used in 3D graphics applications."
0.9250,"Students also gain exposure to structural induction and proof, introduction to asymptotic analysis of basic data structures, abstract data types, modules, laziness, and streams.","In this course students will learn about fundamental algorithms, data structures and programming models used in 3D graphics applications."
0.9224,The functional paradigm demonstrates elegant solutions to many programming problems.,In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
0.9307,"The course also introduces imperative programming as an alternative paradigm to functional programming, highlighting similarities and contrasting differences.",In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
0.8937,"Students learn the basic ingredients of imperative programs: mutable variables, sequencing, conditionals, iteration, functions, eager evaluation, and side effects.","In this course students will learn about fundamental algorithms, data structures and programming models used in 3D graphics applications."
0.9561,The course also introduces students to standard productivity tools for software development that will be used throughout the course and remainder of the computer science degree.,In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
0.8948,These include distributed software revision control systems.,Computer graphics are an essential part of modern software.
0.9359,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience.",In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
0.9334,"Apply fundamental programming concepts, using a functional programming language, to solve simple problems.","In this course students will learn about fundamental algorithms, data structures and programming models used in 3D graphics applications."
0.9057,Understand basic types and the benefits of static typing.,"In this course students will learn about fundamental algorithms, data structures and programming models used in 3D graphics applications."
0.8710,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation.","These key concepts in computer graphics programming will be covered from their mathematical foundations through to their application in domains such as data visualisation, virtual reality, computer games and film animation/VFX."
0.9012,"Describe, understand and evolve programs, via documentation, testing, and debugging.","In this course students will learn about fundamental algorithms, data structures and programming models used in 3D graphics applications."
0.9093,"Discuss, use, and apply the fundamentals of data structures, algorithms, and design; create, implement, and debug algorithms for solving simple problems, including recursively, using divide-and-conquer, and via decomposition.","In this course students will learn about fundamental algorithms, data structures and programming models used in 3D graphics applications."
0.8962,"Discuss basic algorithmic analysis for simple algorithms; determine appropriate algorithmic approaches to a problem (brute-force, greedy, divide-and-conquer, recursive backtracking, heuristic, dynamic programming).","These key concepts in computer graphics programming will be covered from their mathematical foundations through to their application in domains such as data visualisation, virtual reality, computer games and film animation/VFX."
0.9364,Describe and apply alternative computational paradigms to simple problems.,In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
0.9073,Understand the legal context for protection of software as intellectual property.,In this course students will explore these concepts through practical implementation in a modern computer graphics software context.
