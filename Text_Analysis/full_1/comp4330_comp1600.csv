score,s1,s2
0.9142,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties.",This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).
0.9021,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages.","Techniques which are introduced include real-time calculus, real-time scheduling, elementary sensor data filtering and fusion methods, error recovery strategies, and graceful degradation methods."
0.8988,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic).",This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).
0.8602,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts.","Construct and implement an architecture for an asynchronous, distributed real-time system."
0.8876,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle.","Techniques which are introduced include real-time calculus, real-time scheduling, elementary sensor data filtering and fusion methods, error recovery strategies, and graceful degradation methods."
0.9219,Prove simple programs correct using Hoare Logic.,Employ standard real-time programming constructs.
0.9181,Design a Turing Machine which will accomplish simple tasks.,Formulate real-time constraints.
