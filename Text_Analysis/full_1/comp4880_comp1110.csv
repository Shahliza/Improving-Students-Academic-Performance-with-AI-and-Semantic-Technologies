score,s1,s2
0.9368,This course introduces students to the fundamentals of software development with a substantial group software project at its center.,Communicate the process of formulating and solving computational social science problems to a team of professionals with computing and/or social sciences.
0.9213,"Major foci are data structures, object oriented programming, and an introduction to software engineering.",Communicate the process of formulating and solving computational social science problems to a team of professionals with computing and/or social sciences.
0.9362,"Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction.",Communicate the process of formulating and solving computational social science problems to a team of professionals with computing and/or social sciences.
0.9101,"Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming.",The course equips the students with in-depth knowledge and hands-on experience in working with network data to study social processes at both the individual and aggregate levels.
0.9239,"Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing.","This includes random graph models, homophily and friendship paradox, influence and contagion in networks, markets and network games, network resilence."
0.9130,The important role of standard libraries and their collection types will be emphasized. Â GUI programming will be introduced.,"Analyze results from network algorithms, and articulate their limitations."
0.9290,"The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types.","Analyze results from network algorithms, and articulate their limitations."
0.9109,The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.,"Analyze results from network algorithms, and articulate their limitations."
0.9255,"The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced.",Communicate the process of formulating and solving computational social science problems to a team of professionals with computing and/or social sciences.
0.9348,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience.",The course equips the students with in-depth knowledge and hands-on experience in working with network data to study social processes at both the individual and aggregate levels.
0.9359,"Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems.",Apply network analysis algorithms in practical contexts.
0.8948,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management.","Analyze results from network algorithms, and articulate their limitations."
0.9315,"Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system.",Communicate the process of formulating and solving computational social science problems to a team of professionals with computing and/or social sciences.
0.9125,"Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type.","Analyze results from network algorithms, and articulate their limitations."
0.9129,"Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic).","Analyze results from network algorithms, and articulate their limitations."
0.9125,"Understand the basics of event-driven programming, and its use in constructing GUIs",Demonstrate a thorough understanding of the fundamental principles of using computational approaches to formulate and answer social science questions.
0.9431,"Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools.",Communicate the process of formulating and solving computational social science problems to a team of professionals with computing and/or social sciences.
