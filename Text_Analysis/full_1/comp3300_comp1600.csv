score,s1,s2
0.9174,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties.","define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.8987,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages.","The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8747,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic).","define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.8522,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts.",describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8826,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle.","identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8879,Prove simple programs correct using Hoare Logic.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.9167,Design a Turing Machine which will accomplish simple tasks.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
