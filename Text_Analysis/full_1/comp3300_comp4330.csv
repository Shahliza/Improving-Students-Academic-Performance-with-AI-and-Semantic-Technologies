score,s1,s2
0.9012,"Real-time and embedded systems are all around us. Controlling cars, trains, or aeroplanes, as well as mobile phones, cameras, or A/V equipment, embedded systems are a challenging and demanding part of computer science and engineering.","The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.9342,This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).,demonstrate experience in the design and implementation of a large software system.
0.9151,It also delivers the principles of fault tolerant systems and highly reliable systems.,demonstrate experience in the design and implementation of a large software system.
0.9214,"Techniques which are introduced include real-time calculus, real-time scheduling, elementary sensor data filtering and fusion methods, error recovery strategies, and graceful degradation methods.","The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8885,Formulate real-time constraints.,identify and describe the reasons for many architectural features of contemporary machines.
0.9185,Employ standard real-time programming constructs.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.9143,Develop a concept to handle the requests level of reliability.,identify and describe the reasons for many architectural features of contemporary machines.
0.9219,"Construct and implement an architecture for an asynchronous, distributed real-time system.","define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.9146,Understand and consider constraints from physical dynamical systems.,identify and describe the reasons for many architectural features of contemporary machines.
0.9168,Participate significantly in the enhancement of the reliability (or analysis) of safety critical systems.,demonstrate experience in the design and implementation of a large software system.
