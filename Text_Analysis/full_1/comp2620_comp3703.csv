score,s1,s2
0.8536,"Software Security covers advanced techniques in software vulnerability assessment, discovery and mitigation.",Techniques of formal deduction and tests for the validity of arguments will be studied.
0.8628,"These include: common patterns in software vulnerabilities, such as stack-based buffer overflow, format string vulnerabilities, and heap-based vulnerabilities; exploitation techniques such as code injection, return-oriented-programming; techniques for vulnerability discovery, such as program binaries reverse engineering, fuzzing and symbolic execution; and mitigation techniques such as memory protection mechanisms, input sanitation, and control flow integrity protection.",Construct natural deduction proofs in first order logic and translate between calculi.
0.8909,"The course features hands-on lectures and labs to analyse software vulnerabilities, both in the source code and in program binaries, and design and implement appropriate mitigation techniques.",Critically assess and compare philosophical views on issues arising from elementary logic.
0.8783,Demonstrate a thorough understanding of common sources of vulnerabilities in software.,Critically assess and compare philosophical views on issues arising from elementary logic.
0.8924,Demonstrate a thorough understanding in exploitation techniques against software vulnerabilities and defensive techniques against these exploitations.,Critically assess and compare philosophical views on issues arising from elementary logic.
0.8919,Demonstrate proficiency in software reverse engineering.,Critically assess and compare philosophical views on issues arising from elementary logic.
0.8926,"Demonstrate proficiency in vulnerability discovery processes, from both source code and binary.",Critically assess and compare philosophical views on issues arising from elementary logic.
0.8913,"Apply the vulnerability discovery techniques to real-world software, analyse their vulnerabilities and design and implement appropriate mitigation techniques.",Techniques of formal deduction and tests for the validity of arguments will be studied.
