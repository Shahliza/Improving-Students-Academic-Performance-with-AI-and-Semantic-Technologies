score,s1,s2
0.8857,This course provides a broad but thorough introduction to the methods and practice of statistical machine learning.,"The course features hands-on lectures and labs to analyse software vulnerabilities, both in the source code and in program binaries, and design and implement appropriate mitigation techniques."
0.8993,"Topics covered will include Bayesian inference and maximum likelihood modeling; regression, classification, density estimation, clustering, principal and independent component analysis; parametric, semi-parametric, and non-parametric models; basis functions, neural networks, kernel methods, and graphical models; deterministic and stochastic optimisation; overfitting, regularisation, and validation.","These include: common patterns in software vulnerabilities, such as stack-based buffer overflow, format string vulnerabilities, and heap-based vulnerabilities; exploitation techniques such as code injection, return-oriented-programming; techniques for vulnerability discovery, such as program binaries reverse engineering, fuzzing and symbolic execution; and mitigation techniques such as memory protection mechanisms, input sanitation, and control flow integrity protection."
0.8684,"Describe a number of models for supervised, unsupervised, and reinforcement machine learning.","The course features hands-on lectures and labs to analyse software vulnerabilities, both in the source code and in program binaries, and design and implement appropriate mitigation techniques."
0.8998,Assess the strength and weakness of each of these models.,Demonstrate a thorough understanding in exploitation techniques against software vulnerabilities and defensive techniques against these exploitations.
0.8946,"Interpret the mathematical equations from Linear Algebra, Statistics, and Probability Theory used in these machine learning models.","Apply the vulnerability discovery techniques to real-world software, analyse their vulnerabilities and design and implement appropriate mitigation techniques."
0.8920,Implement efficient machine learning algorithms on a computer.,Demonstrate proficiency in software reverse engineering.
0.9152,Design test procedures in order to evaluate a model.,Demonstrate proficiency in software reverse engineering.
0.8840,Combine several models in order to gain better results.,"Apply the vulnerability discovery techniques to real-world software, analyse their vulnerabilities and design and implement appropriate mitigation techniques."
0.8950,Make choices for a model for new machine learning tasks based on reasoned argument.,"Demonstrate proficiency in vulnerability discovery processes, from both source code and binary."
