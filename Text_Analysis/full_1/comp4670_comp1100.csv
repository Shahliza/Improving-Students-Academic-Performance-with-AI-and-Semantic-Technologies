score,s1,s2
0.8978,This course is the first of three core computer science courses on programming.,This course provides a broad but thorough introduction to the methods and practice of statistical machine learning.
0.9206,It introduces students to the field of computer science as a discipline for solving problems through computation and provides the foundation for more advanced courses on programming and software development.,This course provides a broad but thorough introduction to the methods and practice of statistical machine learning.
0.9265,"Data structures and algorithms, the key concepts at the core of computer science, receive their first treatment in this course. The course addresses both functional and imperative programming paradigms.",This course provides a broad but thorough introduction to the methods and practice of statistical machine learning.
0.9217,"The course covers functional programming in depth, developing the core idea of functions operating on data structures.","Interpret the mathematical equations from Linear Algebra, Statistics, and Probability Theory used in these machine learning models."
0.9053,"Students learn the organization of programming languages using types, how programs are evaluated (reduction), functional composition, recursive functions, algebraic data types, pattern matching, parametric polymorphism, higher-order functions.","Interpret the mathematical equations from Linear Algebra, Statistics, and Probability Theory used in these machine learning models."
0.9386,"Students also gain exposure to structural induction and proof, introduction to asymptotic analysis of basic data structures, abstract data types, modules, laziness, and streams.","Interpret the mathematical equations from Linear Algebra, Statistics, and Probability Theory used in these machine learning models."
0.9226,The functional paradigm demonstrates elegant solutions to many programming problems.,"Interpret the mathematical equations from Linear Algebra, Statistics, and Probability Theory used in these machine learning models."
0.8969,"The course also introduces imperative programming as an alternative paradigm to functional programming, highlighting similarities and contrasting differences.",This course provides a broad but thorough introduction to the methods and practice of statistical machine learning.
0.8963,"Students learn the basic ingredients of imperative programs: mutable variables, sequencing, conditionals, iteration, functions, eager evaluation, and side effects.",Make choices for a model for new machine learning tasks based on reasoned argument.
0.8934,The course also introduces students to standard productivity tools for software development that will be used throughout the course and remainder of the computer science degree.,Design test procedures in order to evaluate a model.
0.8877,These include distributed software revision control systems.,Design test procedures in order to evaluate a model.
0.8962,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience.",Combine several models in order to gain better results.
0.9269,"Apply fundamental programming concepts, using a functional programming language, to solve simple problems.","Interpret the mathematical equations from Linear Algebra, Statistics, and Probability Theory used in these machine learning models."
0.8979,Understand basic types and the benefits of static typing.,Make choices for a model for new machine learning tasks based on reasoned argument.
0.8609,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation.",Make choices for a model for new machine learning tasks based on reasoned argument.
0.9039,"Describe, understand and evolve programs, via documentation, testing, and debugging.",Design test procedures in order to evaluate a model.
0.9219,"Discuss, use, and apply the fundamentals of data structures, algorithms, and design; create, implement, and debug algorithms for solving simple problems, including recursively, using divide-and-conquer, and via decomposition.","Topics covered will include Bayesian inference and maximum likelihood modeling; regression, classification, density estimation, clustering, principal and independent component analysis; parametric, semi-parametric, and non-parametric models; basis functions, neural networks, kernel methods, and graphical models; deterministic and stochastic optimisation; overfitting, regularisation, and validation."
0.9257,"Discuss basic algorithmic analysis for simple algorithms; determine appropriate algorithmic approaches to a problem (brute-force, greedy, divide-and-conquer, recursive backtracking, heuristic, dynamic programming).","Topics covered will include Bayesian inference and maximum likelihood modeling; regression, classification, density estimation, clustering, principal and independent component analysis; parametric, semi-parametric, and non-parametric models; basis functions, neural networks, kernel methods, and graphical models; deterministic and stochastic optimisation; overfitting, regularisation, and validation."
0.9308,Describe and apply alternative computational paradigms to simple problems.,Make choices for a model for new machine learning tasks based on reasoned argument.
0.8914,Understand the legal context for protection of software as intellectual property.,Design test procedures in order to evaluate a model.
