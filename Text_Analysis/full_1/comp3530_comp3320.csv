score,s1,s2
0.9175,This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.,"Systems Engineering is a holistic, multi-disciplinary and well established approach to the engineering of these complex systems."
0.9193,Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.,Integration of Systems Engineering and Software Engineering activities.
0.8889,"The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95.","Because software is a critical component of such systems, Software Engineers will often work in Systems Engineering teams."
0.9111,"The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures.","Because software is a critical component of such systems, Software Engineers will often work in Systems Engineering teams."
0.9226,It will also look at practical methods of estimating and measuring algorithm/architecture performance.,"Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification."
0.9130,"The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems.","Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification."
0.9209,appreciate the building blocks of scientific and engineering software.,describe the holistic and multi-disciplinary nature of complex engineering projects.
0.9000,demonstrate a basic knowledge of numerical computing using an appropriate programming language.,"Systems Engineering is a holistic, multi-disciplinary and well established approach to the engineering of these complex systems."
0.9212,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.,"Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification."
0.9099,be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.,"Systems Engineering is a holistic, multi-disciplinary and well established approach to the engineering of these complex systems."
0.9309,have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.,"Systems Engineering is a holistic, multi-disciplinary and well established approach to the engineering of these complex systems."
0.9203,have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.,describe the holistic and multi-disciplinary nature of complex engineering projects.
0.8981,"be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance.","Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification."
