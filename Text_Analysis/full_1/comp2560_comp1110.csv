score,s1,s2
0.9551,This course introduces students to the fundamentals of software development with a substantial group software project at its center.,This course provides students with hands-on experience of being a researcher in the computing discipline.
0.9268,"Major foci are data structures, object oriented programming, and an introduction to software engineering.",Understand the main principles and concepts in at least two areas of computer science that are being actively shaped by research.
0.9347,"Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction.","It exposes the students to research skills, problem solving skills, team work and project management."
0.9142,"Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming.",This course provides students with hands-on experience of being a researcher in the computing discipline.
0.8918,"Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing.",Understand the main principles and concepts in at least two areas of computer science that are being actively shaped by research.
0.9065,The important role of standard libraries and their collection types will be emphasized. Â GUI programming will be introduced.,Understand the main principles and concepts in at least two areas of computer science that are being actively shaped by research.
0.9040,"The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types.",Understand the main principles and concepts in at least two areas of computer science that are being actively shaped by research.
0.9020,The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.,Understand the main principles and concepts in at least two areas of computer science that are being actively shaped by research.
0.9252,"The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced.",Understand the main principles and concepts in at least two areas of computer science that are being actively shaped by research.
0.9311,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience.",This course provides students with hands-on experience of being a researcher in the computing discipline.
0.9194,"Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems.",Understand the main principles and concepts in at least two areas of computer science that are being actively shaped by research.
0.8679,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management.",Understand the main principles and concepts in at least two areas of computer science that are being actively shaped by research.
0.9153,"Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system.",Have a basis of the knowledge and skills in research projects that can be built upon for more substantial projects.
0.8679,"Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type.",Have a basis of the knowledge and skills in research projects that can be built upon for more substantial projects.
0.8715,"Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic).",Have a basis of the knowledge and skills in research projects that can be built upon for more substantial projects.
0.8993,"Understand the basics of event-driven programming, and its use in constructing GUIs",This course provides students with hands-on experience of being a researcher in the computing discipline.
0.9245,"Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools.",Have a basis of the knowledge and skills in research projects that can be built upon for more substantial projects.
