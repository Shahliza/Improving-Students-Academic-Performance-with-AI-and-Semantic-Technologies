score,s1,s2
0.9353,This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.,This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).
0.9410,Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.,This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).
0.9166,"The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95.",This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).
0.9426,"The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures.",This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).
0.9286,It will also look at practical methods of estimating and measuring algorithm/architecture performance.,This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).
0.9193,"The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems.","Techniques which are introduced include real-time calculus, real-time scheduling, elementary sensor data filtering and fusion methods, error recovery strategies, and graceful degradation methods."
0.9237,appreciate the building blocks of scientific and engineering software.,This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).
0.9246,demonstrate a basic knowledge of numerical computing using an appropriate programming language.,Employ standard real-time programming constructs.
0.9421,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.,This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).
0.9284,be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.,This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).
0.9276,have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.,This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).
0.9265,have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.,This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).
0.9142,"be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance.",This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).
