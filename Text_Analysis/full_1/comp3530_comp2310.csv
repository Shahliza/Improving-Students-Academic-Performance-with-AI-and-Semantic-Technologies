score,s1,s2
0.8949,This course is based on the foundations set by the previous course on computer organisation.,"Systems Engineering is a holistic, multi-disciplinary and well established approach to the engineering of these complex systems."
0.9017,It expands particularly into all forms of concurrent programming including aspects of massively parallel programming.,describe the holistic and multi-disciplinary nature of complex engineering projects.
0.9326,"This course introduces all basic mechanisms to analyse, design, and manage concurrent, single computer-node (multicore) as well as distributed applications (e.g. as performance or dependability enhancements).","Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification."
0.8874,"Following on from the previous course, the fields of operating systems and networking will also be expanded on.",explain the role of Software Engineering within the broader context of Systems Engineering.
0.8922,"On the operating system side aspects of security, scheduling algorithms and memory management are discussed.","Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification."
0.9078,More specific networking aspects follow on from message passing as a core concurrency construct.,"Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification."
0.9097,These include the basics of routing and dependable protocols.,"Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification."
0.8958,"Model, design and program concurrent systems.","Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification."
0.9269,"Select appropriate modeling techniques, tools and mechanisms to solve a range of problems in concurrent and distributed systems.","Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification."
0.8757,This includes the appropriate programming language and runtime environment for the task at hand.,identify and explain the activities involved in each phase of the Systems Engineering life-cycle.
0.8493,Analyse and debug concurrent programs.,"Design testing, evaluation and validation."
0.8949,"Understand the aspects of an operating system concerning scheduling, protection and memory management.","Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification."
0.9004,Employ message passing locally and over networks to construct distributed systems.,"Because software is a critical component of such systems, Software Engineers will often work in Systems Engineering teams."
0.9186,Distinguish as well as connect conceptual concurrency with physical parallelism at all levels of a distributed system.,"Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification."
0.9163,Identify core aspects of operating systems and networks irrespective of the specific system at hand.,"Because software is a critical component of such systems, Software Engineers will often work in Systems Engineering teams."
