score,s1,s2
0.9273,"This course provides foundations and plenty of exercises in practical optimisation problems, while covering all basic elements of optimisation including forms of constraint programming as well as variations on linear programming and convex optimisation.","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.9187,Be able to apply Linear Programming and Mixed-Integer Programming model to solve real-world problems.,Prove simple programs correct using Hoare Logic.
0.9060,Be able to recognize and formulate convex optimization problems arising in practice.,Prove simple programs correct using Hoare Logic.
0.9109,Demonstrate an understanding of theoretical foundations of convex optimization and be able to use it to characterize optimal solutions to general problems.,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.9066,Be able to define an appropriate local search neighbourhood for a given problem.,Design a Turing Machine which will accomplish simple tasks.
0.9055,Be able to use a variety of meta-heuristics to escape local minima in a neighbourhood.,Prove simple programs correct using Hoare Logic.
0.9201,Demonstrate an understanding of the propagation of a global constraint in a Constraint programming system.,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
