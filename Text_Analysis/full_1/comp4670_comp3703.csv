score,s1,s2
0.8725,"Software Security covers advanced techniques in software vulnerability assessment, discovery and mitigation.",Design test procedures in order to evaluate a model.
0.8993,"These include: common patterns in software vulnerabilities, such as stack-based buffer overflow, format string vulnerabilities, and heap-based vulnerabilities; exploitation techniques such as code injection, return-oriented-programming; techniques for vulnerability discovery, such as program binaries reverse engineering, fuzzing and symbolic execution; and mitigation techniques such as memory protection mechanisms, input sanitation, and control flow integrity protection.","Topics covered will include Bayesian inference and maximum likelihood modeling; regression, classification, density estimation, clustering, principal and independent component analysis; parametric, semi-parametric, and non-parametric models; basis functions, neural networks, kernel methods, and graphical models; deterministic and stochastic optimisation; overfitting, regularisation, and validation."
0.8961,"The course features hands-on lectures and labs to analyse software vulnerabilities, both in the source code and in program binaries, and design and implement appropriate mitigation techniques.",Design test procedures in order to evaluate a model.
0.8947,Demonstrate a thorough understanding of common sources of vulnerabilities in software.,Assess the strength and weakness of each of these models.
0.9037,Demonstrate a thorough understanding in exploitation techniques against software vulnerabilities and defensive techniques against these exploitations.,Design test procedures in order to evaluate a model.
0.9152,Demonstrate proficiency in software reverse engineering.,Design test procedures in order to evaluate a model.
0.9090,"Demonstrate proficiency in vulnerability discovery processes, from both source code and binary.",Design test procedures in order to evaluate a model.
0.9117,"Apply the vulnerability discovery techniques to real-world software, analyse their vulnerabilities and design and implement appropriate mitigation techniques.",Design test procedures in order to evaluate a model.
