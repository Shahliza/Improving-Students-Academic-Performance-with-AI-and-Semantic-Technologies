score,s1,s2
0.9090,"This course continues to build on topics taught in the previous two courses. It focuses on construction of medium scale programs, using design patterns and tools that are used in the software development process.",This course provides a broad but thorough introduction to the methods and practice of statistical machine learning.
0.8941,Students will gain further experience with industry standard revision control and integrated development environment (IDE) tools.,Design test procedures in order to evaluate a model.
0.9176,"Students will learn appropriate application of programming abstractions they have learned in previous courses to the structuring of medium scale software: inheritance, generic types, polymorphism, procedural abstraction, and abstract recursive data structures (including abstract syntax trees as a program representation, and tools that manipulate them).","Interpret the mathematical equations from Linear Algebra, Statistics, and Probability Theory used in these machine learning models."
0.9229,"The course also covers more advanced data structures, such as priority queues, B-trees, red-black trees, and AVL trees, and deepens understanding of appropriate algorithmic strategies.","Topics covered will include Bayesian inference and maximum likelihood modeling; regression, classification, density estimation, clustering, principal and independent component analysis; parametric, semi-parametric, and non-parametric models; basis functions, neural networks, kernel methods, and graphical models; deterministic and stochastic optimisation; overfitting, regularisation, and validation."
0.9186,The course also treats intellectual property considerations in software development and deployment.,Design test procedures in order to evaluate a model.
0.9251,Apply fundamental programming concepts for medium scale programs.,Design test procedures in order to evaluate a model.
0.8843,"Understand basic types and the benefits of static typing, with understanding of generics, subtyping, and overloading, and their roles in structuring programs","Interpret the mathematical equations from Linear Algebra, Statistics, and Probability Theory used in these machine learning models."
0.8794,"Map programming language abstractions through to execution environment; use non-source (text) internal representations of programs (e.g., abstract syntax trees); sketch low-level run-time representations of core language constructs (objects and closures).",Make choices for a model for new machine learning tasks based on reasoned argument.
0.9136,"Describe contractual specifications, analyse documentation and specifications against other’s code, develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; explain the importance of correctness for quality software; understand common coding errors and how to avoid them; practice fundamental defensive programming; understand principles of secure design.",Design test procedures in order to evaluate a model.
0.9306,"Use, implement, and evaluate more advanced data structures and associated algorithms; discuss factors other than computational efficiency for evaluating software; create, implement, debug, and evaluate algorithms for solving problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type; analyse design and implementation alternatives.","Topics covered will include Bayesian inference and maximum likelihood modeling; regression, classification, density estimation, clustering, principal and independent component analysis; parametric, semi-parametric, and non-parametric models; basis functions, neural networks, kernel methods, and graphical models; deterministic and stochastic optimisation; overfitting, regularisation, and validation."
0.9328,"Apply basic algorithmic analysis to simple algorithms; use big-O notation formally, upper lower, and expected case bounds; use and solve recurrence relations; use appropriate algorithmic approaches to solve problems (brute-force, greedy, divide-and-conquer, recursive backtracking, heuristic, dynamic programming, branch-and-bound).","Topics covered will include Bayesian inference and maximum likelihood modeling; regression, classification, density estimation, clustering, principal and independent component analysis; parametric, semi-parametric, and non-parametric models; basis functions, neural networks, kernel methods, and graphical models; deterministic and stochastic optimisation; overfitting, regularisation, and validation."
0.9200,Explain how system components contribute to performance; understand Amdahl’s law and its limitations; design and conduct performance experiments; use software tools to profile and measure program performance,Design test procedures in order to evaluate a model.
0.9258,"Understand, apply, and analyse state and state machines in expressing computations.","Interpret the mathematical equations from Linear Algebra, Statistics, and Probability Theory used in these machine learning models."
0.9013,Understand fundamental concepts of GUIs and user interfaces; understand the basics of modeling and simulation.,"Interpret the mathematical equations from Linear Algebra, Statistics, and Probability Theory used in these machine learning models."
0.9003,"Contrast the concepts of copyright, patenting, and trademarks as mechanisms for protecting intellectual property, within the legal context for these mechanisms;  understand, analyse, and evaluate ethical/social tradeoffs in technical decisions, evaluating stakeholder positions.",Design test procedures in order to evaluate a model.
