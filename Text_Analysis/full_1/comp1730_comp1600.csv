score,s1,s2
0.9194,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties.",Be able to describe and design small computer programs using both procedural and object-oriented methodologies.
0.9101,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages.",Have an understanding of practical aspects of machine architecture including finite precision and rounding errors.
0.9062,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic).",The course will be taught using one or more programming languages which are widely applicable to scientific work.
0.8565,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts.",Be able to describe and design small computer programs using both procedural and object-oriented methodologies.
0.8885,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle.",Have an understanding of practical aspects of machine architecture including finite precision and rounding errors.
0.9251,Prove simple programs correct using Hoare Logic.,Have an understanding of practical aspects of machine architecture including finite precision and rounding errors.
0.9278,Design a Turing Machine which will accomplish simple tasks.,"Design, write and debug small programs to solve practical problems of a scientific nature."
