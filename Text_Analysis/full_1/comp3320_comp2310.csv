score,s1,s2
0.9048,This course is based on the foundations set by the previous course on computer organisation.,"The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95."
0.9289,It expands particularly into all forms of concurrent programming including aspects of massively parallel programming.,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.
0.9406,"This course introduces all basic mechanisms to analyse, design, and manage concurrent, single computer-node (multicore) as well as distributed applications (e.g. as performance or dependability enhancements).",have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.
0.9199,"Following on from the previous course, the fields of operating systems and networking will also be expanded on.","The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95."
0.9195,"On the operating system side aspects of security, scheduling algorithms and memory management are discussed.","The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems."
0.9104,More specific networking aspects follow on from message passing as a core concurrency construct.,It will also look at practical methods of estimating and measuring algorithm/architecture performance.
0.9248,These include the basics of routing and dependable protocols.,appreciate the building blocks of scientific and engineering software.
0.8873,"Model, design and program concurrent systems.",be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.
0.9430,"Select appropriate modeling techniques, tools and mechanisms to solve a range of problems in concurrent and distributed systems.",be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.
0.9087,This includes the appropriate programming language and runtime environment for the task at hand.,It will also look at practical methods of estimating and measuring algorithm/architecture performance.
0.8880,Analyse and debug concurrent programs.,"The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures."
0.9120,"Understand the aspects of an operating system concerning scheduling, protection and memory management.","The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures."
0.9152,Employ message passing locally and over networks to construct distributed systems.,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.
0.9283,Distinguish as well as connect conceptual concurrency with physical parallelism at all levels of a distributed system.,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.
0.9179,Identify core aspects of operating systems and networks irrespective of the specific system at hand.,have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.
