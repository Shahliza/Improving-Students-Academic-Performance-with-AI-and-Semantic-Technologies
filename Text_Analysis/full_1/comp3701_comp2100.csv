score,s1,s2
0.9250,"This course continues to build on topics taught in the previous two courses. It focuses on construction of medium scale programs, using design patterns and tools that are used in the software development process.",This is a complete course in cyber defense which enables students on successful completion to operate systems under real-world exposure.
0.9255,Students will gain further experience with industry standard revision control and integrated development environment (IDE) tools.,This is a complete course in cyber defense which enables students on successful completion to operate systems under real-world exposure.
0.9217,"Students will learn appropriate application of programming abstractions they have learned in previous courses to the structuring of medium scale software: inheritance, generic types, polymorphism, procedural abstraction, and abstract recursive data structures (including abstract syntax trees as a program representation, and tools that manipulate them).",Students will also learn and exercise handling of an existing intrusion which includes forensic operations as well as securing the remaining systems.
0.9063,"The course also covers more advanced data structures, such as priority queues, B-trees, red-black trees, and AVL trees, and deepens understanding of appropriate algorithmic strategies.",Defensive Cyber Security operations introduces and exercises a complete range of anomaly / intrusion detection and identification mechanisms.
0.9357,The course also treats intellectual property considerations in software development and deployment.,This is a complete course in cyber defense which enables students on successful completion to operate systems under real-world exposure.
0.9340,Apply fundamental programming concepts for medium scale programs.,Operate defensive network architectures and systems in a practical context.
0.8907,"Understand basic types and the benefits of static typing, with understanding of generics, subtyping, and overloading, and their roles in structuring programs",Students will also learn and exercise handling of an existing intrusion which includes forensic operations as well as securing the remaining systems.
0.8810,"Map programming language abstractions through to execution environment; use non-source (text) internal representations of programs (e.g., abstract syntax trees); sketch low-level run-time representations of core language constructs (objects and closures).",Define and identify defensive cyber security architectures and their purpose.
0.9314,"Describe contractual specifications, analyse documentation and specifications against other’s code, develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; explain the importance of correctness for quality software; understand common coding errors and how to avoid them; practice fundamental defensive programming; understand principles of secure design.",Students will also learn and exercise handling of an existing intrusion which includes forensic operations as well as securing the remaining systems.
0.9088,"Use, implement, and evaluate more advanced data structures and associated algorithms; discuss factors other than computational efficiency for evaluating software; create, implement, debug, and evaluate algorithms for solving problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type; analyse design and implementation alternatives.",Students will also learn and exercise handling of an existing intrusion which includes forensic operations as well as securing the remaining systems.
0.8786,"Apply basic algorithmic analysis to simple algorithms; use big-O notation formally, upper lower, and expected case bounds; use and solve recurrence relations; use appropriate algorithmic approaches to solve problems (brute-force, greedy, divide-and-conquer, recursive backtracking, heuristic, dynamic programming, branch-and-bound).",Defensive Cyber Security operations introduces and exercises a complete range of anomaly / intrusion detection and identification mechanisms.
0.9208,Explain how system components contribute to performance; understand Amdahl’s law and its limitations; design and conduct performance experiments; use software tools to profile and measure program performance,Define and identify defensive cyber security architectures and their purpose.
0.9261,"Understand, apply, and analyse state and state machines in expressing computations.",Demonstrate a thorough understanding of the fundamental principles underlying the defence of systems and networks.
0.9284,Understand fundamental concepts of GUIs and user interfaces; understand the basics of modeling and simulation.,Demonstrate a thorough understanding of the fundamental principles underlying the defence of systems and networks.
0.9266,"Contrast the concepts of copyright, patenting, and trademarks as mechanisms for protecting intellectual property, within the legal context for these mechanisms;  understand, analyse, and evaluate ethical/social tradeoffs in technical decisions, evaluating stakeholder positions.",Defensive Cyber Security operations introduces and exercises a complete range of anomaly / intrusion detection and identification mechanisms.
