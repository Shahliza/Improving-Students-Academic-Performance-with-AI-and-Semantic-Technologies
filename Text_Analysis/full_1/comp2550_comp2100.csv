score,s1,s2
0.9344,"This course continues to build on topics taught in the previous two courses. It focuses on construction of medium scale programs, using design patterns and tools that are used in the software development process.","Workshops cover topics such as research integrity, time management and project management, teamwork, reading strategies, report writing, and presenting research. At the end of the course, students will be confident to start working on their own research projects."
0.9165,Students will gain further experience with industry standard revision control and integrated development environment (IDE) tools.,"Workshops cover topics such as research integrity, time management and project management, teamwork, reading strategies, report writing, and presenting research. At the end of the course, students will be confident to start working on their own research projects."
0.9234,"Students will learn appropriate application of programming abstractions they have learned in previous courses to the structuring of medium scale software: inheritance, generic types, polymorphism, procedural abstraction, and abstract recursive data structures (including abstract syntax trees as a program representation, and tools that manipulate them).","This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.9228,"The course also covers more advanced data structures, such as priority queues, B-trees, red-black trees, and AVL trees, and deepens understanding of appropriate algorithmic strategies.","This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.9269,The course also treats intellectual property considerations in software development and deployment.,This includes demonstrated skills in the writing of abstracts and research papers.
0.9174,Apply fundamental programming concepts for medium scale programs.,This includes demonstrated skills in the writing of abstracts and research papers.
0.8948,"Understand basic types and the benefits of static typing, with understanding of generics, subtyping, and overloading, and their roles in structuring programs","Demonstrate an ability to communicate in relation to an computing project in oral, written and graphical forms, with an an appreciation of the need to pitch any communication item appropriately for the audience."
0.8843,"Map programming language abstractions through to execution environment; use non-source (text) internal representations of programs (e.g., abstract syntax trees); sketch low-level run-time representations of core language constructs (objects and closures).","This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.9291,"Describe contractual specifications, analyse documentation and specifications against other’s code, develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; explain the importance of correctness for quality software; understand common coding errors and how to avoid them; practice fundamental defensive programming; understand principles of secure design.","Demonstrate an ability to communicate in relation to an computing project in oral, written and graphical forms, with an an appreciation of the need to pitch any communication item appropriately for the audience."
0.9380,"Use, implement, and evaluate more advanced data structures and associated algorithms; discuss factors other than computational efficiency for evaluating software; create, implement, debug, and evaluate algorithms for solving problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type; analyse design and implementation alternatives.","This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.9161,"Apply basic algorithmic analysis to simple algorithms; use big-O notation formally, upper lower, and expected case bounds; use and solve recurrence relations; use appropriate algorithmic approaches to solve problems (brute-force, greedy, divide-and-conquer, recursive backtracking, heuristic, dynamic programming, branch-and-bound).","This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.9285,Explain how system components contribute to performance; understand Amdahl’s law and its limitations; design and conduct performance experiments; use software tools to profile and measure program performance,"Design and conduct experiments, devise appropriate measurements, analyze and interpret data and form reliable conclusions."
0.9181,"Understand, apply, and analyse state and state machines in expressing computations.","This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.9063,Understand fundamental concepts of GUIs and user interfaces; understand the basics of modeling and simulation.,Understanding of the process of identifying and formulating research problems.
0.9405,"Contrast the concepts of copyright, patenting, and trademarks as mechanisms for protecting intellectual property, within the legal context for these mechanisms;  understand, analyse, and evaluate ethical/social tradeoffs in technical decisions, evaluating stakeholder positions.",Demonstrate an awareness of the existence of technological choices; and make appropriate choices based on a consideration of design criteria.
