score,s1,s2
0.9424,This course teaches introductory programming within a problem solving framework applicable to the sciences.,This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).
0.9547,"The course emphasises technical programming, the simulation of scientific systems and the processing of scientific data.",This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).
0.9084,There is an emphasis on designing and writing correct code.,Employ standard real-time programming constructs.
0.9237,Testing and debugging are seen as integral to the programming enterprise.,This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).
0.9230,Both top-down and object oriented design are taught.,Employ standard real-time programming constructs.
0.9195,There will be an introduction to widely-used computer science algorithms and to machine architecture.,This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).
0.9315,The course will be taught using one or more programming languages which are widely applicable to scientific work.,This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).
0.9287,"Design, write and debug small programs to solve practical problems of a scientific nature.",This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).
0.9303,Have a practical understanding of the processing of scientific data.,This course delivers foundations of real-time analysis and implementation of systems which are interconnected with the physical world (embedded systems).
0.9333,Be able to describe and design small computer programs using both procedural and object-oriented methodologies.,Employ standard real-time programming constructs.
0.9281,Have an awareness of good program organisation.,Develop a concept to handle the requests level of reliability.
0.9187,Have an understanding of some widely-used algorithms.,Employ standard real-time programming constructs.
0.9286,Have an understanding of practical aspects of machine architecture including finite precision and rounding errors.,"Techniques which are introduced include real-time calculus, real-time scheduling, elementary sensor data filtering and fusion methods, error recovery strategies, and graceful degradation methods."
