score,s1,s2
0.9120,This course is the first of three core computer science courses on programming.,This is a complete course in cyber defense which enables students on successful completion to operate systems under real-world exposure.
0.9244,It introduces students to the field of computer science as a discipline for solving problems through computation and provides the foundation for more advanced courses on programming and software development.,This is a complete course in cyber defense which enables students on successful completion to operate systems under real-world exposure.
0.8963,"Data structures and algorithms, the key concepts at the core of computer science, receive their first treatment in this course. The course addresses both functional and imperative programming paradigms.",Demonstrate a thorough understanding of the fundamental principles underlying the defence of systems and networks.
0.9187,"The course covers functional programming in depth, developing the core idea of functions operating on data structures.",This is a complete course in cyber defense which enables students on successful completion to operate systems under real-world exposure.
0.8756,"Students learn the organization of programming languages using types, how programs are evaluated (reduction), functional composition, recursive functions, algebraic data types, pattern matching, parametric polymorphism, higher-order functions.",Students will also learn and exercise handling of an existing intrusion which includes forensic operations as well as securing the remaining systems.
0.9137,"Students also gain exposure to structural induction and proof, introduction to asymptotic analysis of basic data structures, abstract data types, modules, laziness, and streams.",Students will also learn and exercise handling of an existing intrusion which includes forensic operations as well as securing the remaining systems.
0.9117,The functional paradigm demonstrates elegant solutions to many programming problems.,Operate defensive network architectures and systems in a practical context.
0.9132,"The course also introduces imperative programming as an alternative paradigm to functional programming, highlighting similarities and contrasting differences.",This is a complete course in cyber defense which enables students on successful completion to operate systems under real-world exposure.
0.8833,"Students learn the basic ingredients of imperative programs: mutable variables, sequencing, conditionals, iteration, functions, eager evaluation, and side effects.",Students will also learn and exercise handling of an existing intrusion which includes forensic operations as well as securing the remaining systems.
0.9490,The course also introduces students to standard productivity tools for software development that will be used throughout the course and remainder of the computer science degree.,This is a complete course in cyber defense which enables students on successful completion to operate systems under real-world exposure.
0.9039,These include distributed software revision control systems.,Operate defensive network architectures and systems in a practical context.
0.9300,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience.",This is a complete course in cyber defense which enables students on successful completion to operate systems under real-world exposure.
0.9041,"Apply fundamental programming concepts, using a functional programming language, to solve simple problems.",Operate defensive network architectures and systems in a practical context.
0.9032,Understand basic types and the benefits of static typing.,Demonstrate a thorough understanding of the fundamental principles underlying the defence of systems and networks.
0.8695,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation.",Define and identify defensive cyber security architectures and their purpose.
0.9048,"Describe, understand and evolve programs, via documentation, testing, and debugging.",Define and identify defensive cyber security architectures and their purpose.
0.8912,"Discuss, use, and apply the fundamentals of data structures, algorithms, and design; create, implement, and debug algorithms for solving simple problems, including recursively, using divide-and-conquer, and via decomposition.",Demonstrate a thorough understanding of the fundamental principles underlying the defence of systems and networks.
0.8965,"Discuss basic algorithmic analysis for simple algorithms; determine appropriate algorithmic approaches to a problem (brute-force, greedy, divide-and-conquer, recursive backtracking, heuristic, dynamic programming).",Defensive Cyber Security operations introduces and exercises a complete range of anomaly / intrusion detection and identification mechanisms.
0.9360,Describe and apply alternative computational paradigms to simple problems.,Operate defensive network architectures and systems in a practical context.
0.9149,Understand the legal context for protection of software as intellectual property.,Define and identify defensive cyber security architectures and their purpose.
