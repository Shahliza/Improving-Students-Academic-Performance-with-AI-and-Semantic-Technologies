score,s1,s2
0.9231,This course is the first of three core computer science courses on programming.,The course introduces students to some fundamentals of research methodology.
0.9324,It introduces students to the field of computer science as a discipline for solving problems through computation and provides the foundation for more advanced courses on programming and software development.,The course introduces students to some fundamentals of research methodology.
0.9124,"Data structures and algorithms, the key concepts at the core of computer science, receive their first treatment in this course. The course addresses both functional and imperative programming paradigms.",The course introduces students to some fundamentals of research methodology.
0.9173,"The course covers functional programming in depth, developing the core idea of functions operating on data structures.",The course introduces students to some fundamentals of research methodology.
0.9091,"Students learn the organization of programming languages using types, how programs are evaluated (reduction), functional composition, recursive functions, algebraic data types, pattern matching, parametric polymorphism, higher-order functions.","This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.9327,"Students also gain exposure to structural induction and proof, introduction to asymptotic analysis of basic data structures, abstract data types, modules, laziness, and streams.","This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.9121,The functional paradigm demonstrates elegant solutions to many programming problems.,This includes demonstrated skills in the writing of abstracts and research papers.
0.9148,"The course also introduces imperative programming as an alternative paradigm to functional programming, highlighting similarities and contrasting differences.",The course introduces students to some fundamentals of research methodology.
0.8935,"Students learn the basic ingredients of imperative programs: mutable variables, sequencing, conditionals, iteration, functions, eager evaluation, and side effects.","This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.9392,The course also introduces students to standard productivity tools for software development that will be used throughout the course and remainder of the computer science degree.,"Workshops cover topics such as research integrity, time management and project management, teamwork, reading strategies, report writing, and presenting research. At the end of the course, students will be confident to start working on their own research projects."
0.8900,These include distributed software revision control systems.,This includes demonstrated skills in the writing of abstracts and research papers.
0.9310,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience.",The course introduces students to some fundamentals of research methodology.
0.9133,"Apply fundamental programming concepts, using a functional programming language, to solve simple problems.","This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.9154,Understand basic types and the benefits of static typing.,This includes demonstrated skills in the writing of abstracts and research papers.
0.8726,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation.","This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.9086,"Describe, understand and evolve programs, via documentation, testing, and debugging.","This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.9272,"Discuss, use, and apply the fundamentals of data structures, algorithms, and design; create, implement, and debug algorithms for solving simple problems, including recursively, using divide-and-conquer, and via decomposition.","This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.9308,"Discuss basic algorithmic analysis for simple algorithms; determine appropriate algorithmic approaches to a problem (brute-force, greedy, divide-and-conquer, recursive backtracking, heuristic, dynamic programming).","This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.9315,Describe and apply alternative computational paradigms to simple problems.,Understanding of the process of identifying and formulating research problems.
0.8988,Understand the legal context for protection of software as intellectual property.,Understanding of the process of identifying and formulating research problems.
