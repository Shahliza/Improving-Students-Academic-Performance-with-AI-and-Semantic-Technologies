score,s1,s2
0.8993,This course is the first of three core computer science courses on programming.,A practically oriented introduction to programming paradigms for parallel computers.
0.9263,It introduces students to the field of computer science as a discipline for solving problems through computation and provides the foundation for more advanced courses on programming and software development.,Demonstrate advanced knowledge of the elements of parallel programming language and system implementation.
0.9140,"Data structures and algorithms, the key concepts at the core of computer science, receive their first treatment in this course. The course addresses both functional and imperative programming paradigms.",Demonstrate advanced knowledge of the elements of parallel programming language and system implementation.
0.9427,"The course covers functional programming in depth, developing the core idea of functions operating on data structures.",Demonstrate advanced knowledge of the elements of parallel programming language and system implementation.
0.9226,"Students learn the organization of programming languages using types, how programs are evaluated (reduction), functional composition, recursive functions, algebraic data types, pattern matching, parametric polymorphism, higher-order functions.",Demonstrate advanced knowledge of the elements of parallel programming language and system implementation.
0.9281,"Students also gain exposure to structural induction and proof, introduction to asymptotic analysis of basic data structures, abstract data types, modules, laziness, and streams.",Demonstrate advanced knowledge of the elements of parallel programming language and system implementation.
0.9366,The functional paradigm demonstrates elegant solutions to many programming problems.,A practically oriented introduction to programming paradigms for parallel computers.
0.9299,"The course also introduces imperative programming as an alternative paradigm to functional programming, highlighting similarities and contrasting differences.",A practically oriented introduction to programming paradigms for parallel computers.
0.9112,"Students learn the basic ingredients of imperative programs: mutable variables, sequencing, conditionals, iteration, functions, eager evaluation, and side effects.",Demonstrate advanced knowledge of the elements of parallel programming language and system implementation.
0.9229,The course also introduces students to standard productivity tools for software development that will be used throughout the course and remainder of the computer science degree.,Demonstrate advanced knowledge of the elements of parallel programming language and system implementation.
0.8955,These include distributed software revision control systems.,Demonstrate advanced knowledge of the elements of parallel programming language and system implementation.
0.8901,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience.",Demonstrate advanced knowledge of the elements of parallel programming language and system implementation.
0.9376,"Apply fundamental programming concepts, using a functional programming language, to solve simple problems.",Demonstrate advanced knowledge of the elements of parallel programming language and system implementation.
0.9273,Understand basic types and the benefits of static typing.,Demonstrate advanced knowledge of the elements of parallel programming language and system implementation.
0.9027,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation.",Demonstrate advanced knowledge of the elements of parallel programming language and system implementation.
0.9238,"Describe, understand and evolve programs, via documentation, testing, and debugging.",Demonstrate advanced knowledge of the elements of parallel programming language and system implementation.
0.9177,"Discuss, use, and apply the fundamentals of data structures, algorithms, and design; create, implement, and debug algorithms for solving simple problems, including recursively, using divide-and-conquer, and via decomposition.","Description, implementation and use of parallel programming languages, parallel features of operating systems, library routines and applications."
0.9017,"Discuss basic algorithmic analysis for simple algorithms; determine appropriate algorithmic approaches to a problem (brute-force, greedy, divide-and-conquer, recursive backtracking, heuristic, dynamic programming).",Demonstrate advanced knowledge of the elements of parallel programming language and system implementation.
0.9363,Describe and apply alternative computational paradigms to simple problems.,A practically oriented introduction to programming paradigms for parallel computers.
0.9042,Understand the legal context for protection of software as intellectual property.,"Considers definitions of program efficiency on parallel computers, addresses the modelling, analysis and measurement of program performance."
