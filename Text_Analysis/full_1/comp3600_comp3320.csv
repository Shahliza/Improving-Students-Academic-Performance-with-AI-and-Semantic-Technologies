score,s1,s2
0.9161,This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.,This course provides basic approaches for designing and analysing algorithms and data structures.
0.9301,Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.,This course provides basic approaches for designing and analysing algorithms and data structures.
0.9274,"The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95.","Demonstrate experience in the design and implementation of algorithms for practical problems, using languages like C, C++."
0.9337,"The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures.",This course provides basic approaches for designing and analysing algorithms and data structures.
0.9463,It will also look at practical methods of estimating and measuring algorithm/architecture performance.,"It will cover various data structures and algorithm design techniques for solving these two classes of problems, as well as basic performance measures and analysis techniques for solving such problems."
0.9345,"The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems.","It will cover various data structures and algorithm design techniques for solving these two classes of problems, as well as basic performance measures and analysis techniques for solving such problems."
0.9134,appreciate the building blocks of scientific and engineering software.,Define and analyse time and space complexities of algorithms.
0.9261,demonstrate a basic knowledge of numerical computing using an appropriate programming language.,"Demonstrate experience in the design and implementation of algorithms for practical problems, using languages like C, C++."
0.9371,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.,"Display an advanced understanding of a variety of algorithms, including linear selection, minimum spanning trees, single source shortest path, Huffman coding, etc, with real-life applications and the resource requirements."
0.9182,be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.,Define and analyse time and space complexities of algorithms.
0.8901,have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.,"It will cover various data structures and algorithm design techniques for solving these two classes of problems, as well as basic performance measures and analysis techniques for solving such problems."
0.9214,have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.,"It will cover various data structures and algorithm design techniques for solving these two classes of problems, as well as basic performance measures and analysis techniques for solving such problems."
0.9211,"be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance.","It will cover various data structures and algorithm design techniques for solving these two classes of problems, as well as basic performance measures and analysis techniques for solving such problems."
