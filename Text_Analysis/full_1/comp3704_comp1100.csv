score,s1,s2
0.8902,This course is the first of three core computer science courses on programming.,"This course covers a range of concepts, techniques and technologies in network security."
0.9167,It introduces students to the field of computer science as a discipline for solving problems through computation and provides the foundation for more advanced courses on programming and software development.,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.9026,"Data structures and algorithms, the key concepts at the core of computer science, receive their first treatment in this course. The course addresses both functional and imperative programming paradigms.","This course covers a range of concepts, techniques and technologies in network security."
0.9195,"The course covers functional programming in depth, developing the core idea of functions operating on data structures.","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.8802,"Students learn the organization of programming languages using types, how programs are evaluated (reduction), functional composition, recursive functions, algebraic data types, pattern matching, parametric polymorphism, higher-order functions.","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.9138,"Students also gain exposure to structural induction and proof, introduction to asymptotic analysis of basic data structures, abstract data types, modules, laziness, and streams.","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.8977,The functional paradigm demonstrates elegant solutions to many programming problems.,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.
0.9133,"The course also introduces imperative programming as an alternative paradigm to functional programming, highlighting similarities and contrasting differences.","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.8832,"Students learn the basic ingredients of imperative programs: mutable variables, sequencing, conditionals, iteration, functions, eager evaluation, and side effects.","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.9180,The course also introduces students to standard productivity tools for software development that will be used throughout the course and remainder of the computer science degree.,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.9009,These include distributed software revision control systems.,Explain network security issues.
0.9064,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience.","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.8988,"Apply fundamental programming concepts, using a functional programming language, to solve simple problems.","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.9055,Understand basic types and the benefits of static typing.,Explain network security issues.
0.8708,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation.",Perform a threat analysis / vulnerability assessment of protocol designs and implementations.
0.9211,"Describe, understand and evolve programs, via documentation, testing, and debugging.","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.9045,"Discuss, use, and apply the fundamentals of data structures, algorithms, and design; create, implement, and debug algorithms for solving simple problems, including recursively, using divide-and-conquer, and via decomposition.","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.9021,"Discuss basic algorithmic analysis for simple algorithms; determine appropriate algorithmic approaches to a problem (brute-force, greedy, divide-and-conquer, recursive backtracking, heuristic, dynamic programming).","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.9214,Describe and apply alternative computational paradigms to simple problems.,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.8988,Understand the legal context for protection of software as intellectual property.,Explain network security issues.
