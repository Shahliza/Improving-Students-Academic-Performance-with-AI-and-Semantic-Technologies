score,s1,s2
0.8908,This course is the first of three core computer science courses on programming.,"In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities."
0.9316,It introduces students to the field of computer science as a discipline for solving problems through computation and provides the foundation for more advanced courses on programming and software development.,"In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities."
0.9090,"Data structures and algorithms, the key concepts at the core of computer science, receive their first treatment in this course. The course addresses both functional and imperative programming paradigms.","In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities."
0.9212,"The course covers functional programming in depth, developing the core idea of functions operating on data structures.","In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities."
0.8931,"Students learn the organization of programming languages using types, how programs are evaluated (reduction), functional composition, recursive functions, algebraic data types, pattern matching, parametric polymorphism, higher-order functions.","Apply network design principles, topologies, architectures, and their components."
0.9244,"Students also gain exposure to structural induction and proof, introduction to asymptotic analysis of basic data structures, abstract data types, modules, laziness, and streams.","Apply network design principles, topologies, architectures, and their components."
0.9057,The functional paradigm demonstrates elegant solutions to many programming problems.,"Analyse the role of network standards, protocols, and layered models."
0.9108,"The course also introduces imperative programming as an alternative paradigm to functional programming, highlighting similarities and contrasting differences.","In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities."
0.8916,"Students learn the basic ingredients of imperative programs: mutable variables, sequencing, conditionals, iteration, functions, eager evaluation, and side effects.","Apply network design principles, topologies, architectures, and their components."
0.9341,The course also introduces students to standard productivity tools for software development that will be used throughout the course and remainder of the computer science degree.,"In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities."
0.8996,These include distributed software revision control systems.,Create a virtual machine and apply tools for packet analysis and file encryption in a lab environment.
0.9231,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience.","In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities."
0.9059,"Apply fundamental programming concepts, using a functional programming language, to solve simple problems.","Apply network design principles, topologies, architectures, and their components."
0.9100,Understand basic types and the benefits of static typing.,"Analyse the role of network standards, protocols, and layered models."
0.8825,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation.","Apply network design principles, topologies, architectures, and their components."
0.9186,"Describe, understand and evolve programs, via documentation, testing, and debugging.",Create a virtual machine and apply tools for packet analysis and file encryption in a lab environment.
0.9087,"Discuss, use, and apply the fundamentals of data structures, algorithms, and design; create, implement, and debug algorithms for solving simple problems, including recursively, using divide-and-conquer, and via decomposition.","Apply network design principles, topologies, architectures, and their components."
0.8935,"Discuss basic algorithmic analysis for simple algorithms; determine appropriate algorithmic approaches to a problem (brute-force, greedy, divide-and-conquer, recursive backtracking, heuristic, dynamic programming).",Create a virtual machine and apply tools for packet analysis and file encryption in a lab environment.
0.9321,Describe and apply alternative computational paradigms to simple problems.,"Apply network design principles, topologies, architectures, and their components."
0.9071,Understand the legal context for protection of software as intellectual property.,"Analyse the role of network standards, protocols, and layered models."
