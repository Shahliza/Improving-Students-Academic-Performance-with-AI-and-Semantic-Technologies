score,s1,s2
0.9195,This course introduces students to the fundamentals of software development with a substantial group software project at its center.,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.9082,"Major foci are data structures, object oriented programming, and an introduction to software engineering.","This course covers a range of concepts, techniques and technologies in network security."
0.9300,"Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction.","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.8987,"Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming.","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.8863,"Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing.","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.8871,The important role of standard libraries and their collection types will be emphasized. Â GUI programming will be introduced.,Perform simple penetration testing of a network and network services
0.9136,"The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types.","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.8907,The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.
0.9103,"The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced.","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.9064,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience.","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.9026,"Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems.","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.8847,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management.",Perform a threat analysis / vulnerability assessment of protocol designs and implementations.
0.9333,"Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system.","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.8953,"Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type.","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.9010,"Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic).","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.9096,"Understand the basics of event-driven programming, and its use in constructing GUIs","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
0.9344,"Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools.","The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques."
