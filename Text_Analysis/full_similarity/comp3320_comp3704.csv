score,s1,s2
0.8560,"This course covers a range of concepts, techniques and technologies in network security.","be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance."
0.8681,"This course covers a range of concepts, techniques and technologies in network security.",be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.
0.8765,"This course covers a range of concepts, techniques and technologies in network security.","The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95."
0.8773,"This course covers a range of concepts, techniques and technologies in network security.","The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems."
0.8775,"This course covers a range of concepts, techniques and technologies in network security.",be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.
0.8837,"This course covers a range of concepts, techniques and technologies in network security.",demonstrate a basic knowledge of numerical computing using an appropriate programming language.
0.8840,"This course covers a range of concepts, techniques and technologies in network security.",appreciate the building blocks of scientific and engineering software.
0.8852,"This course covers a range of concepts, techniques and technologies in network security.",have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.
0.8940,"This course covers a range of concepts, techniques and technologies in network security.",have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.
0.8957,"This course covers a range of concepts, techniques and technologies in network security.","The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures."
0.8969,"This course covers a range of concepts, techniques and technologies in network security.",Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.
0.9054,"This course covers a range of concepts, techniques and technologies in network security.",It will also look at practical methods of estimating and measuring algorithm/architecture performance.
0.9109,"This course covers a range of concepts, techniques and technologies in network security.",This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.
0.8381,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.",appreciate the building blocks of scientific and engineering software.
0.8443,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.",demonstrate a basic knowledge of numerical computing using an appropriate programming language.
0.8461,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.",be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.
0.8495,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.",This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.
0.8497,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95."
0.8552,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.",have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.
0.8612,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.",Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.
0.8746,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.",be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.
0.8780,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance."
0.8783,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures."
0.8844,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.",It will also look at practical methods of estimating and measuring algorithm/architecture performance.
0.8860,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.",have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.
0.9105,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems."
0.8894,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.",have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.
0.8947,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95."
0.8950,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.",appreciate the building blocks of scientific and engineering software.
0.8966,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.",be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.
0.8989,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems."
0.9022,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.",This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.
0.9028,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.",Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.
0.9039,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.",demonstrate a basic knowledge of numerical computing using an appropriate programming language.
0.9097,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.",have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.
0.9114,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance."
0.9133,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.",be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.
0.9223,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures."
0.9286,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.",It will also look at practical methods of estimating and measuring algorithm/architecture performance.
0.8315,Explain network security issues.,"The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95."
0.8353,Explain network security issues.,"be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance."
0.8448,Explain network security issues.,"The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems."
0.8503,Explain network security issues.,have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.
0.8528,Explain network security issues.,This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.
0.8580,Explain network security issues.,"The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures."
0.8696,Explain network security issues.,have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.
0.8723,Explain network security issues.,be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.
0.8732,Explain network security issues.,Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.
0.8773,Explain network security issues.,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.
0.8801,Explain network security issues.,demonstrate a basic knowledge of numerical computing using an appropriate programming language.
0.8853,Explain network security issues.,It will also look at practical methods of estimating and measuring algorithm/architecture performance.
0.9012,Explain network security issues.,appreciate the building blocks of scientific and engineering software.
0.8455,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95."
0.8578,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.",This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.
0.8660,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems."
0.8712,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.",have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.
0.8744,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.",appreciate the building blocks of scientific and engineering software.
0.8771,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.",Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.
0.8782,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.",demonstrate a basic knowledge of numerical computing using an appropriate programming language.
0.8811,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance."
0.8818,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures."
0.8870,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.",be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.
0.8919,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.",be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.
0.8981,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.",It will also look at practical methods of estimating and measuring algorithm/architecture performance.
0.8992,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.",have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.
0.8588,Perform simple penetration testing of a network and network services,"The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95."
0.8647,Perform simple penetration testing of a network and network services,This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.
0.8658,Perform simple penetration testing of a network and network services,have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.
0.8833,Perform simple penetration testing of a network and network services,"be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance."
0.8839,Perform simple penetration testing of a network and network services,"The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems."
0.8914,Perform simple penetration testing of a network and network services,"The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures."
0.8932,Perform simple penetration testing of a network and network services,be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.
0.8975,Perform simple penetration testing of a network and network services,Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.
0.8979,Perform simple penetration testing of a network and network services,have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.
0.9024,Perform simple penetration testing of a network and network services,demonstrate a basic knowledge of numerical computing using an appropriate programming language.
0.9095,Perform simple penetration testing of a network and network services,It will also look at practical methods of estimating and measuring algorithm/architecture performance.
0.9099,Perform simple penetration testing of a network and network services,appreciate the building blocks of scientific and engineering software.
0.9195,Perform simple penetration testing of a network and network services,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.
0.8552,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95."
0.8654,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.
0.8707,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.
0.8844,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.
0.8872,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,appreciate the building blocks of scientific and engineering software.
0.8891,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,demonstrate a basic knowledge of numerical computing using an appropriate programming language.
0.8902,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems."
0.8967,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.
0.9003,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures."
0.9017,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance."
0.9056,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.
0.9125,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.
0.9198,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,It will also look at practical methods of estimating and measuring algorithm/architecture performance.
0.8193,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95."
0.8410,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems."
0.8410,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.
0.8493,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures."
0.8500,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,appreciate the building blocks of scientific and engineering software.
0.8505,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.
0.8565,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.
0.8568,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,demonstrate a basic knowledge of numerical computing using an appropriate programming language.
0.8612,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.
0.8637,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance."
0.8677,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,It will also look at practical methods of estimating and measuring algorithm/architecture performance.
0.8720,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.
0.8749,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.
