score,s1,s2
0.8164,"This course aims to provide students with sufficient knowledge of the basic principles of software project management that they may support a project manager to carry out the project administrative functions of a program office, understand leadership and management within the context of an agile project development team, and understand the context in which project management is conducted.","Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8607,"This course aims to provide students with sufficient knowledge of the basic principles of software project management that they may support a project manager to carry out the project administrative functions of a program office, understand leadership and management within the context of an agile project development team, and understand the context in which project management is conducted.",Prove simple programs correct using Hoare Logic.
0.8672,"This course aims to provide students with sufficient knowledge of the basic principles of software project management that they may support a project manager to carry out the project administrative functions of a program office, understand leadership and management within the context of an agile project development team, and understand the context in which project management is conducted.","Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8725,"This course aims to provide students with sufficient knowledge of the basic principles of software project management that they may support a project manager to carry out the project administrative functions of a program office, understand leadership and management within the context of an agile project development team, and understand the context in which project management is conducted.",Design a Turing Machine which will accomplish simple tasks.
0.8846,"This course aims to provide students with sufficient knowledge of the basic principles of software project management that they may support a project manager to carry out the project administrative functions of a program office, understand leadership and management within the context of an agile project development team, and understand the context in which project management is conducted.","Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8855,"This course aims to provide students with sufficient knowledge of the basic principles of software project management that they may support a project manager to carry out the project administrative functions of a program office, understand leadership and management within the context of an agile project development team, and understand the context in which project management is conducted.","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8877,"This course aims to provide students with sufficient knowledge of the basic principles of software project management that they may support a project manager to carry out the project administrative functions of a program office, understand leadership and management within the context of an agile project development team, and understand the context in which project management is conducted.","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.7879,Many of the skills gained are of use outside formal project management environments.,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8482,Many of the skills gained are of use outside formal project management environments.,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8642,Many of the skills gained are of use outside formal project management environments.,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8667,Many of the skills gained are of use outside formal project management environments.,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8775,Many of the skills gained are of use outside formal project management environments.,Prove simple programs correct using Hoare Logic.
0.8822,Many of the skills gained are of use outside formal project management environments.,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8834,Many of the skills gained are of use outside formal project management environments.,Design a Turing Machine which will accomplish simple tasks.
0.7436,"Leadership,  Management, Professionalism, Ethics and Teamwork","Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.7854,"Leadership,  Management, Professionalism, Ethics and Teamwork","Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8170,"Leadership,  Management, Professionalism, Ethics and Teamwork","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8215,"Leadership,  Management, Professionalism, Ethics and Teamwork",Prove simple programs correct using Hoare Logic.
0.8217,"Leadership,  Management, Professionalism, Ethics and Teamwork",Design a Turing Machine which will accomplish simple tasks.
0.8230,"Leadership,  Management, Professionalism, Ethics and Teamwork","Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8325,"Leadership,  Management, Professionalism, Ethics and Teamwork","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.6938,Communication,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.7391,Communication,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.7630,Communication,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.7663,Communication,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.7727,Communication,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8166,Communication,Design a Turing Machine which will accomplish simple tasks.
0.8395,Communication,Prove simple programs correct using Hoare Logic.
0.7234,Project Context,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.7830,Project Context,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.7966,Project Context,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8055,Project Context,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8103,Project Context,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8444,Project Context,Design a Turing Machine which will accomplish simple tasks.
0.8671,Project Context,Prove simple programs correct using Hoare Logic.
0.7707,Project Management Body of Knowledge (PMBoK),"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8142,Project Management Body of Knowledge (PMBoK),"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8305,Project Management Body of Knowledge (PMBoK),"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8409,Project Management Body of Knowledge (PMBoK),"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8460,Project Management Body of Knowledge (PMBoK),"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8491,Project Management Body of Knowledge (PMBoK),Design a Turing Machine which will accomplish simple tasks.
0.8518,Project Management Body of Knowledge (PMBoK),Prove simple programs correct using Hoare Logic.
0.7381,Agile Project Planning,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8022,Agile Project Planning,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8028,Agile Project Planning,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8206,Agile Project Planning,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8270,Agile Project Planning,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8665,Agile Project Planning,Design a Turing Machine which will accomplish simple tasks.
0.8772,Agile Project Planning,Prove simple programs correct using Hoare Logic.
0.7379,Agile Project Management,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.7926,Agile Project Management,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.7993,Agile Project Management,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8148,Agile Project Management,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8200,Agile Project Management,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8651,Agile Project Management,Prove simple programs correct using Hoare Logic.
0.8669,Agile Project Management,Design a Turing Machine which will accomplish simple tasks.
0.7321,Project Scope Management,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.7924,Project Scope Management,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.7957,Project Scope Management,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8124,Project Scope Management,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8125,Project Scope Management,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8512,Project Scope Management,Design a Turing Machine which will accomplish simple tasks.
0.8586,Project Scope Management,Prove simple programs correct using Hoare Logic.
0.7226,Quality & Risk Management,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.7740,Quality & Risk Management,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.7844,Quality & Risk Management,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.7995,Quality & Risk Management,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8026,Quality & Risk Management,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8337,Quality & Risk Management,Prove simple programs correct using Hoare Logic.
0.8371,Quality & Risk Management,Design a Turing Machine which will accomplish simple tasks.
0.7306,Project Control and Governance,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.7832,Project Control and Governance,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8078,Project Control and Governance,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8132,Project Control and Governance,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8136,Project Control and Governance,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8414,Project Control and Governance,Prove simple programs correct using Hoare Logic.
0.8516,Project Control and Governance,Design a Turing Machine which will accomplish simple tasks.
0.7987,"Identify and describe the impact  of business  context on a software development project, including an understanding of the role professional ethics plays in the conduct of a successful project.","Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8486,"Identify and describe the impact  of business  context on a software development project, including an understanding of the role professional ethics plays in the conduct of a successful project.","Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8498,"Identify and describe the impact  of business  context on a software development project, including an understanding of the role professional ethics plays in the conduct of a successful project.",Prove simple programs correct using Hoare Logic.
0.8521,"Identify and describe the impact  of business  context on a software development project, including an understanding of the role professional ethics plays in the conduct of a successful project.","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8579,"Identify and describe the impact  of business  context on a software development project, including an understanding of the role professional ethics plays in the conduct of a successful project.","Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8596,"Identify and describe the impact  of business  context on a software development project, including an understanding of the role professional ethics plays in the conduct of a successful project.",Design a Turing Machine which will accomplish simple tasks.
0.8650,"Identify and describe the impact  of business  context on a software development project, including an understanding of the role professional ethics plays in the conduct of a successful project.","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8150,Evaluate the features of traditional and agile approaches to managing software development to decide an appropriate project management approach for a project in a business context.,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8688,Evaluate the features of traditional and agile approaches to managing software development to decide an appropriate project management approach for a project in a business context.,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8723,Evaluate the features of traditional and agile approaches to managing software development to decide an appropriate project management approach for a project in a business context.,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8739,Evaluate the features of traditional and agile approaches to managing software development to decide an appropriate project management approach for a project in a business context.,Prove simple programs correct using Hoare Logic.
0.8803,Evaluate the features of traditional and agile approaches to managing software development to decide an appropriate project management approach for a project in a business context.,Design a Turing Machine which will accomplish simple tasks.
0.8827,Evaluate the features of traditional and agile approaches to managing software development to decide an appropriate project management approach for a project in a business context.,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8829,Evaluate the features of traditional and agile approaches to managing software development to decide an appropriate project management approach for a project in a business context.,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.7735,"Demonstrate key project management skills such as scope determination; task decomposition; effort estimation, schedule creation and tracking; progress reporting; and management of risk and quality","Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8322,"Demonstrate key project management skills such as scope determination; task decomposition; effort estimation, schedule creation and tracking; progress reporting; and management of risk and quality","Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8409,"Demonstrate key project management skills such as scope determination; task decomposition; effort estimation, schedule creation and tracking; progress reporting; and management of risk and quality","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8447,"Demonstrate key project management skills such as scope determination; task decomposition; effort estimation, schedule creation and tracking; progress reporting; and management of risk and quality",Prove simple programs correct using Hoare Logic.
0.8480,"Demonstrate key project management skills such as scope determination; task decomposition; effort estimation, schedule creation and tracking; progress reporting; and management of risk and quality",Design a Turing Machine which will accomplish simple tasks.
0.8518,"Demonstrate key project management skills such as scope determination; task decomposition; effort estimation, schedule creation and tracking; progress reporting; and management of risk and quality","Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8572,"Demonstrate key project management skills such as scope determination; task decomposition; effort estimation, schedule creation and tracking; progress reporting; and management of risk and quality","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.7920,"Employ research, critical thinking and reflection to formulate and communicate an argument concerning project management concepts.","Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8609,"Employ research, critical thinking and reflection to formulate and communicate an argument concerning project management concepts.","Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8655,"Employ research, critical thinking and reflection to formulate and communicate an argument concerning project management concepts.","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8720,"Employ research, critical thinking and reflection to formulate and communicate an argument concerning project management concepts.",Design a Turing Machine which will accomplish simple tasks.
0.8763,"Employ research, critical thinking and reflection to formulate and communicate an argument concerning project management concepts.","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8872,"Employ research, critical thinking and reflection to formulate and communicate an argument concerning project management concepts.",Prove simple programs correct using Hoare Logic.
0.8929,"Employ research, critical thinking and reflection to formulate and communicate an argument concerning project management concepts.","Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.7700,"Demonstrate teamwork and collaboration skills, and an understanding of the difference between leadership and management.","Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8170,"Demonstrate teamwork and collaboration skills, and an understanding of the difference between leadership and management.","Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8403,"Demonstrate teamwork and collaboration skills, and an understanding of the difference between leadership and management.","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8460,"Demonstrate teamwork and collaboration skills, and an understanding of the difference between leadership and management.",Prove simple programs correct using Hoare Logic.
0.8478,"Demonstrate teamwork and collaboration skills, and an understanding of the difference between leadership and management.","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8535,"Demonstrate teamwork and collaboration skills, and an understanding of the difference between leadership and management.","Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8583,"Demonstrate teamwork and collaboration skills, and an understanding of the difference between leadership and management.",Design a Turing Machine which will accomplish simple tasks.
