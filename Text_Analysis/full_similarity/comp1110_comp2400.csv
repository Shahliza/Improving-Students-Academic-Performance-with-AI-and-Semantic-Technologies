score,s1,s2
0.8773,This course is an introduction to relational databases and the general skills for designing and using them.,"Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8818,This course is an introduction to relational databases and the general skills for designing and using them.,"Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8874,This course is an introduction to relational databases and the general skills for designing and using them.,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8882,This course is an introduction to relational databases and the general skills for designing and using them.,"Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8890,This course is an introduction to relational databases and the general skills for designing and using them.,"The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.8945,This course is an introduction to relational databases and the general skills for designing and using them.,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.9028,This course is an introduction to relational databases and the general skills for designing and using them.,The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.9038,This course is an introduction to relational databases and the general skills for designing and using them.,"Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.9084,This course is an introduction to relational databases and the general skills for designing and using them.,"Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.9123,This course is an introduction to relational databases and the general skills for designing and using them.,"Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.9147,This course is an introduction to relational databases and the general skills for designing and using them.,"Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.9163,This course is an introduction to relational databases and the general skills for designing and using them.,"Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.9188,This course is an introduction to relational databases and the general skills for designing and using them.,This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.9199,This course is an introduction to relational databases and the general skills for designing and using them.,The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.9279,This course is an introduction to relational databases and the general skills for designing and using them.,"The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.9333,This course is an introduction to relational databases and the general skills for designing and using them.,"Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.9395,This course is an introduction to relational databases and the general skills for designing and using them.,"Understand the basics of event-driven programming, and its use in constructing GUIs"
0.8440,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8796,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.",This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.8857,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.9009,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.9043,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.9072,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.9073,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.",The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.9087,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.9158,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","Understand the basics of event-driven programming, and its use in constructing GUIs"
0.9161,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.9221,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.9221,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.9243,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.",The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.9282,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.9296,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.9333,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.9404,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8856,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8882,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8979,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8989,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.9135,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.9161,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.9172,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.9242,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.9264,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","Understand the basics of event-driven programming, and its use in constructing GUIs"
0.9279,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.9304,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.9318,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.",The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.9352,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.",The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.9362,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.9379,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.9380,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.",This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.9393,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.8764,Describe the basic concepts of the relational model and understand its mathematical foundation;,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8832,Describe the basic concepts of the relational model and understand its mathematical foundation;,"Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8856,Describe the basic concepts of the relational model and understand its mathematical foundation;,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8871,Describe the basic concepts of the relational model and understand its mathematical foundation;,"Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8923,Describe the basic concepts of the relational model and understand its mathematical foundation;,"Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.8926,Describe the basic concepts of the relational model and understand its mathematical foundation;,"Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8966,Describe the basic concepts of the relational model and understand its mathematical foundation;,"Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.8970,Describe the basic concepts of the relational model and understand its mathematical foundation;,"Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8979,Describe the basic concepts of the relational model and understand its mathematical foundation;,This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.8987,Describe the basic concepts of the relational model and understand its mathematical foundation;,"Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.9011,Describe the basic concepts of the relational model and understand its mathematical foundation;,The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.9021,Describe the basic concepts of the relational model and understand its mathematical foundation;,"The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.9074,Describe the basic concepts of the relational model and understand its mathematical foundation;,The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.9120,Describe the basic concepts of the relational model and understand its mathematical foundation;,"Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.9218,Describe the basic concepts of the relational model and understand its mathematical foundation;,"Understand the basics of event-driven programming, and its use in constructing GUIs"
0.9225,Describe the basic concepts of the relational model and understand its mathematical foundation;,"Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.9256,Describe the basic concepts of the relational model and understand its mathematical foundation;,"The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.7529,"Use the SQL language to define, query and manipulate a relational database.","The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.7571,"Use the SQL language to define, query and manipulate a relational database.","Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.7756,"Use the SQL language to define, query and manipulate a relational database.",This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.7776,"Use the SQL language to define, query and manipulate a relational database.","The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.7989,"Use the SQL language to define, query and manipulate a relational database.","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.8033,"Use the SQL language to define, query and manipulate a relational database.",The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.8037,"Use the SQL language to define, query and manipulate a relational database.","Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8088,"Use the SQL language to define, query and manipulate a relational database.","Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8118,"Use the SQL language to define, query and manipulate a relational database.","Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.8229,"Use the SQL language to define, query and manipulate a relational database.","Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.8261,"Use the SQL language to define, query and manipulate a relational database.","Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.8398,"Use the SQL language to define, query and manipulate a relational database.","Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.8415,"Use the SQL language to define, query and manipulate a relational database.","Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8454,"Use the SQL language to define, query and manipulate a relational database.","The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.8466,"Use the SQL language to define, query and manipulate a relational database.",The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.8556,"Use the SQL language to define, query and manipulate a relational database.","Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8610,"Use the SQL language to define, query and manipulate a relational database.","Understand the basics of event-driven programming, and its use in constructing GUIs"
0.8340,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8709,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8787,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.8857,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8865,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.8911,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.8942,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.8979,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.9007,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.9017,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.9025,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.9046,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.9134,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.9178,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.9187,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"Understand the basics of event-driven programming, and its use in constructing GUIs"
0.9214,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.9271,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.8548,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8906,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.9022,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.9025,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.9116,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.9196,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.9233,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.9236,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.9241,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.9246,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.9274,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"Understand the basics of event-driven programming, and its use in constructing GUIs"
0.9287,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.9294,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.9335,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.9341,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.9360,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.9388,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.8255,"Understand query processing and optimization, transaction and security management in a relational database management system.","The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8675,"Understand query processing and optimization, transaction and security management in a relational database management system.","Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8787,"Understand query processing and optimization, transaction and security management in a relational database management system.","Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8799,"Understand query processing and optimization, transaction and security management in a relational database management system.",This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.8871,"Understand query processing and optimization, transaction and security management in a relational database management system.","Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8901,"Understand query processing and optimization, transaction and security management in a relational database management system.",The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.9027,"Understand query processing and optimization, transaction and security management in a relational database management system.","Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.9028,"Understand query processing and optimization, transaction and security management in a relational database management system.","The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.9028,"Understand query processing and optimization, transaction and security management in a relational database management system.","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.9031,"Understand query processing and optimization, transaction and security management in a relational database management system.","Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.9057,"Understand query processing and optimization, transaction and security management in a relational database management system.","Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.9060,"Understand query processing and optimization, transaction and security management in a relational database management system.","Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.9082,"Understand query processing and optimization, transaction and security management in a relational database management system.","Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.9097,"Understand query processing and optimization, transaction and security management in a relational database management system.","Understand the basics of event-driven programming, and its use in constructing GUIs"
0.9113,"Understand query processing and optimization, transaction and security management in a relational database management system.",The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.9150,"Understand query processing and optimization, transaction and security management in a relational database management system.","The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.9178,"Understand query processing and optimization, transaction and security management in a relational database management system.","Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8529,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8817,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8836,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8860,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8887,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8893,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).",This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.8896,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8903,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).",The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.8912,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.9012,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.9046,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.9049,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.9055,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).",The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.9080,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.9128,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","Understand the basics of event-driven programming, and its use in constructing GUIs"
0.9145,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.9188,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
