score,s1,s2
0.8280,This course is an introduction to relational databases and the general skills for designing and using them.,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8604,This course is an introduction to relational databases and the general skills for designing and using them.,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8661,This course is an introduction to relational databases and the general skills for designing and using them.,Prove simple programs correct using Hoare Logic.
0.8789,This course is an introduction to relational databases and the general skills for designing and using them.,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8885,This course is an introduction to relational databases and the general skills for designing and using them.,Design a Turing Machine which will accomplish simple tasks.
0.8909,This course is an introduction to relational databases and the general skills for designing and using them.,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.9133,This course is an introduction to relational databases and the general skills for designing and using them.,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8460,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8627,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.",Design a Turing Machine which will accomplish simple tasks.
0.8901,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.",Prove simple programs correct using Hoare Logic.
0.8909,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8925,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8972,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.9243,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8281,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8712,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.",Design a Turing Machine which will accomplish simple tasks.
0.8755,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8827,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.",Prove simple programs correct using Hoare Logic.
0.8957,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8963,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.9077,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8396,Describe the basic concepts of the relational model and understand its mathematical foundation;,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8848,Describe the basic concepts of the relational model and understand its mathematical foundation;,Design a Turing Machine which will accomplish simple tasks.
0.8896,Describe the basic concepts of the relational model and understand its mathematical foundation;,Prove simple programs correct using Hoare Logic.
0.8937,Describe the basic concepts of the relational model and understand its mathematical foundation;,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.9027,Describe the basic concepts of the relational model and understand its mathematical foundation;,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.9030,Describe the basic concepts of the relational model and understand its mathematical foundation;,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.9063,Describe the basic concepts of the relational model and understand its mathematical foundation;,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.7960,"Use the SQL language to define, query and manipulate a relational database.",Prove simple programs correct using Hoare Logic.
0.8072,"Use the SQL language to define, query and manipulate a relational database.","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8086,"Use the SQL language to define, query and manipulate a relational database.","Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8103,"Use the SQL language to define, query and manipulate a relational database.","Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8108,"Use the SQL language to define, query and manipulate a relational database.","Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8320,"Use the SQL language to define, query and manipulate a relational database.",Design a Turing Machine which will accomplish simple tasks.
0.8432,"Use the SQL language to define, query and manipulate a relational database.","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8516,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8831,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,Design a Turing Machine which will accomplish simple tasks.
0.8852,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8903,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8932,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8953,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,Prove simple programs correct using Hoare Logic.
0.8974,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8477,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8955,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,Design a Turing Machine which will accomplish simple tasks.
0.8968,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.9026,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.9109,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.9123,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.9181,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,Prove simple programs correct using Hoare Logic.
0.8177,"Understand query processing and optimization, transaction and security management in a relational database management system.","Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8597,"Understand query processing and optimization, transaction and security management in a relational database management system.","Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8634,"Understand query processing and optimization, transaction and security management in a relational database management system.","Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8664,"Understand query processing and optimization, transaction and security management in a relational database management system.",Design a Turing Machine which will accomplish simple tasks.
0.8697,"Understand query processing and optimization, transaction and security management in a relational database management system.","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8804,"Understand query processing and optimization, transaction and security management in a relational database management system.",Prove simple programs correct using Hoare Logic.
0.8825,"Understand query processing and optimization, transaction and security management in a relational database management system.","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8012,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8429,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8516,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8544,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).",Design a Turing Machine which will accomplish simple tasks.
0.8673,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).",Prove simple programs correct using Hoare Logic.
0.8683,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8757,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
