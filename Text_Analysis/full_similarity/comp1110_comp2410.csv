score,s1,s2
0.8348,Data communications and computer networking systems are growing rapidly in both size and function. It is impossible to think of a successful business day without the Internet.,"Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8375,Data communications and computer networking systems are growing rapidly in both size and function. It is impossible to think of a successful business day without the Internet.,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8389,Data communications and computer networking systems are growing rapidly in both size and function. It is impossible to think of a successful business day without the Internet.,"Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8521,Data communications and computer networking systems are growing rapidly in both size and function. It is impossible to think of a successful business day without the Internet.,"Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8602,Data communications and computer networking systems are growing rapidly in both size and function. It is impossible to think of a successful business day without the Internet.,"The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.8604,Data communications and computer networking systems are growing rapidly in both size and function. It is impossible to think of a successful business day without the Internet.,The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.8627,Data communications and computer networking systems are growing rapidly in both size and function. It is impossible to think of a successful business day without the Internet.,"Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.8629,Data communications and computer networking systems are growing rapidly in both size and function. It is impossible to think of a successful business day without the Internet.,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8675,Data communications and computer networking systems are growing rapidly in both size and function. It is impossible to think of a successful business day without the Internet.,"Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.8683,Data communications and computer networking systems are growing rapidly in both size and function. It is impossible to think of a successful business day without the Internet.,"Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8720,Data communications and computer networking systems are growing rapidly in both size and function. It is impossible to think of a successful business day without the Internet.,"The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.8756,Data communications and computer networking systems are growing rapidly in both size and function. It is impossible to think of a successful business day without the Internet.,The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.8770,Data communications and computer networking systems are growing rapidly in both size and function. It is impossible to think of a successful business day without the Internet.,"Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.8775,Data communications and computer networking systems are growing rapidly in both size and function. It is impossible to think of a successful business day without the Internet.,"Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.8785,Data communications and computer networking systems are growing rapidly in both size and function. It is impossible to think of a successful business day without the Internet.,"Understand the basics of event-driven programming, and its use in constructing GUIs"
0.8788,Data communications and computer networking systems are growing rapidly in both size and function. It is impossible to think of a successful business day without the Internet.,This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.8856,Data communications and computer networking systems are growing rapidly in both size and function. It is impossible to think of a successful business day without the Internet.,"Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.8325,"Modern communication technologies such as WiFi, Bring Your Own Device (BYOD), and Internet of Things (IoT) help us to stay connected with our family, friends, and work regardless of present location.","Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8379,"Modern communication technologies such as WiFi, Bring Your Own Device (BYOD), and Internet of Things (IoT) help us to stay connected with our family, friends, and work regardless of present location.","Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8406,"Modern communication technologies such as WiFi, Bring Your Own Device (BYOD), and Internet of Things (IoT) help us to stay connected with our family, friends, and work regardless of present location.","Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8468,"Modern communication technologies such as WiFi, Bring Your Own Device (BYOD), and Internet of Things (IoT) help us to stay connected with our family, friends, and work regardless of present location.",The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.8493,"Modern communication technologies such as WiFi, Bring Your Own Device (BYOD), and Internet of Things (IoT) help us to stay connected with our family, friends, and work regardless of present location.","The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.8502,"Modern communication technologies such as WiFi, Bring Your Own Device (BYOD), and Internet of Things (IoT) help us to stay connected with our family, friends, and work regardless of present location.",The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.8532,"Modern communication technologies such as WiFi, Bring Your Own Device (BYOD), and Internet of Things (IoT) help us to stay connected with our family, friends, and work regardless of present location.","Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.8558,"Modern communication technologies such as WiFi, Bring Your Own Device (BYOD), and Internet of Things (IoT) help us to stay connected with our family, friends, and work regardless of present location.","Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8585,"Modern communication technologies such as WiFi, Bring Your Own Device (BYOD), and Internet of Things (IoT) help us to stay connected with our family, friends, and work regardless of present location.","Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.8586,"Modern communication technologies such as WiFi, Bring Your Own Device (BYOD), and Internet of Things (IoT) help us to stay connected with our family, friends, and work regardless of present location.","Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8619,"Modern communication technologies such as WiFi, Bring Your Own Device (BYOD), and Internet of Things (IoT) help us to stay connected with our family, friends, and work regardless of present location.",This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.8650,"Modern communication technologies such as WiFi, Bring Your Own Device (BYOD), and Internet of Things (IoT) help us to stay connected with our family, friends, and work regardless of present location.","The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.8677,"Modern communication technologies such as WiFi, Bring Your Own Device (BYOD), and Internet of Things (IoT) help us to stay connected with our family, friends, and work regardless of present location.","The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8694,"Modern communication technologies such as WiFi, Bring Your Own Device (BYOD), and Internet of Things (IoT) help us to stay connected with our family, friends, and work regardless of present location.","Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.8769,"Modern communication technologies such as WiFi, Bring Your Own Device (BYOD), and Internet of Things (IoT) help us to stay connected with our family, friends, and work regardless of present location.","Understand the basics of event-driven programming, and its use in constructing GUIs"
0.8836,"Modern communication technologies such as WiFi, Bring Your Own Device (BYOD), and Internet of Things (IoT) help us to stay connected with our family, friends, and work regardless of present location.","Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.8893,"Modern communication technologies such as WiFi, Bring Your Own Device (BYOD), and Internet of Things (IoT) help us to stay connected with our family, friends, and work regardless of present location.","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.8516,"Networked Information Systems (NISs) are becoming an essential part of everyday experiences, in our kitchen appliances, cars, and public transport and for Internet banking and shopping.","Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8556,"Networked Information Systems (NISs) are becoming an essential part of everyday experiences, in our kitchen appliances, cars, and public transport and for Internet banking and shopping.","Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8590,"Networked Information Systems (NISs) are becoming an essential part of everyday experiences, in our kitchen appliances, cars, and public transport and for Internet banking and shopping.","Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8625,"Networked Information Systems (NISs) are becoming an essential part of everyday experiences, in our kitchen appliances, cars, and public transport and for Internet banking and shopping.","The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8672,"Networked Information Systems (NISs) are becoming an essential part of everyday experiences, in our kitchen appliances, cars, and public transport and for Internet banking and shopping.","Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8760,"Networked Information Systems (NISs) are becoming an essential part of everyday experiences, in our kitchen appliances, cars, and public transport and for Internet banking and shopping.",The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.8768,"Networked Information Systems (NISs) are becoming an essential part of everyday experiences, in our kitchen appliances, cars, and public transport and for Internet banking and shopping.","Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.8790,"Networked Information Systems (NISs) are becoming an essential part of everyday experiences, in our kitchen appliances, cars, and public transport and for Internet banking and shopping.","Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.8857,"Networked Information Systems (NISs) are becoming an essential part of everyday experiences, in our kitchen appliances, cars, and public transport and for Internet banking and shopping.",The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.8860,"Networked Information Systems (NISs) are becoming an essential part of everyday experiences, in our kitchen appliances, cars, and public transport and for Internet banking and shopping.",This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.8862,"Networked Information Systems (NISs) are becoming an essential part of everyday experiences, in our kitchen appliances, cars, and public transport and for Internet banking and shopping.","Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.8870,"Networked Information Systems (NISs) are becoming an essential part of everyday experiences, in our kitchen appliances, cars, and public transport and for Internet banking and shopping.","The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.8900,"Networked Information Systems (NISs) are becoming an essential part of everyday experiences, in our kitchen appliances, cars, and public transport and for Internet banking and shopping.","Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8909,"Networked Information Systems (NISs) are becoming an essential part of everyday experiences, in our kitchen appliances, cars, and public transport and for Internet banking and shopping.","Understand the basics of event-driven programming, and its use in constructing GUIs"
0.8984,"Networked Information Systems (NISs) are becoming an essential part of everyday experiences, in our kitchen appliances, cars, and public transport and for Internet banking and shopping.","The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.9081,"Networked Information Systems (NISs) are becoming an essential part of everyday experiences, in our kitchen appliances, cars, and public transport and for Internet banking and shopping.","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.9139,"Networked Information Systems (NISs) are becoming an essential part of everyday experiences, in our kitchen appliances, cars, and public transport and for Internet banking and shopping.","Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.8411,"Because they can make or break a day, understanding how networks work, and how they should be set up and managed to for reliability, scalability, mobility, and security is of the utmost importance to us.","Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8486,"Because they can make or break a day, understanding how networks work, and how they should be set up and managed to for reliability, scalability, mobility, and security is of the utmost importance to us.","The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8493,"Because they can make or break a day, understanding how networks work, and how they should be set up and managed to for reliability, scalability, mobility, and security is of the utmost importance to us.","Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8498,"Because they can make or break a day, understanding how networks work, and how they should be set up and managed to for reliability, scalability, mobility, and security is of the utmost importance to us.","Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8506,"Because they can make or break a day, understanding how networks work, and how they should be set up and managed to for reliability, scalability, mobility, and security is of the utmost importance to us.",This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.8542,"Because they can make or break a day, understanding how networks work, and how they should be set up and managed to for reliability, scalability, mobility, and security is of the utmost importance to us.","The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.8546,"Because they can make or break a day, understanding how networks work, and how they should be set up and managed to for reliability, scalability, mobility, and security is of the utmost importance to us.",The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.8549,"Because they can make or break a day, understanding how networks work, and how they should be set up and managed to for reliability, scalability, mobility, and security is of the utmost importance to us.","Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.8573,"Because they can make or break a day, understanding how networks work, and how they should be set up and managed to for reliability, scalability, mobility, and security is of the utmost importance to us.","Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8577,"Because they can make or break a day, understanding how networks work, and how they should be set up and managed to for reliability, scalability, mobility, and security is of the utmost importance to us.","Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.8652,"Because they can make or break a day, understanding how networks work, and how they should be set up and managed to for reliability, scalability, mobility, and security is of the utmost importance to us.","Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8679,"Because they can make or break a day, understanding how networks work, and how they should be set up and managed to for reliability, scalability, mobility, and security is of the utmost importance to us.",The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.8706,"Because they can make or break a day, understanding how networks work, and how they should be set up and managed to for reliability, scalability, mobility, and security is of the utmost importance to us.","Understand the basics of event-driven programming, and its use in constructing GUIs"
0.8728,"Because they can make or break a day, understanding how networks work, and how they should be set up and managed to for reliability, scalability, mobility, and security is of the utmost importance to us.","The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.8813,"Because they can make or break a day, understanding how networks work, and how they should be set up and managed to for reliability, scalability, mobility, and security is of the utmost importance to us.","Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.8893,"Because they can make or break a day, understanding how networks work, and how they should be set up and managed to for reliability, scalability, mobility, and security is of the utmost importance to us.","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.8945,"Because they can make or break a day, understanding how networks work, and how they should be set up and managed to for reliability, scalability, mobility, and security is of the utmost importance to us.","Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.8812,"In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities.","Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8865,"In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities.","Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.9031,"In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities.","Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.9048,"In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities.",The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.9063,"In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities.","Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.9067,"In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities.","Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.9095,"In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities.",The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.9154,"In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities.","The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.9158,"In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities.","The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.9204,"In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities.","Understand the basics of event-driven programming, and its use in constructing GUIs"
0.9221,"In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities.","Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.9231,"In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities.","The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.9249,"In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities.","Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.9276,"In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities.","Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.9295,"In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities.","Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.9347,"In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities.",This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.9458,"In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities.","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.8543,"You will have the foundational basis to understand, evaluate, and compare new technologies and their applications.","Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8624,"You will have the foundational basis to understand, evaluate, and compare new technologies and their applications.","Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8674,"You will have the foundational basis to understand, evaluate, and compare new technologies and their applications.","Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8690,"You will have the foundational basis to understand, evaluate, and compare new technologies and their applications.","Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8712,"You will have the foundational basis to understand, evaluate, and compare new technologies and their applications.",The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.8765,"You will have the foundational basis to understand, evaluate, and compare new technologies and their applications.","The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.8825,"You will have the foundational basis to understand, evaluate, and compare new technologies and their applications.",The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.8826,"You will have the foundational basis to understand, evaluate, and compare new technologies and their applications.","Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.8834,"You will have the foundational basis to understand, evaluate, and compare new technologies and their applications.","Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.8873,"You will have the foundational basis to understand, evaluate, and compare new technologies and their applications.","Understand the basics of event-driven programming, and its use in constructing GUIs"
0.8925,"You will have the foundational basis to understand, evaluate, and compare new technologies and their applications.","The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.8940,"You will have the foundational basis to understand, evaluate, and compare new technologies and their applications.","Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.9018,"You will have the foundational basis to understand, evaluate, and compare new technologies and their applications.",This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.9062,"You will have the foundational basis to understand, evaluate, and compare new technologies and their applications.","The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.9103,"You will have the foundational basis to understand, evaluate, and compare new technologies and their applications.","Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.9217,"You will have the foundational basis to understand, evaluate, and compare new technologies and their applications.","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.9263,"You will have the foundational basis to understand, evaluate, and compare new technologies and their applications.","Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.8651,"You will also develop a working knowledge of measuring risks and security threats and considering network monitoring and management procedures. Finally, you will build an ethics awareness and the communication skills needed to apply these networking concepts to a range of real-life analytical scenarios.","Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8710,"You will also develop a working knowledge of measuring risks and security threats and considering network monitoring and management procedures. Finally, you will build an ethics awareness and the communication skills needed to apply these networking concepts to a range of real-life analytical scenarios.","Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8772,"You will also develop a working knowledge of measuring risks and security threats and considering network monitoring and management procedures. Finally, you will build an ethics awareness and the communication skills needed to apply these networking concepts to a range of real-life analytical scenarios.","Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8776,"You will also develop a working knowledge of measuring risks and security threats and considering network monitoring and management procedures. Finally, you will build an ethics awareness and the communication skills needed to apply these networking concepts to a range of real-life analytical scenarios.","Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8888,"You will also develop a working knowledge of measuring risks and security threats and considering network monitoring and management procedures. Finally, you will build an ethics awareness and the communication skills needed to apply these networking concepts to a range of real-life analytical scenarios.",The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.8918,"You will also develop a working knowledge of measuring risks and security threats and considering network monitoring and management procedures. Finally, you will build an ethics awareness and the communication skills needed to apply these networking concepts to a range of real-life analytical scenarios.","Understand the basics of event-driven programming, and its use in constructing GUIs"
0.8921,"You will also develop a working knowledge of measuring risks and security threats and considering network monitoring and management procedures. Finally, you will build an ethics awareness and the communication skills needed to apply these networking concepts to a range of real-life analytical scenarios.","Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.8925,"You will also develop a working knowledge of measuring risks and security threats and considering network monitoring and management procedures. Finally, you will build an ethics awareness and the communication skills needed to apply these networking concepts to a range of real-life analytical scenarios.","The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.8930,"You will also develop a working knowledge of measuring risks and security threats and considering network monitoring and management procedures. Finally, you will build an ethics awareness and the communication skills needed to apply these networking concepts to a range of real-life analytical scenarios.","Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.8976,"You will also develop a working knowledge of measuring risks and security threats and considering network monitoring and management procedures. Finally, you will build an ethics awareness and the communication skills needed to apply these networking concepts to a range of real-life analytical scenarios.",The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.8998,"You will also develop a working knowledge of measuring risks and security threats and considering network monitoring and management procedures. Finally, you will build an ethics awareness and the communication skills needed to apply these networking concepts to a range of real-life analytical scenarios.","The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.9060,"You will also develop a working knowledge of measuring risks and security threats and considering network monitoring and management procedures. Finally, you will build an ethics awareness and the communication skills needed to apply these networking concepts to a range of real-life analytical scenarios.","Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.9108,"You will also develop a working knowledge of measuring risks and security threats and considering network monitoring and management procedures. Finally, you will build an ethics awareness and the communication skills needed to apply these networking concepts to a range of real-life analytical scenarios.","The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.9146,"You will also develop a working knowledge of measuring risks and security threats and considering network monitoring and management procedures. Finally, you will build an ethics awareness and the communication skills needed to apply these networking concepts to a range of real-life analytical scenarios.",This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.9270,"You will also develop a working knowledge of measuring risks and security threats and considering network monitoring and management procedures. Finally, you will build an ethics awareness and the communication skills needed to apply these networking concepts to a range of real-life analytical scenarios.","Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.9273,"You will also develop a working knowledge of measuring risks and security threats and considering network monitoring and management procedures. Finally, you will build an ethics awareness and the communication skills needed to apply these networking concepts to a range of real-life analytical scenarios.","Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.9377,"You will also develop a working knowledge of measuring risks and security threats and considering network monitoring and management procedures. Finally, you will build an ethics awareness and the communication skills needed to apply these networking concepts to a range of real-life analytical scenarios.","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.8714,"Discuss how network applications and their components work in real-life socio-economic, ethical, and legal contexts and evaluate their risks.","The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8750,"Discuss how network applications and their components work in real-life socio-economic, ethical, and legal contexts and evaluate their risks.","Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8775,"Discuss how network applications and their components work in real-life socio-economic, ethical, and legal contexts and evaluate their risks.","Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8787,"Discuss how network applications and their components work in real-life socio-economic, ethical, and legal contexts and evaluate their risks.","Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8829,"Discuss how network applications and their components work in real-life socio-economic, ethical, and legal contexts and evaluate their risks.","Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8878,"Discuss how network applications and their components work in real-life socio-economic, ethical, and legal contexts and evaluate their risks.","Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8896,"Discuss how network applications and their components work in real-life socio-economic, ethical, and legal contexts and evaluate their risks.",The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.8962,"Discuss how network applications and their components work in real-life socio-economic, ethical, and legal contexts and evaluate their risks.",This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.8965,"Discuss how network applications and their components work in real-life socio-economic, ethical, and legal contexts and evaluate their risks.","Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.8967,"Discuss how network applications and their components work in real-life socio-economic, ethical, and legal contexts and evaluate their risks.","The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.8978,"Discuss how network applications and their components work in real-life socio-economic, ethical, and legal contexts and evaluate their risks.","Understand the basics of event-driven programming, and its use in constructing GUIs"
0.9021,"Discuss how network applications and their components work in real-life socio-economic, ethical, and legal contexts and evaluate their risks.",The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.9028,"Discuss how network applications and their components work in real-life socio-economic, ethical, and legal contexts and evaluate their risks.","Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.9137,"Discuss how network applications and their components work in real-life socio-economic, ethical, and legal contexts and evaluate their risks.","The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.9152,"Discuss how network applications and their components work in real-life socio-economic, ethical, and legal contexts and evaluate their risks.","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.9172,"Discuss how network applications and their components work in real-life socio-economic, ethical, and legal contexts and evaluate their risks.","Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.9237,"Discuss how network applications and their components work in real-life socio-economic, ethical, and legal contexts and evaluate their risks.","Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.8530,"Analyse the role of network standards, protocols, and layered models.","The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8770,"Analyse the role of network standards, protocols, and layered models.","Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8809,"Analyse the role of network standards, protocols, and layered models.","Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8886,"Analyse the role of network standards, protocols, and layered models.","Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8946,"Analyse the role of network standards, protocols, and layered models.","Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8976,"Analyse the role of network standards, protocols, and layered models.",This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.9034,"Analyse the role of network standards, protocols, and layered models.","Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.9039,"Analyse the role of network standards, protocols, and layered models.","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.9106,"Analyse the role of network standards, protocols, and layered models.","Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.9123,"Analyse the role of network standards, protocols, and layered models.","Understand the basics of event-driven programming, and its use in constructing GUIs"
0.9124,"Analyse the role of network standards, protocols, and layered models.","Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.9131,"Analyse the role of network standards, protocols, and layered models.",The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.9192,"Analyse the role of network standards, protocols, and layered models.",The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.9202,"Analyse the role of network standards, protocols, and layered models.","Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.9225,"Analyse the role of network standards, protocols, and layered models.","Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.9247,"Analyse the role of network standards, protocols, and layered models.","The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.9262,"Analyse the role of network standards, protocols, and layered models.","The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.8576,"Apply network design principles, topologies, architectures, and their components.","The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8776,"Apply network design principles, topologies, architectures, and their components.","Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8898,"Apply network design principles, topologies, architectures, and their components.","Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8961,"Apply network design principles, topologies, architectures, and their components.","Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8966,"Apply network design principles, topologies, architectures, and their components.","Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8984,"Apply network design principles, topologies, architectures, and their components.",This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.8986,"Apply network design principles, topologies, architectures, and their components.","Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.9042,"Apply network design principles, topologies, architectures, and their components.",The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.9078,"Apply network design principles, topologies, architectures, and their components.","Understand the basics of event-driven programming, and its use in constructing GUIs"
0.9096,"Apply network design principles, topologies, architectures, and their components.",The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.9108,"Apply network design principles, topologies, architectures, and their components.","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.9151,"Apply network design principles, topologies, architectures, and their components.","Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.9162,"Apply network design principles, topologies, architectures, and their components.","The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.9199,"Apply network design principles, topologies, architectures, and their components.","Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.9240,"Apply network design principles, topologies, architectures, and their components.","Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.9257,"Apply network design principles, topologies, architectures, and their components.","Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.9349,"Apply network design principles, topologies, architectures, and their components.","The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.8587,Apply logical and physical networks at levels from the local area to the Internet.,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8708,Apply logical and physical networks at levels from the local area to the Internet.,"Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8711,Apply logical and physical networks at levels from the local area to the Internet.,"Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8750,Apply logical and physical networks at levels from the local area to the Internet.,"Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8874,Apply logical and physical networks at levels from the local area to the Internet.,"Understand the basics of event-driven programming, and its use in constructing GUIs"
0.8922,Apply logical and physical networks at levels from the local area to the Internet.,"Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.8924,Apply logical and physical networks at levels from the local area to the Internet.,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8940,Apply logical and physical networks at levels from the local area to the Internet.,"Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.8941,Apply logical and physical networks at levels from the local area to the Internet.,The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.8970,Apply logical and physical networks at levels from the local area to the Internet.,This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.8988,Apply logical and physical networks at levels from the local area to the Internet.,The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.8991,Apply logical and physical networks at levels from the local area to the Internet.,"Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.9009,Apply logical and physical networks at levels from the local area to the Internet.,"Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.9014,Apply logical and physical networks at levels from the local area to the Internet.,"Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.9073,Apply logical and physical networks at levels from the local area to the Internet.,"The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.9112,Apply logical and physical networks at levels from the local area to the Internet.,"The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.9152,Apply logical and physical networks at levels from the local area to the Internet.,"Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.8555,Create a virtual machine and apply tools for packet analysis and file encryption in a lab environment.,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8772,Create a virtual machine and apply tools for packet analysis and file encryption in a lab environment.,"Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8918,Create a virtual machine and apply tools for packet analysis and file encryption in a lab environment.,"Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8932,Create a virtual machine and apply tools for packet analysis and file encryption in a lab environment.,"Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8974,Create a virtual machine and apply tools for packet analysis and file encryption in a lab environment.,"The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.8977,Create a virtual machine and apply tools for packet analysis and file encryption in a lab environment.,The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.8983,Create a virtual machine and apply tools for packet analysis and file encryption in a lab environment.,"Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8987,Create a virtual machine and apply tools for packet analysis and file encryption in a lab environment.,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.9049,Create a virtual machine and apply tools for packet analysis and file encryption in a lab environment.,"Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.9052,Create a virtual machine and apply tools for packet analysis and file encryption in a lab environment.,This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.9096,Create a virtual machine and apply tools for packet analysis and file encryption in a lab environment.,The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.9105,Create a virtual machine and apply tools for packet analysis and file encryption in a lab environment.,"Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.9145,Create a virtual machine and apply tools for packet analysis and file encryption in a lab environment.,"Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.9165,Create a virtual machine and apply tools for packet analysis and file encryption in a lab environment.,"Understand the basics of event-driven programming, and its use in constructing GUIs"
0.9203,Create a virtual machine and apply tools for packet analysis and file encryption in a lab environment.,"Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.9211,Create a virtual machine and apply tools for packet analysis and file encryption in a lab environment.,"Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.9247,Create a virtual machine and apply tools for packet analysis and file encryption in a lab environment.,"The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
