score,s1,s2
0.7691,"This course covers a range of concepts, techniques and technologies in network security.","Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8136,"This course covers a range of concepts, techniques and technologies in network security.","Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8232,"This course covers a range of concepts, techniques and technologies in network security.",Prove simple programs correct using Hoare Logic.
0.8452,"This course covers a range of concepts, techniques and technologies in network security.",Design a Turing Machine which will accomplish simple tasks.
0.8470,"This course covers a range of concepts, techniques and technologies in network security.","Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8521,"This course covers a range of concepts, techniques and technologies in network security.","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8790,"This course covers a range of concepts, techniques and technologies in network security.","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8076,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8194,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.",Prove simple programs correct using Hoare Logic.
0.8247,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.",Design a Turing Machine which will accomplish simple tasks.
0.8357,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8493,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8672,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8740,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8038,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8512,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8645,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8696,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8719,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.",Prove simple programs correct using Hoare Logic.
0.8753,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8812,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.",Design a Turing Machine which will accomplish simple tasks.
0.7387,Explain network security issues.,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.7984,Explain network security issues.,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8013,Explain network security issues.,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8072,Explain network security issues.,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8104,Explain network security issues.,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8745,Explain network security issues.,Prove simple programs correct using Hoare Logic.
0.8771,Explain network security issues.,Design a Turing Machine which will accomplish simple tasks.
0.7984,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8380,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8447,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8461,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8480,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8489,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.",Prove simple programs correct using Hoare Logic.
0.8617,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.",Design a Turing Machine which will accomplish simple tasks.
0.8044,Perform simple penetration testing of a network and network services,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8488,Perform simple penetration testing of a network and network services,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8524,Perform simple penetration testing of a network and network services,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8539,Perform simple penetration testing of a network and network services,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8603,Perform simple penetration testing of a network and network services,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8842,Perform simple penetration testing of a network and network services,Prove simple programs correct using Hoare Logic.
0.8982,Perform simple penetration testing of a network and network services,Design a Turing Machine which will accomplish simple tasks.
0.8122,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8562,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8572,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8579,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8647,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8752,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,Prove simple programs correct using Hoare Logic.
0.8912,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,Design a Turing Machine which will accomplish simple tasks.
0.7697,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8096,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8137,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8187,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8205,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,Prove simple programs correct using Hoare Logic.
0.8272,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8482,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,Design a Turing Machine which will accomplish simple tasks.
