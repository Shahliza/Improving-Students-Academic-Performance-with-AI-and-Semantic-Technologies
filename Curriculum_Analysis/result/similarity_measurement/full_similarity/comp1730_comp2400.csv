score,s1,s2
0.8421,This course is an introduction to relational databases and the general skills for designing and using them.,Have an awareness of good program organisation.
0.9008,This course is an introduction to relational databases and the general skills for designing and using them.,Testing and debugging are seen as integral to the programming enterprise.
0.9036,This course is an introduction to relational databases and the general skills for designing and using them.,Have a practical understanding of the processing of scientific data.
0.9051,This course is an introduction to relational databases and the general skills for designing and using them.,There is an emphasis on designing and writing correct code.
0.9077,This course is an introduction to relational databases and the general skills for designing and using them.,Have an understanding of practical aspects of machine architecture including finite precision and rounding errors.
0.9086,This course is an introduction to relational databases and the general skills for designing and using them.,Both top-down and object oriented design are taught.
0.9094,This course is an introduction to relational databases and the general skills for designing and using them.,"Design, write and debug small programs to solve practical problems of a scientific nature."
0.9151,This course is an introduction to relational databases and the general skills for designing and using them.,Be able to describe and design small computer programs using both procedural and object-oriented methodologies.
0.9201,This course is an introduction to relational databases and the general skills for designing and using them.,"The course emphasises technical programming, the simulation of scientific systems and the processing of scientific data."
0.9209,This course is an introduction to relational databases and the general skills for designing and using them.,Have an understanding of some widely-used algorithms.
0.9242,This course is an introduction to relational databases and the general skills for designing and using them.,The course will be taught using one or more programming languages which are widely applicable to scientific work.
0.9245,This course is an introduction to relational databases and the general skills for designing and using them.,There will be an introduction to widely-used computer science algorithms and to machine architecture.
0.9317,This course is an introduction to relational databases and the general skills for designing and using them.,This course teaches introductory programming within a problem solving framework applicable to the sciences.
0.8455,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.",Have an awareness of good program organisation.
0.8638,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.",There is an emphasis on designing and writing correct code.
0.8648,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.",Have an understanding of some widely-used algorithms.
0.8655,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.",There will be an introduction to widely-used computer science algorithms and to machine architecture.
0.8727,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.",Have a practical understanding of the processing of scientific data.
0.8807,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.",The course will be taught using one or more programming languages which are widely applicable to scientific work.
0.8858,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.",This course teaches introductory programming within a problem solving framework applicable to the sciences.
0.8878,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","Design, write and debug small programs to solve practical problems of a scientific nature."
0.8958,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.",Both top-down and object oriented design are taught.
0.8983,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.","The course emphasises technical programming, the simulation of scientific systems and the processing of scientific data."
0.9030,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.",Testing and debugging are seen as integral to the programming enterprise.
0.9050,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.",Be able to describe and design small computer programs using both procedural and object-oriented methodologies.
0.9078,"The topics include the relational data model, SQL, entity-relationship model, functional dependencies, (de-)normalisation, relational algebra, query processing and optimisation, database transactions and security.",Have an understanding of practical aspects of machine architecture including finite precision and rounding errors.
0.8819,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.",There is an emphasis on designing and writing correct code.
0.8834,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.",Have an awareness of good program organisation.
0.8949,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","Design, write and debug small programs to solve practical problems of a scientific nature."
0.9003,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.",Be able to describe and design small computer programs using both procedural and object-oriented methodologies.
0.9004,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.",Have a practical understanding of the processing of scientific data.
0.9037,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.",Have an understanding of some widely-used algorithms.
0.9046,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.",Both top-down and object oriented design are taught.
0.9053,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.",Have an understanding of practical aspects of machine architecture including finite precision and rounding errors.
0.9084,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.",Testing and debugging are seen as integral to the programming enterprise.
0.9090,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.",There will be an introduction to widely-used computer science algorithms and to machine architecture.
0.9163,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.","The course emphasises technical programming, the simulation of scientific systems and the processing of scientific data."
0.9277,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.",The course will be taught using one or more programming languages which are widely applicable to scientific work.
0.9300,"To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.",This course teaches introductory programming within a problem solving framework applicable to the sciences.
0.8596,Describe the basic concepts of the relational model and understand its mathematical foundation;,Have an awareness of good program organisation.
0.8675,Describe the basic concepts of the relational model and understand its mathematical foundation;,There is an emphasis on designing and writing correct code.
0.8842,Describe the basic concepts of the relational model and understand its mathematical foundation;,Testing and debugging are seen as integral to the programming enterprise.
0.8861,Describe the basic concepts of the relational model and understand its mathematical foundation;,Both top-down and object oriented design are taught.
0.8900,Describe the basic concepts of the relational model and understand its mathematical foundation;,There will be an introduction to widely-used computer science algorithms and to machine architecture.
0.8931,Describe the basic concepts of the relational model and understand its mathematical foundation;,Be able to describe and design small computer programs using both procedural and object-oriented methodologies.
0.8934,Describe the basic concepts of the relational model and understand its mathematical foundation;,"Design, write and debug small programs to solve practical problems of a scientific nature."
0.8991,Describe the basic concepts of the relational model and understand its mathematical foundation;,The course will be taught using one or more programming languages which are widely applicable to scientific work.
0.9026,Describe the basic concepts of the relational model and understand its mathematical foundation;,Have an understanding of practical aspects of machine architecture including finite precision and rounding errors.
0.9030,Describe the basic concepts of the relational model and understand its mathematical foundation;,"The course emphasises technical programming, the simulation of scientific systems and the processing of scientific data."
0.9072,Describe the basic concepts of the relational model and understand its mathematical foundation;,Have an understanding of some widely-used algorithms.
0.9086,Describe the basic concepts of the relational model and understand its mathematical foundation;,Have a practical understanding of the processing of scientific data.
0.9141,Describe the basic concepts of the relational model and understand its mathematical foundation;,This course teaches introductory programming within a problem solving framework applicable to the sciences.
0.6999,"Use the SQL language to define, query and manipulate a relational database.",Have an awareness of good program organisation.
0.7894,"Use the SQL language to define, query and manipulate a relational database.",Have an understanding of practical aspects of machine architecture including finite precision and rounding errors.
0.8059,"Use the SQL language to define, query and manipulate a relational database.",There is an emphasis on designing and writing correct code.
0.8077,"Use the SQL language to define, query and manipulate a relational database.",Testing and debugging are seen as integral to the programming enterprise.
0.8096,"Use the SQL language to define, query and manipulate a relational database.",Have a practical understanding of the processing of scientific data.
0.8115,"Use the SQL language to define, query and manipulate a relational database.",Have an understanding of some widely-used algorithms.
0.8136,"Use the SQL language to define, query and manipulate a relational database.",This course teaches introductory programming within a problem solving framework applicable to the sciences.
0.8150,"Use the SQL language to define, query and manipulate a relational database.","The course emphasises technical programming, the simulation of scientific systems and the processing of scientific data."
0.8180,"Use the SQL language to define, query and manipulate a relational database.",The course will be taught using one or more programming languages which are widely applicable to scientific work.
0.8201,"Use the SQL language to define, query and manipulate a relational database.",There will be an introduction to widely-used computer science algorithms and to machine architecture.
0.8344,"Use the SQL language to define, query and manipulate a relational database.",Both top-down and object oriented design are taught.
0.8535,"Use the SQL language to define, query and manipulate a relational database.","Design, write and debug small programs to solve practical problems of a scientific nature."
0.8838,"Use the SQL language to define, query and manipulate a relational database.",Be able to describe and design small computer programs using both procedural and object-oriented methodologies.
0.8316,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,Have an awareness of good program organisation.
0.8610,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,There is an emphasis on designing and writing correct code.
0.8733,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,There will be an introduction to widely-used computer science algorithms and to machine architecture.
0.8779,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,Have an understanding of some widely-used algorithms.
0.8807,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,Have a practical understanding of the processing of scientific data.
0.8846,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,Have an understanding of practical aspects of machine architecture including finite precision and rounding errors.
0.8866,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"The course emphasises technical programming, the simulation of scientific systems and the processing of scientific data."
0.8878,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,The course will be taught using one or more programming languages which are widely applicable to scientific work.
0.8891,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,"Design, write and debug small programs to solve practical problems of a scientific nature."
0.8892,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,Testing and debugging are seen as integral to the programming enterprise.
0.8987,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,This course teaches introductory programming within a problem solving framework applicable to the sciences.
0.9104,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,Both top-down and object oriented design are taught.
0.9244,Apply conceptual database modelling methods such as entity-relationship model to design a relational database.,Be able to describe and design small computer programs using both procedural and object-oriented methodologies.
0.8666,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,Have an awareness of good program organisation.
0.8777,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,There will be an introduction to widely-used computer science algorithms and to machine architecture.
0.8923,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,Have an understanding of some widely-used algorithms.
0.8969,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,There is an emphasis on designing and writing correct code.
0.8986,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,Have a practical understanding of the processing of scientific data.
0.9006,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,The course will be taught using one or more programming languages which are widely applicable to scientific work.
0.9045,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"The course emphasises technical programming, the simulation of scientific systems and the processing of scientific data."
0.9102,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,This course teaches introductory programming within a problem solving framework applicable to the sciences.
0.9139,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,"Design, write and debug small programs to solve practical problems of a scientific nature."
0.9169,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,Both top-down and object oriented design are taught.
0.9211,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,Have an understanding of practical aspects of machine architecture including finite precision and rounding errors.
0.9211,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,Testing and debugging are seen as integral to the programming enterprise.
0.9345,Apply database design methods on functional dependencies and normal forms to evaluate the quality of a relational database design.,Be able to describe and design small computer programs using both procedural and object-oriented methodologies.
0.8369,"Understand query processing and optimization, transaction and security management in a relational database management system.",Have an awareness of good program organisation.
0.8579,"Understand query processing and optimization, transaction and security management in a relational database management system.",Have an understanding of some widely-used algorithms.
0.8614,"Understand query processing and optimization, transaction and security management in a relational database management system.",There will be an introduction to widely-used computer science algorithms and to machine architecture.
0.8622,"Understand query processing and optimization, transaction and security management in a relational database management system.",There is an emphasis on designing and writing correct code.
0.8686,"Understand query processing and optimization, transaction and security management in a relational database management system.",The course will be taught using one or more programming languages which are widely applicable to scientific work.
0.8740,"Understand query processing and optimization, transaction and security management in a relational database management system.",Have a practical understanding of the processing of scientific data.
0.8833,"Understand query processing and optimization, transaction and security management in a relational database management system.","Design, write and debug small programs to solve practical problems of a scientific nature."
0.8840,"Understand query processing and optimization, transaction and security management in a relational database management system.",This course teaches introductory programming within a problem solving framework applicable to the sciences.
0.8912,"Understand query processing and optimization, transaction and security management in a relational database management system.","The course emphasises technical programming, the simulation of scientific systems and the processing of scientific data."
0.8934,"Understand query processing and optimization, transaction and security management in a relational database management system.",Both top-down and object oriented design are taught.
0.8943,"Understand query processing and optimization, transaction and security management in a relational database management system.",Have an understanding of practical aspects of machine architecture including finite precision and rounding errors.
0.9021,"Understand query processing and optimization, transaction and security management in a relational database management system.",Testing and debugging are seen as integral to the programming enterprise.
0.9070,"Understand query processing and optimization, transaction and security management in a relational database management system.",Be able to describe and design small computer programs using both procedural and object-oriented methodologies.
0.8503,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).",Have an awareness of good program organisation.
0.8571,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).",There is an emphasis on designing and writing correct code.
0.8636,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).",There will be an introduction to widely-used computer science algorithms and to machine architecture.
0.8708,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).",Have a practical understanding of the processing of scientific data.
0.8720,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).",Have an understanding of some widely-used algorithms.
0.8744,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","Design, write and debug small programs to solve practical problems of a scientific nature."
0.8754,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).",The course will be taught using one or more programming languages which are widely applicable to scientific work.
0.8777,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).",Be able to describe and design small computer programs using both procedural and object-oriented methodologies.
0.8798,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).",This course teaches introductory programming within a problem solving framework applicable to the sciences.
0.8800,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).","The course emphasises technical programming, the simulation of scientific systems and the processing of scientific data."
0.8810,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).",Have an understanding of practical aspects of machine architecture including finite precision and rounding errors.
0.8816,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).",Both top-down and object oriented design are taught.
0.8915,"Understand the state of the art of database management systems, and big data management challenges (Amazon's Dynamo, Google's BigTable, MongoDB and MapReduce).",Testing and debugging are seen as integral to the programming enterprise.
