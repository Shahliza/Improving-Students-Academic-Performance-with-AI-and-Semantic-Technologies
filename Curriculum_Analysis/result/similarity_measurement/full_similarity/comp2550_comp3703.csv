score,s1,s2
0.8346,"Software Security covers advanced techniques in software vulnerability assessment, discovery and mitigation.","The lectures will be complemented by a series of workshops, labs and assignments that require students to do some small research focused tasks that help them get a hands-on experience of research, both individually and in teams of students."
0.8460,"Software Security covers advanced techniques in software vulnerability assessment, discovery and mitigation.",Ability to carry out literature searches and some ability to critically evaluate literature.
0.8469,"Software Security covers advanced techniques in software vulnerability assessment, discovery and mitigation.",Demonstrate an improved ability to use an active approach to learning and to undertake reflective professional practice.
0.8473,"Software Security covers advanced techniques in software vulnerability assessment, discovery and mitigation.",The course introduces students to some fundamentals of research methodology.
0.8487,"Software Security covers advanced techniques in software vulnerability assessment, discovery and mitigation.","Demonstrate an ability to communicate in relation to an computing project in oral, written and graphical forms, with an an appreciation of the need to pitch any communication item appropriately for the audience."
0.8491,"Software Security covers advanced techniques in software vulnerability assessment, discovery and mitigation.","Workshops cover topics such as research integrity, time management and project management, teamwork, reading strategies, report writing, and presenting research. At the end of the course, students will be confident to start working on their own research projects."
0.8500,"Software Security covers advanced techniques in software vulnerability assessment, discovery and mitigation.",Demonstrate an ability to undertake and manage a research project of significant size and scope.
0.8532,"Software Security covers advanced techniques in software vulnerability assessment, discovery and mitigation.","Design and conduct experiments, devise appropriate measurements, analyze and interpret data and form reliable conclusions."
0.8562,"Software Security covers advanced techniques in software vulnerability assessment, discovery and mitigation.",Demonstrate awareness of the importance of documenting all aspects of the development of an computing project of significant magnitude.
0.8573,"Software Security covers advanced techniques in software vulnerability assessment, discovery and mitigation.",This includes demonstrated skills in the writing of abstracts and research papers.
0.8624,"Software Security covers advanced techniques in software vulnerability assessment, discovery and mitigation.","The course comprises a series of lectures which cover the following topics: Philosophy of Science, Quantitative Research Methods, Qualitative Research Methods, Basic Machine Learning Methods, Theoretical Research Methods, How to find a Research Topic, Literature Analysis, Reading and Reviewing Papers, Research Ethics and Commercialising Research."
0.8648,"Software Security covers advanced techniques in software vulnerability assessment, discovery and mitigation.",Demonstrate an awareness of the existence of technological choices; and make appropriate choices based on a consideration of design criteria.
0.8836,"Software Security covers advanced techniques in software vulnerability assessment, discovery and mitigation.","This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.8849,"Software Security covers advanced techniques in software vulnerability assessment, discovery and mitigation.",Understanding of the process of identifying and formulating research problems.
0.8031,"These include: common patterns in software vulnerabilities, such as stack-based buffer overflow, format string vulnerabilities, and heap-based vulnerabilities; exploitation techniques such as code injection, return-oriented-programming; techniques for vulnerability discovery, such as program binaries reverse engineering, fuzzing and symbolic execution; and mitigation techniques such as memory protection mechanisms, input sanitation, and control flow integrity protection.",Demonstrate an ability to undertake and manage a research project of significant size and scope.
0.8097,"These include: common patterns in software vulnerabilities, such as stack-based buffer overflow, format string vulnerabilities, and heap-based vulnerabilities; exploitation techniques such as code injection, return-oriented-programming; techniques for vulnerability discovery, such as program binaries reverse engineering, fuzzing and symbolic execution; and mitigation techniques such as memory protection mechanisms, input sanitation, and control flow integrity protection.",The course introduces students to some fundamentals of research methodology.
0.8098,"These include: common patterns in software vulnerabilities, such as stack-based buffer overflow, format string vulnerabilities, and heap-based vulnerabilities; exploitation techniques such as code injection, return-oriented-programming; techniques for vulnerability discovery, such as program binaries reverse engineering, fuzzing and symbolic execution; and mitigation techniques such as memory protection mechanisms, input sanitation, and control flow integrity protection.",Demonstrate an improved ability to use an active approach to learning and to undertake reflective professional practice.
0.8296,"These include: common patterns in software vulnerabilities, such as stack-based buffer overflow, format string vulnerabilities, and heap-based vulnerabilities; exploitation techniques such as code injection, return-oriented-programming; techniques for vulnerability discovery, such as program binaries reverse engineering, fuzzing and symbolic execution; and mitigation techniques such as memory protection mechanisms, input sanitation, and control flow integrity protection.",Demonstrate awareness of the importance of documenting all aspects of the development of an computing project of significant magnitude.
0.8319,"These include: common patterns in software vulnerabilities, such as stack-based buffer overflow, format string vulnerabilities, and heap-based vulnerabilities; exploitation techniques such as code injection, return-oriented-programming; techniques for vulnerability discovery, such as program binaries reverse engineering, fuzzing and symbolic execution; and mitigation techniques such as memory protection mechanisms, input sanitation, and control flow integrity protection.","Design and conduct experiments, devise appropriate measurements, analyze and interpret data and form reliable conclusions."
0.8348,"These include: common patterns in software vulnerabilities, such as stack-based buffer overflow, format string vulnerabilities, and heap-based vulnerabilities; exploitation techniques such as code injection, return-oriented-programming; techniques for vulnerability discovery, such as program binaries reverse engineering, fuzzing and symbolic execution; and mitigation techniques such as memory protection mechanisms, input sanitation, and control flow integrity protection.",Understanding of the process of identifying and formulating research problems.
0.8403,"These include: common patterns in software vulnerabilities, such as stack-based buffer overflow, format string vulnerabilities, and heap-based vulnerabilities; exploitation techniques such as code injection, return-oriented-programming; techniques for vulnerability discovery, such as program binaries reverse engineering, fuzzing and symbolic execution; and mitigation techniques such as memory protection mechanisms, input sanitation, and control flow integrity protection.","The lectures will be complemented by a series of workshops, labs and assignments that require students to do some small research focused tasks that help them get a hands-on experience of research, both individually and in teams of students."
0.8410,"These include: common patterns in software vulnerabilities, such as stack-based buffer overflow, format string vulnerabilities, and heap-based vulnerabilities; exploitation techniques such as code injection, return-oriented-programming; techniques for vulnerability discovery, such as program binaries reverse engineering, fuzzing and symbolic execution; and mitigation techniques such as memory protection mechanisms, input sanitation, and control flow integrity protection.",This includes demonstrated skills in the writing of abstracts and research papers.
0.8442,"These include: common patterns in software vulnerabilities, such as stack-based buffer overflow, format string vulnerabilities, and heap-based vulnerabilities; exploitation techniques such as code injection, return-oriented-programming; techniques for vulnerability discovery, such as program binaries reverse engineering, fuzzing and symbolic execution; and mitigation techniques such as memory protection mechanisms, input sanitation, and control flow integrity protection.",Ability to carry out literature searches and some ability to critically evaluate literature.
0.8511,"These include: common patterns in software vulnerabilities, such as stack-based buffer overflow, format string vulnerabilities, and heap-based vulnerabilities; exploitation techniques such as code injection, return-oriented-programming; techniques for vulnerability discovery, such as program binaries reverse engineering, fuzzing and symbolic execution; and mitigation techniques such as memory protection mechanisms, input sanitation, and control flow integrity protection.",Demonstrate an awareness of the existence of technological choices; and make appropriate choices based on a consideration of design criteria.
0.8547,"These include: common patterns in software vulnerabilities, such as stack-based buffer overflow, format string vulnerabilities, and heap-based vulnerabilities; exploitation techniques such as code injection, return-oriented-programming; techniques for vulnerability discovery, such as program binaries reverse engineering, fuzzing and symbolic execution; and mitigation techniques such as memory protection mechanisms, input sanitation, and control flow integrity protection.","Demonstrate an ability to communicate in relation to an computing project in oral, written and graphical forms, with an an appreciation of the need to pitch any communication item appropriately for the audience."
0.8563,"These include: common patterns in software vulnerabilities, such as stack-based buffer overflow, format string vulnerabilities, and heap-based vulnerabilities; exploitation techniques such as code injection, return-oriented-programming; techniques for vulnerability discovery, such as program binaries reverse engineering, fuzzing and symbolic execution; and mitigation techniques such as memory protection mechanisms, input sanitation, and control flow integrity protection.","Workshops cover topics such as research integrity, time management and project management, teamwork, reading strategies, report writing, and presenting research. At the end of the course, students will be confident to start working on their own research projects."
0.8642,"These include: common patterns in software vulnerabilities, such as stack-based buffer overflow, format string vulnerabilities, and heap-based vulnerabilities; exploitation techniques such as code injection, return-oriented-programming; techniques for vulnerability discovery, such as program binaries reverse engineering, fuzzing and symbolic execution; and mitigation techniques such as memory protection mechanisms, input sanitation, and control flow integrity protection.","The course comprises a series of lectures which cover the following topics: Philosophy of Science, Quantitative Research Methods, Qualitative Research Methods, Basic Machine Learning Methods, Theoretical Research Methods, How to find a Research Topic, Literature Analysis, Reading and Reviewing Papers, Research Ethics and Commercialising Research."
0.8902,"These include: common patterns in software vulnerabilities, such as stack-based buffer overflow, format string vulnerabilities, and heap-based vulnerabilities; exploitation techniques such as code injection, return-oriented-programming; techniques for vulnerability discovery, such as program binaries reverse engineering, fuzzing and symbolic execution; and mitigation techniques such as memory protection mechanisms, input sanitation, and control flow integrity protection.","This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.8710,"The course features hands-on lectures and labs to analyse software vulnerabilities, both in the source code and in program binaries, and design and implement appropriate mitigation techniques.",Demonstrate an ability to undertake and manage a research project of significant size and scope.
0.8769,"The course features hands-on lectures and labs to analyse software vulnerabilities, both in the source code and in program binaries, and design and implement appropriate mitigation techniques.",Demonstrate an improved ability to use an active approach to learning and to undertake reflective professional practice.
0.8869,"The course features hands-on lectures and labs to analyse software vulnerabilities, both in the source code and in program binaries, and design and implement appropriate mitigation techniques.",Demonstrate awareness of the importance of documenting all aspects of the development of an computing project of significant magnitude.
0.8872,"The course features hands-on lectures and labs to analyse software vulnerabilities, both in the source code and in program binaries, and design and implement appropriate mitigation techniques.",Ability to carry out literature searches and some ability to critically evaluate literature.
0.8895,"The course features hands-on lectures and labs to analyse software vulnerabilities, both in the source code and in program binaries, and design and implement appropriate mitigation techniques.",The course introduces students to some fundamentals of research methodology.
0.8929,"The course features hands-on lectures and labs to analyse software vulnerabilities, both in the source code and in program binaries, and design and implement appropriate mitigation techniques.",Understanding of the process of identifying and formulating research problems.
0.8936,"The course features hands-on lectures and labs to analyse software vulnerabilities, both in the source code and in program binaries, and design and implement appropriate mitigation techniques.","Design and conduct experiments, devise appropriate measurements, analyze and interpret data and form reliable conclusions."
0.8976,"The course features hands-on lectures and labs to analyse software vulnerabilities, both in the source code and in program binaries, and design and implement appropriate mitigation techniques.",This includes demonstrated skills in the writing of abstracts and research papers.
0.8983,"The course features hands-on lectures and labs to analyse software vulnerabilities, both in the source code and in program binaries, and design and implement appropriate mitigation techniques.",Demonstrate an awareness of the existence of technological choices; and make appropriate choices based on a consideration of design criteria.
0.8986,"The course features hands-on lectures and labs to analyse software vulnerabilities, both in the source code and in program binaries, and design and implement appropriate mitigation techniques.","Demonstrate an ability to communicate in relation to an computing project in oral, written and graphical forms, with an an appreciation of the need to pitch any communication item appropriately for the audience."
0.9112,"The course features hands-on lectures and labs to analyse software vulnerabilities, both in the source code and in program binaries, and design and implement appropriate mitigation techniques.","The lectures will be complemented by a series of workshops, labs and assignments that require students to do some small research focused tasks that help them get a hands-on experience of research, both individually and in teams of students."
0.9112,"The course features hands-on lectures and labs to analyse software vulnerabilities, both in the source code and in program binaries, and design and implement appropriate mitigation techniques.","The course comprises a series of lectures which cover the following topics: Philosophy of Science, Quantitative Research Methods, Qualitative Research Methods, Basic Machine Learning Methods, Theoretical Research Methods, How to find a Research Topic, Literature Analysis, Reading and Reviewing Papers, Research Ethics and Commercialising Research."
0.9148,"The course features hands-on lectures and labs to analyse software vulnerabilities, both in the source code and in program binaries, and design and implement appropriate mitigation techniques.","Workshops cover topics such as research integrity, time management and project management, teamwork, reading strategies, report writing, and presenting research. At the end of the course, students will be confident to start working on their own research projects."
0.9163,"The course features hands-on lectures and labs to analyse software vulnerabilities, both in the source code and in program binaries, and design and implement appropriate mitigation techniques.","This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.8508,Demonstrate a thorough understanding of common sources of vulnerabilities in software.,"The lectures will be complemented by a series of workshops, labs and assignments that require students to do some small research focused tasks that help them get a hands-on experience of research, both individually and in teams of students."
0.8512,Demonstrate a thorough understanding of common sources of vulnerabilities in software.,"Design and conduct experiments, devise appropriate measurements, analyze and interpret data and form reliable conclusions."
0.8533,Demonstrate a thorough understanding of common sources of vulnerabilities in software.,"Workshops cover topics such as research integrity, time management and project management, teamwork, reading strategies, report writing, and presenting research. At the end of the course, students will be confident to start working on their own research projects."
0.8537,Demonstrate a thorough understanding of common sources of vulnerabilities in software.,Demonstrate an improved ability to use an active approach to learning and to undertake reflective professional practice.
0.8572,Demonstrate a thorough understanding of common sources of vulnerabilities in software.,"The course comprises a series of lectures which cover the following topics: Philosophy of Science, Quantitative Research Methods, Qualitative Research Methods, Basic Machine Learning Methods, Theoretical Research Methods, How to find a Research Topic, Literature Analysis, Reading and Reviewing Papers, Research Ethics and Commercialising Research."
0.8608,Demonstrate a thorough understanding of common sources of vulnerabilities in software.,Demonstrate an ability to undertake and manage a research project of significant size and scope.
0.8626,Demonstrate a thorough understanding of common sources of vulnerabilities in software.,Ability to carry out literature searches and some ability to critically evaluate literature.
0.8682,Demonstrate a thorough understanding of common sources of vulnerabilities in software.,The course introduces students to some fundamentals of research methodology.
0.8747,Demonstrate a thorough understanding of common sources of vulnerabilities in software.,"Demonstrate an ability to communicate in relation to an computing project in oral, written and graphical forms, with an an appreciation of the need to pitch any communication item appropriately for the audience."
0.8795,Demonstrate a thorough understanding of common sources of vulnerabilities in software.,"This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.8820,Demonstrate a thorough understanding of common sources of vulnerabilities in software.,This includes demonstrated skills in the writing of abstracts and research papers.
0.8898,Demonstrate a thorough understanding of common sources of vulnerabilities in software.,Demonstrate awareness of the importance of documenting all aspects of the development of an computing project of significant magnitude.
0.8908,Demonstrate a thorough understanding of common sources of vulnerabilities in software.,Demonstrate an awareness of the existence of technological choices; and make appropriate choices based on a consideration of design criteria.
0.8917,Demonstrate a thorough understanding of common sources of vulnerabilities in software.,Understanding of the process of identifying and formulating research problems.
0.8721,Demonstrate a thorough understanding in exploitation techniques against software vulnerabilities and defensive techniques against these exploitations.,"Design and conduct experiments, devise appropriate measurements, analyze and interpret data and form reliable conclusions."
0.8736,Demonstrate a thorough understanding in exploitation techniques against software vulnerabilities and defensive techniques against these exploitations.,Demonstrate an improved ability to use an active approach to learning and to undertake reflective professional practice.
0.8751,Demonstrate a thorough understanding in exploitation techniques against software vulnerabilities and defensive techniques against these exploitations.,Demonstrate an ability to undertake and manage a research project of significant size and scope.
0.8765,Demonstrate a thorough understanding in exploitation techniques against software vulnerabilities and defensive techniques against these exploitations.,The course introduces students to some fundamentals of research methodology.
0.8793,Demonstrate a thorough understanding in exploitation techniques against software vulnerabilities and defensive techniques against these exploitations.,"The course comprises a series of lectures which cover the following topics: Philosophy of Science, Quantitative Research Methods, Qualitative Research Methods, Basic Machine Learning Methods, Theoretical Research Methods, How to find a Research Topic, Literature Analysis, Reading and Reviewing Papers, Research Ethics and Commercialising Research."
0.8798,Demonstrate a thorough understanding in exploitation techniques against software vulnerabilities and defensive techniques against these exploitations.,"Workshops cover topics such as research integrity, time management and project management, teamwork, reading strategies, report writing, and presenting research. At the end of the course, students will be confident to start working on their own research projects."
0.8806,Demonstrate a thorough understanding in exploitation techniques against software vulnerabilities and defensive techniques against these exploitations.,"The lectures will be complemented by a series of workshops, labs and assignments that require students to do some small research focused tasks that help them get a hands-on experience of research, both individually and in teams of students."
0.8936,Demonstrate a thorough understanding in exploitation techniques against software vulnerabilities and defensive techniques against these exploitations.,Ability to carry out literature searches and some ability to critically evaluate literature.
0.8954,Demonstrate a thorough understanding in exploitation techniques against software vulnerabilities and defensive techniques against these exploitations.,Understanding of the process of identifying and formulating research problems.
0.8955,Demonstrate a thorough understanding in exploitation techniques against software vulnerabilities and defensive techniques against these exploitations.,This includes demonstrated skills in the writing of abstracts and research papers.
0.8965,Demonstrate a thorough understanding in exploitation techniques against software vulnerabilities and defensive techniques against these exploitations.,Demonstrate awareness of the importance of documenting all aspects of the development of an computing project of significant magnitude.
0.9059,Demonstrate a thorough understanding in exploitation techniques against software vulnerabilities and defensive techniques against these exploitations.,"This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.9079,Demonstrate a thorough understanding in exploitation techniques against software vulnerabilities and defensive techniques against these exploitations.,"Demonstrate an ability to communicate in relation to an computing project in oral, written and graphical forms, with an an appreciation of the need to pitch any communication item appropriately for the audience."
0.9152,Demonstrate a thorough understanding in exploitation techniques against software vulnerabilities and defensive techniques against these exploitations.,Demonstrate an awareness of the existence of technological choices; and make appropriate choices based on a consideration of design criteria.
0.8624,Demonstrate proficiency in software reverse engineering.,"The lectures will be complemented by a series of workshops, labs and assignments that require students to do some small research focused tasks that help them get a hands-on experience of research, both individually and in teams of students."
0.8631,Demonstrate proficiency in software reverse engineering.,"The course comprises a series of lectures which cover the following topics: Philosophy of Science, Quantitative Research Methods, Qualitative Research Methods, Basic Machine Learning Methods, Theoretical Research Methods, How to find a Research Topic, Literature Analysis, Reading and Reviewing Papers, Research Ethics and Commercialising Research."
0.8680,Demonstrate proficiency in software reverse engineering.,"Design and conduct experiments, devise appropriate measurements, analyze and interpret data and form reliable conclusions."
0.8783,Demonstrate proficiency in software reverse engineering.,"Workshops cover topics such as research integrity, time management and project management, teamwork, reading strategies, report writing, and presenting research. At the end of the course, students will be confident to start working on their own research projects."
0.8827,Demonstrate proficiency in software reverse engineering.,Demonstrate an improved ability to use an active approach to learning and to undertake reflective professional practice.
0.8843,Demonstrate proficiency in software reverse engineering.,The course introduces students to some fundamentals of research methodology.
0.8868,Demonstrate proficiency in software reverse engineering.,Demonstrate an ability to undertake and manage a research project of significant size and scope.
0.8928,Demonstrate proficiency in software reverse engineering.,Demonstrate awareness of the importance of documenting all aspects of the development of an computing project of significant magnitude.
0.8943,Demonstrate proficiency in software reverse engineering.,"This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.8953,Demonstrate proficiency in software reverse engineering.,Understanding of the process of identifying and formulating research problems.
0.8974,Demonstrate proficiency in software reverse engineering.,"Demonstrate an ability to communicate in relation to an computing project in oral, written and graphical forms, with an an appreciation of the need to pitch any communication item appropriately for the audience."
0.8983,Demonstrate proficiency in software reverse engineering.,Demonstrate an awareness of the existence of technological choices; and make appropriate choices based on a consideration of design criteria.
0.9053,Demonstrate proficiency in software reverse engineering.,Ability to carry out literature searches and some ability to critically evaluate literature.
0.9147,Demonstrate proficiency in software reverse engineering.,This includes demonstrated skills in the writing of abstracts and research papers.
0.8716,"Demonstrate proficiency in vulnerability discovery processes, from both source code and binary.","The course comprises a series of lectures which cover the following topics: Philosophy of Science, Quantitative Research Methods, Qualitative Research Methods, Basic Machine Learning Methods, Theoretical Research Methods, How to find a Research Topic, Literature Analysis, Reading and Reviewing Papers, Research Ethics and Commercialising Research."
0.8756,"Demonstrate proficiency in vulnerability discovery processes, from both source code and binary.","Design and conduct experiments, devise appropriate measurements, analyze and interpret data and form reliable conclusions."
0.8764,"Demonstrate proficiency in vulnerability discovery processes, from both source code and binary.",Demonstrate an ability to undertake and manage a research project of significant size and scope.
0.8764,"Demonstrate proficiency in vulnerability discovery processes, from both source code and binary.",The course introduces students to some fundamentals of research methodology.
0.8769,"Demonstrate proficiency in vulnerability discovery processes, from both source code and binary.",Demonstrate an improved ability to use an active approach to learning and to undertake reflective professional practice.
0.8791,"Demonstrate proficiency in vulnerability discovery processes, from both source code and binary.","The lectures will be complemented by a series of workshops, labs and assignments that require students to do some small research focused tasks that help them get a hands-on experience of research, both individually and in teams of students."
0.8878,"Demonstrate proficiency in vulnerability discovery processes, from both source code and binary.","Workshops cover topics such as research integrity, time management and project management, teamwork, reading strategies, report writing, and presenting research. At the end of the course, students will be confident to start working on their own research projects."
0.8927,"Demonstrate proficiency in vulnerability discovery processes, from both source code and binary.",Understanding of the process of identifying and formulating research problems.
0.8947,"Demonstrate proficiency in vulnerability discovery processes, from both source code and binary.",Demonstrate awareness of the importance of documenting all aspects of the development of an computing project of significant magnitude.
0.8966,"Demonstrate proficiency in vulnerability discovery processes, from both source code and binary.",Demonstrate an awareness of the existence of technological choices; and make appropriate choices based on a consideration of design criteria.
0.9044,"Demonstrate proficiency in vulnerability discovery processes, from both source code and binary.","This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
0.9056,"Demonstrate proficiency in vulnerability discovery processes, from both source code and binary.",Ability to carry out literature searches and some ability to critically evaluate literature.
0.9082,"Demonstrate proficiency in vulnerability discovery processes, from both source code and binary.","Demonstrate an ability to communicate in relation to an computing project in oral, written and graphical forms, with an an appreciation of the need to pitch any communication item appropriately for the audience."
0.9112,"Demonstrate proficiency in vulnerability discovery processes, from both source code and binary.",This includes demonstrated skills in the writing of abstracts and research papers.
0.8683,"Apply the vulnerability discovery techniques to real-world software, analyse their vulnerabilities and design and implement appropriate mitigation techniques.",Demonstrate an improved ability to use an active approach to learning and to undertake reflective professional practice.
0.8726,"Apply the vulnerability discovery techniques to real-world software, analyse their vulnerabilities and design and implement appropriate mitigation techniques.",The course introduces students to some fundamentals of research methodology.
0.8745,"Apply the vulnerability discovery techniques to real-world software, analyse their vulnerabilities and design and implement appropriate mitigation techniques.",Demonstrate an ability to undertake and manage a research project of significant size and scope.
0.8754,"Apply the vulnerability discovery techniques to real-world software, analyse their vulnerabilities and design and implement appropriate mitigation techniques.",This includes demonstrated skills in the writing of abstracts and research papers.
0.8792,"Apply the vulnerability discovery techniques to real-world software, analyse their vulnerabilities and design and implement appropriate mitigation techniques.","Workshops cover topics such as research integrity, time management and project management, teamwork, reading strategies, report writing, and presenting research. At the end of the course, students will be confident to start working on their own research projects."
0.8797,"Apply the vulnerability discovery techniques to real-world software, analyse their vulnerabilities and design and implement appropriate mitigation techniques.","The lectures will be complemented by a series of workshops, labs and assignments that require students to do some small research focused tasks that help them get a hands-on experience of research, both individually and in teams of students."
0.8823,"Apply the vulnerability discovery techniques to real-world software, analyse their vulnerabilities and design and implement appropriate mitigation techniques.",Demonstrate awareness of the importance of documenting all aspects of the development of an computing project of significant magnitude.
0.8852,"Apply the vulnerability discovery techniques to real-world software, analyse their vulnerabilities and design and implement appropriate mitigation techniques.",Ability to carry out literature searches and some ability to critically evaluate literature.
0.8886,"Apply the vulnerability discovery techniques to real-world software, analyse their vulnerabilities and design and implement appropriate mitigation techniques.","The course comprises a series of lectures which cover the following topics: Philosophy of Science, Quantitative Research Methods, Qualitative Research Methods, Basic Machine Learning Methods, Theoretical Research Methods, How to find a Research Topic, Literature Analysis, Reading and Reviewing Papers, Research Ethics and Commercialising Research."
0.8888,"Apply the vulnerability discovery techniques to real-world software, analyse their vulnerabilities and design and implement appropriate mitigation techniques.","Demonstrate an ability to communicate in relation to an computing project in oral, written and graphical forms, with an an appreciation of the need to pitch any communication item appropriately for the audience."
0.9019,"Apply the vulnerability discovery techniques to real-world software, analyse their vulnerabilities and design and implement appropriate mitigation techniques.","Design and conduct experiments, devise appropriate measurements, analyze and interpret data and form reliable conclusions."
0.9040,"Apply the vulnerability discovery techniques to real-world software, analyse their vulnerabilities and design and implement appropriate mitigation techniques.",Understanding of the process of identifying and formulating research problems.
0.9048,"Apply the vulnerability discovery techniques to real-world software, analyse their vulnerabilities and design and implement appropriate mitigation techniques.",Demonstrate an awareness of the existence of technological choices; and make appropriate choices based on a consideration of design criteria.
0.9177,"Apply the vulnerability discovery techniques to real-world software, analyse their vulnerabilities and design and implement appropriate mitigation techniques.","This includes different tasks such as topic modelling, statistical analysis, applying different machine learning techniques to solve a problem in a team, proving theorems, complexity analysis, designing a research project, reviewing papers and presenting papers."
