score,s1,s2
0.8478,This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8576,This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.,identify and describe the reasons for many architectural features of contemporary machines.
0.8757,This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8889,This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.8900,This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8925,This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8937,This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.,demonstrate experience in the design and implementation of a large software system.
0.8997,This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering.,The lectures will also address recent literature describing advances in operating systems.
0.8710,Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8892,Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.9002,Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.,identify and describe the reasons for many architectural features of contemporary machines.
0.9036,Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.9085,Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.9131,Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.9134,Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.,The lectures will also address recent literature describing advances in operating systems.
0.9226,Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered.,demonstrate experience in the design and implementation of a large software system.
0.8646,"The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95.",identify and describe the reasons for many architectural features of contemporary machines.
0.8747,"The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95.",demonstrate experience in the design and implementation of a large software system.
0.8802,"The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95.","The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8917,"The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95.","This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8931,"The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95.",describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8932,"The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95.","define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.9026,"The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95.",The lectures will also address recent literature describing advances in operating systems.
0.9087,"The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95.","identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8831,"The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures.",identify and describe the reasons for many architectural features of contemporary machines.
0.8993,"The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures.","The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.9083,"The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures.",demonstrate experience in the design and implementation of a large software system.
0.9107,"The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures.",The lectures will also address recent literature describing advances in operating systems.
0.9167,"The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures.","This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.9265,"The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures.","define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.9362,"The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures.",describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.9364,"The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures.","identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8884,It will also look at practical methods of estimating and measuring algorithm/architecture performance.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.9044,It will also look at practical methods of estimating and measuring algorithm/architecture performance.,identify and describe the reasons for many architectural features of contemporary machines.
0.9101,It will also look at practical methods of estimating and measuring algorithm/architecture performance.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.9138,It will also look at practical methods of estimating and measuring algorithm/architecture performance.,demonstrate experience in the design and implementation of a large software system.
0.9169,It will also look at practical methods of estimating and measuring algorithm/architecture performance.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.9235,It will also look at practical methods of estimating and measuring algorithm/architecture performance.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.9285,It will also look at practical methods of estimating and measuring algorithm/architecture performance.,The lectures will also address recent literature describing advances in operating systems.
0.9293,It will also look at practical methods of estimating and measuring algorithm/architecture performance.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8687,"The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems.",identify and describe the reasons for many architectural features of contemporary machines.
0.8830,"The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems.",demonstrate experience in the design and implementation of a large software system.
0.8895,"The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems.","This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8986,"The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems.",The lectures will also address recent literature describing advances in operating systems.
0.9081,"The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems.",describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.9095,"The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems.","define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.9206,"The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems.","identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.9377,"The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems.","The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8569,appreciate the building blocks of scientific and engineering software.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8827,appreciate the building blocks of scientific and engineering software.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8957,appreciate the building blocks of scientific and engineering software.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.8957,appreciate the building blocks of scientific and engineering software.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.9037,appreciate the building blocks of scientific and engineering software.,The lectures will also address recent literature describing advances in operating systems.
0.9060,appreciate the building blocks of scientific and engineering software.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.9224,appreciate the building blocks of scientific and engineering software.,demonstrate experience in the design and implementation of a large software system.
0.9231,appreciate the building blocks of scientific and engineering software.,identify and describe the reasons for many architectural features of contemporary machines.
0.8583,demonstrate a basic knowledge of numerical computing using an appropriate programming language.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8826,demonstrate a basic knowledge of numerical computing using an appropriate programming language.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8829,demonstrate a basic knowledge of numerical computing using an appropriate programming language.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.8889,demonstrate a basic knowledge of numerical computing using an appropriate programming language.,identify and describe the reasons for many architectural features of contemporary machines.
0.8925,demonstrate a basic knowledge of numerical computing using an appropriate programming language.,The lectures will also address recent literature describing advances in operating systems.
0.8939,demonstrate a basic knowledge of numerical computing using an appropriate programming language.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.9203,demonstrate a basic knowledge of numerical computing using an appropriate programming language.,demonstrate experience in the design and implementation of a large software system.
0.9299,demonstrate a basic knowledge of numerical computing using an appropriate programming language.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8805,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8918,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.,identify and describe the reasons for many architectural features of contemporary machines.
0.8974,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8985,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.,The lectures will also address recent literature describing advances in operating systems.
0.9071,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.9106,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.9189,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.,demonstrate experience in the design and implementation of a large software system.
0.9256,be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8502,be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8732,be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8812,be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.,The lectures will also address recent literature describing advances in operating systems.
0.8865,be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.8888,be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8997,be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.,demonstrate experience in the design and implementation of a large software system.
0.9064,be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.9111,be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.,identify and describe the reasons for many architectural features of contemporary machines.
0.8550,have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8762,have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8769,have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.,identify and describe the reasons for many architectural features of contemporary machines.
0.8794,have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8849,have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.,The lectures will also address recent literature describing advances in operating systems.
0.8882,have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.8946,have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.9041,have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.,demonstrate experience in the design and implementation of a large software system.
0.8931,have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8946,have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.,The lectures will also address recent literature describing advances in operating systems.
0.8989,have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8995,have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.,identify and describe the reasons for many architectural features of contemporary machines.
0.9076,have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.9127,have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.9181,have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.,demonstrate experience in the design and implementation of a large software system.
0.9273,have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8695,"be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance.",identify and describe the reasons for many architectural features of contemporary machines.
0.8720,"be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance.",The lectures will also address recent literature describing advances in operating systems.
0.8828,"be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance.","This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8869,"be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance.","The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8998,"be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance.",demonstrate experience in the design and implementation of a large software system.
0.9137,"be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance.","define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.9211,"be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance.",describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.9453,"be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance.","identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
