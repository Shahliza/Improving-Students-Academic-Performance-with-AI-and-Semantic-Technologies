score,s1,s2
0.8469,"Society relies on many complex systems of interacting technology, people, processes, laws and other elements. Examples of such systems include air transport, telecommunications and energy supply.",The lectures will also address recent literature describing advances in operating systems.
0.8639,"Society relies on many complex systems of interacting technology, people, processes, laws and other elements. Examples of such systems include air transport, telecommunications and energy supply.",describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8653,"Society relies on many complex systems of interacting technology, people, processes, laws and other elements. Examples of such systems include air transport, telecommunications and energy supply.","identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8692,"Society relies on many complex systems of interacting technology, people, processes, laws and other elements. Examples of such systems include air transport, telecommunications and energy supply.","The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8695,"Society relies on many complex systems of interacting technology, people, processes, laws and other elements. Examples of such systems include air transport, telecommunications and energy supply.",demonstrate experience in the design and implementation of a large software system.
0.8757,"Society relies on many complex systems of interacting technology, people, processes, laws and other elements. Examples of such systems include air transport, telecommunications and energy supply.","define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.8788,"Society relies on many complex systems of interacting technology, people, processes, laws and other elements. Examples of such systems include air transport, telecommunications and energy supply.","This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8839,"Society relies on many complex systems of interacting technology, people, processes, laws and other elements. Examples of such systems include air transport, telecommunications and energy supply.",identify and describe the reasons for many architectural features of contemporary machines.
0.8543,"Systems Engineering is a holistic, multi-disciplinary and well established approach to the engineering of these complex systems.","The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8819,"Systems Engineering is a holistic, multi-disciplinary and well established approach to the engineering of these complex systems.",The lectures will also address recent literature describing advances in operating systems.
0.8833,"Systems Engineering is a holistic, multi-disciplinary and well established approach to the engineering of these complex systems.",describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8931,"Systems Engineering is a holistic, multi-disciplinary and well established approach to the engineering of these complex systems.","identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8961,"Systems Engineering is a holistic, multi-disciplinary and well established approach to the engineering of these complex systems.",identify and describe the reasons for many architectural features of contemporary machines.
0.8978,"Systems Engineering is a holistic, multi-disciplinary and well established approach to the engineering of these complex systems.","This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.9019,"Systems Engineering is a holistic, multi-disciplinary and well established approach to the engineering of these complex systems.","define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.9159,"Systems Engineering is a holistic, multi-disciplinary and well established approach to the engineering of these complex systems.",demonstrate experience in the design and implementation of a large software system.
0.8643,"Because software is a critical component of such systems, Software Engineers will often work in Systems Engineering teams.","The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8893,"Because software is a critical component of such systems, Software Engineers will often work in Systems Engineering teams.",identify and describe the reasons for many architectural features of contemporary machines.
0.8903,"Because software is a critical component of such systems, Software Engineers will often work in Systems Engineering teams.",The lectures will also address recent literature describing advances in operating systems.
0.8908,"Because software is a critical component of such systems, Software Engineers will often work in Systems Engineering teams.","This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.9020,"Because software is a critical component of such systems, Software Engineers will often work in Systems Engineering teams.",describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.9081,"Because software is a critical component of such systems, Software Engineers will often work in Systems Engineering teams.","identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.9194,"Because software is a critical component of such systems, Software Engineers will often work in Systems Engineering teams.","define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.9271,"Because software is a critical component of such systems, Software Engineers will often work in Systems Engineering teams.",demonstrate experience in the design and implementation of a large software system.
0.8280,Systems concepts.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8399,Systems concepts.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8411,Systems concepts.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8599,Systems concepts.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8634,Systems concepts.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.8890,Systems concepts.,demonstrate experience in the design and implementation of a large software system.
0.8901,Systems concepts.,The lectures will also address recent literature describing advances in operating systems.
0.8988,Systems concepts.,identify and describe the reasons for many architectural features of contemporary machines.
0.8583,The Systems Engineering life-cycle and processes.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8700,The Systems Engineering life-cycle and processes.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8766,The Systems Engineering life-cycle and processes.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8783,The Systems Engineering life-cycle and processes.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8810,The Systems Engineering life-cycle and processes.,The lectures will also address recent literature describing advances in operating systems.
0.8825,The Systems Engineering life-cycle and processes.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.8941,The Systems Engineering life-cycle and processes.,identify and describe the reasons for many architectural features of contemporary machines.
0.9110,The Systems Engineering life-cycle and processes.,demonstrate experience in the design and implementation of a large software system.
0.8778,"Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification.",The lectures will also address recent literature describing advances in operating systems.
0.8865,"Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification.","define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.8874,"Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification.",describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8920,"Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification.","This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8935,"Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification.",identify and describe the reasons for many architectural features of contemporary machines.
0.9086,"Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification.","identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.9111,"Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification.",demonstrate experience in the design and implementation of a large software system.
0.9172,"Conceptual system design: including problem definition, technical performance measures, quality function deployment (QFD), trade-off analyses, and system specification.","The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8707,"Preliminary system design: subsystem design requirements, design review.","This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8729,"Preliminary system design: subsystem design requirements, design review.","define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.8754,"Preliminary system design: subsystem design requirements, design review.",describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8755,"Preliminary system design: subsystem design requirements, design review.",identify and describe the reasons for many architectural features of contemporary machines.
0.8769,"Preliminary system design: subsystem design requirements, design review.",The lectures will also address recent literature describing advances in operating systems.
0.8838,"Preliminary system design: subsystem design requirements, design review.","The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8953,"Preliminary system design: subsystem design requirements, design review.","identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.9075,"Preliminary system design: subsystem design requirements, design review.",demonstrate experience in the design and implementation of a large software system.
0.8495,"Detailed design and development: Detailed design requirements and design engineering activities; review and feedback, and incorporation of design changes.","define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.8541,"Detailed design and development: Detailed design requirements and design engineering activities; review and feedback, and incorporation of design changes.",describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8700,"Detailed design and development: Detailed design requirements and design engineering activities; review and feedback, and incorporation of design changes.",The lectures will also address recent literature describing advances in operating systems.
0.8713,"Detailed design and development: Detailed design requirements and design engineering activities; review and feedback, and incorporation of design changes.","The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8740,"Detailed design and development: Detailed design requirements and design engineering activities; review and feedback, and incorporation of design changes.","This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8879,"Detailed design and development: Detailed design requirements and design engineering activities; review and feedback, and incorporation of design changes.","identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8944,"Detailed design and development: Detailed design requirements and design engineering activities; review and feedback, and incorporation of design changes.",identify and describe the reasons for many architectural features of contemporary machines.
0.9019,"Detailed design and development: Detailed design requirements and design engineering activities; review and feedback, and incorporation of design changes.",demonstrate experience in the design and implementation of a large software system.
0.8197,"Design testing, evaluation and validation.","The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8334,"Design testing, evaluation and validation.","This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8369,"Design testing, evaluation and validation.",describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8401,"Design testing, evaluation and validation.","define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.8428,"Design testing, evaluation and validation.",The lectures will also address recent literature describing advances in operating systems.
0.8485,"Design testing, evaluation and validation.","identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8638,"Design testing, evaluation and validation.",identify and describe the reasons for many architectural features of contemporary machines.
0.8934,"Design testing, evaluation and validation.",demonstrate experience in the design and implementation of a large software system.
0.8296,Design for sustainability: approaches that integrate sustainability principles into the design process.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8660,Design for sustainability: approaches that integrate sustainability principles into the design process.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8752,Design for sustainability: approaches that integrate sustainability principles into the design process.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8777,Design for sustainability: approaches that integrate sustainability principles into the design process.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8806,Design for sustainability: approaches that integrate sustainability principles into the design process.,The lectures will also address recent literature describing advances in operating systems.
0.8855,Design for sustainability: approaches that integrate sustainability principles into the design process.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.8994,Design for sustainability: approaches that integrate sustainability principles into the design process.,demonstrate experience in the design and implementation of a large software system.
0.9009,Design for sustainability: approaches that integrate sustainability principles into the design process.,identify and describe the reasons for many architectural features of contemporary machines.
0.8403,Integration of Systems Engineering and Software Engineering activities.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8591,Integration of Systems Engineering and Software Engineering activities.,identify and describe the reasons for many architectural features of contemporary machines.
0.8656,Integration of Systems Engineering and Software Engineering activities.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8686,Integration of Systems Engineering and Software Engineering activities.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8710,Integration of Systems Engineering and Software Engineering activities.,The lectures will also address recent literature describing advances in operating systems.
0.8764,Integration of Systems Engineering and Software Engineering activities.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8819,Integration of Systems Engineering and Software Engineering activities.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.9094,Integration of Systems Engineering and Software Engineering activities.,demonstrate experience in the design and implementation of a large software system.
0.8405,describe the holistic and multi-disciplinary nature of complex engineering projects.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8755,describe the holistic and multi-disciplinary nature of complex engineering projects.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8794,describe the holistic and multi-disciplinary nature of complex engineering projects.,The lectures will also address recent literature describing advances in operating systems.
0.8830,describe the holistic and multi-disciplinary nature of complex engineering projects.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8856,describe the holistic and multi-disciplinary nature of complex engineering projects.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8923,describe the holistic and multi-disciplinary nature of complex engineering projects.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.9225,describe the holistic and multi-disciplinary nature of complex engineering projects.,identify and describe the reasons for many architectural features of contemporary machines.
0.9275,describe the holistic and multi-disciplinary nature of complex engineering projects.,demonstrate experience in the design and implementation of a large software system.
0.8245,describe the Systems Engineering life-cycle.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8756,describe the Systems Engineering life-cycle.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8757,describe the Systems Engineering life-cycle.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8770,describe the Systems Engineering life-cycle.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8829,describe the Systems Engineering life-cycle.,The lectures will also address recent literature describing advances in operating systems.
0.8875,describe the Systems Engineering life-cycle.,identify and describe the reasons for many architectural features of contemporary machines.
0.8898,describe the Systems Engineering life-cycle.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.9251,describe the Systems Engineering life-cycle.,demonstrate experience in the design and implementation of a large software system.
0.8404,identify and explain the activities involved in each phase of the Systems Engineering life-cycle.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8805,identify and explain the activities involved in each phase of the Systems Engineering life-cycle.,The lectures will also address recent literature describing advances in operating systems.
0.8871,identify and explain the activities involved in each phase of the Systems Engineering life-cycle.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8892,identify and explain the activities involved in each phase of the Systems Engineering life-cycle.,identify and describe the reasons for many architectural features of contemporary machines.
0.8966,identify and explain the activities involved in each phase of the Systems Engineering life-cycle.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.8973,identify and explain the activities involved in each phase of the Systems Engineering life-cycle.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.9074,identify and explain the activities involved in each phase of the Systems Engineering life-cycle.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.9164,identify and explain the activities involved in each phase of the Systems Engineering life-cycle.,demonstrate experience in the design and implementation of a large software system.
0.8371,explain the role of Software Engineering within the broader context of Systems Engineering.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8733,explain the role of Software Engineering within the broader context of Systems Engineering.,identify and describe the reasons for many architectural features of contemporary machines.
0.8777,explain the role of Software Engineering within the broader context of Systems Engineering.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8805,explain the role of Software Engineering within the broader context of Systems Engineering.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8910,explain the role of Software Engineering within the broader context of Systems Engineering.,The lectures will also address recent literature describing advances in operating systems.
0.8919,explain the role of Software Engineering within the broader context of Systems Engineering.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.9029,explain the role of Software Engineering within the broader context of Systems Engineering.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.9059,explain the role of Software Engineering within the broader context of Systems Engineering.,demonstrate experience in the design and implementation of a large software system.
0.8214,Students will also improve their ability to understand and solve complex and ill-defined problems.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8521,Students will also improve their ability to understand and solve complex and ill-defined problems.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8550,Students will also improve their ability to understand and solve complex and ill-defined problems.,The lectures will also address recent literature describing advances in operating systems.
0.8570,Students will also improve their ability to understand and solve complex and ill-defined problems.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8663,Students will also improve their ability to understand and solve complex and ill-defined problems.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.8806,Students will also improve their ability to understand and solve complex and ill-defined problems.,identify and describe the reasons for many architectural features of contemporary machines.
0.8850,Students will also improve their ability to understand and solve complex and ill-defined problems.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8879,Students will also improve their ability to understand and solve complex and ill-defined problems.,demonstrate experience in the design and implementation of a large software system.
0.8120,Students will also improve their ability to communicate with the multi-disciplinary engineering team and the community at large.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8388,Students will also improve their ability to communicate with the multi-disciplinary engineering team and the community at large.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8412,Students will also improve their ability to communicate with the multi-disciplinary engineering team and the community at large.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.8555,Students will also improve their ability to communicate with the multi-disciplinary engineering team and the community at large.,The lectures will also address recent literature describing advances in operating systems.
0.8594,Students will also improve their ability to communicate with the multi-disciplinary engineering team and the community at large.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8605,Students will also improve their ability to communicate with the multi-disciplinary engineering team and the community at large.,identify and describe the reasons for many architectural features of contemporary machines.
0.8689,Students will also improve their ability to communicate with the multi-disciplinary engineering team and the community at large.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8797,Students will also improve their ability to communicate with the multi-disciplinary engineering team and the community at large.,demonstrate experience in the design and implementation of a large software system.
0.8154,Students will also improve their understanding of and commitment to ethical and professional responsibilities.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8336,Students will also improve their understanding of and commitment to ethical and professional responsibilities.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8421,Students will also improve their understanding of and commitment to ethical and professional responsibilities.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.8479,Students will also improve their understanding of and commitment to ethical and professional responsibilities.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8510,Students will also improve their understanding of and commitment to ethical and professional responsibilities.,The lectures will also address recent literature describing advances in operating systems.
0.8638,Students will also improve their understanding of and commitment to ethical and professional responsibilities.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8657,Students will also improve their understanding of and commitment to ethical and professional responsibilities.,identify and describe the reasons for many architectural features of contemporary machines.
0.8740,Students will also improve their understanding of and commitment to ethical and professional responsibilities.,demonstrate experience in the design and implementation of a large software system.
0.8209,Students will also improve their ability to function as an individual and as a team leader and member in multi-disciplinary and multi-cultural teams.,"The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security."
0.8243,Students will also improve their ability to function as an individual and as a team leader and member in multi-disciplinary and multi-cultural teams.,The lectures will also address recent literature describing advances in operating systems.
0.8319,Students will also improve their ability to function as an individual and as a team leader and member in multi-disciplinary and multi-cultural teams.,describe and analyse the actual algorithms and data structures that are used in a particular operating system.
0.8424,Students will also improve their ability to function as an individual and as a team leader and member in multi-disciplinary and multi-cultural teams.,"define and analyse the structure of operating systems in general, especially those that support communicating processes."
0.8501,Students will also improve their ability to function as an individual and as a team leader and member in multi-disciplinary and multi-cultural teams.,"This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole."
0.8522,Students will also improve their ability to function as an individual and as a team leader and member in multi-disciplinary and multi-cultural teams.,identify and describe the reasons for many architectural features of contemporary machines.
0.8609,Students will also improve their ability to function as an individual and as a team leader and member in multi-disciplinary and multi-cultural teams.,"identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications."
0.8737,Students will also improve their ability to function as an individual and as a team leader and member in multi-disciplinary and multi-cultural teams.,demonstrate experience in the design and implementation of a large software system.
