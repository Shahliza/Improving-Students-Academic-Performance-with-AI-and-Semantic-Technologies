score,s1,s2
0.8362,"This course covers a range of concepts, techniques and technologies in network security.","Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8377,"This course covers a range of concepts, techniques and technologies in network security.","Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8426,"This course covers a range of concepts, techniques and technologies in network security.","Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8571,"This course covers a range of concepts, techniques and technologies in network security.","Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8666,"This course covers a range of concepts, techniques and technologies in network security.","Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8693,"This course covers a range of concepts, techniques and technologies in network security.",The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.8700,"This course covers a range of concepts, techniques and technologies in network security.",The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.8710,"This course covers a range of concepts, techniques and technologies in network security.","Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.8744,"This course covers a range of concepts, techniques and technologies in network security.","The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8801,"This course covers a range of concepts, techniques and technologies in network security.","The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.8802,"This course covers a range of concepts, techniques and technologies in network security.","Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.8807,"This course covers a range of concepts, techniques and technologies in network security.","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.8848,"This course covers a range of concepts, techniques and technologies in network security.","Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.8892,"This course covers a range of concepts, techniques and technologies in network security.","The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.8956,"This course covers a range of concepts, techniques and technologies in network security.",This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.8992,"This course covers a range of concepts, techniques and technologies in network security.","Understand the basics of event-driven programming, and its use in constructing GUIs"
0.9082,"This course covers a range of concepts, techniques and technologies in network security.","Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.8098,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8371,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.",This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.8415,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8466,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.",The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.8474,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8542,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.8654,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.8681,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.8693,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.8720,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.8749,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.",The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.8773,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8812,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","Understand the basics of event-driven programming, and its use in constructing GUIs"
0.8834,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8837,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.8841,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8981,"This includes an overview of relevant network protocols and cryptography; analyses of designs and implementations of security protocols, including basic tools and techniques; an understanding of network threats and attacks such as eavesdropping, spoofing, protocol failures, DoS attacks and man-in-the-middle attacks; network defence including threat analysis and identification, architecture control, intrusion detection and layered security.","Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.8811,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8863,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8864,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.",The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.8902,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.",The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.8953,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8987,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.9010,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.9026,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.9062,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.9064,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.9096,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","Understand the basics of event-driven programming, and its use in constructing GUIs"
0.9103,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.9136,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.9195,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.",This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.9300,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.9333,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.9344,"The course features hands-on lectures and labs to analyse network vulnerabilities, and design and implement appropriate defensive techniques.","Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.8149,Explain network security issues.,"Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8265,Explain network security issues.,"Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8272,Explain network security issues.,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8381,Explain network security issues.,"Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8414,Explain network security issues.,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8420,Explain network security issues.,The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.8606,Explain network security issues.,"Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.8626,Explain network security issues.,"Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8682,Explain network security issues.,"The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.8726,Explain network security issues.,The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.8728,Explain network security issues.,"Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.8731,Explain network security issues.,"The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.8784,Explain network security issues.,This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.8785,Explain network security issues.,"Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.8812,Explain network security issues.,"Understand the basics of event-driven programming, and its use in constructing GUIs"
0.8823,Explain network security issues.,"Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.8930,Explain network security issues.,"Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.8490,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8554,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8557,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8591,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8612,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.",The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.8627,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.",The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.8659,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8699,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.",This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.8724,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.8728,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8728,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.8755,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","Understand the basics of event-driven programming, and its use in constructing GUIs"
0.8802,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.8811,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.8853,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.8990,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.9004,"Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures.","Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.8561,Perform simple penetration testing of a network and network services,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8667,Perform simple penetration testing of a network and network services,"Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8714,Perform simple penetration testing of a network and network services,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8751,Perform simple penetration testing of a network and network services,The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.8754,Perform simple penetration testing of a network and network services,"Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8763,Perform simple penetration testing of a network and network services,"Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8850,Perform simple penetration testing of a network and network services,"Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8870,Perform simple penetration testing of a network and network services,"Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.8871,Perform simple penetration testing of a network and network services,The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.8927,Perform simple penetration testing of a network and network services,"Understand the basics of event-driven programming, and its use in constructing GUIs"
0.8941,Perform simple penetration testing of a network and network services,"Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.8994,Perform simple penetration testing of a network and network services,"The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.9032,Perform simple penetration testing of a network and network services,This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.9049,Perform simple penetration testing of a network and network services,"Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.9094,Perform simple penetration testing of a network and network services,"The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.9156,Perform simple penetration testing of a network and network services,"Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.9301,Perform simple penetration testing of a network and network services,"Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.8432,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8557,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8727,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8800,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8823,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.8847,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8852,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.8855,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8907,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.8912,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.8942,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.8974,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.8993,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.8993,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.9009,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"Understand the basics of event-driven programming, and its use in constructing GUIs"
0.9092,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
0.9121,Perform a threat analysis / vulnerability assessment of protocol designs and implementations.,"Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.8202,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"Distinguish language definition from implementation, syntax and parsing from semantics and evaluation, understand how program state maps to memory (globals, local, heap), and understand the implications of heap reachability for memory management."
0.8253,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.
0.8278,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,The important role of standard libraries and their collection types will be emphasized.  GUI programming will be introduced.
0.8281,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming."
0.8292,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing."
0.8351,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types."
0.8413,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"Major foci are data structures, object oriented programming, and an introduction to software engineering."
0.8415,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"The Advanced version of this course covers these topics in more depth, allowing students to deepen their understanding and experience."
0.8436,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,This course introduces students to the fundamentals of software development with a substantial group software project at its center.
0.8437,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems, including recursively, using divide-and-conquer, and via decomposition; implement an abstract data type."
0.8438,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"Understand the basics of event-driven programming, and its use in constructing GUIs"
0.8498,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems (brute-force, divide-and-conquer, recursive backtracking, heuristic)."
0.8534,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods), risk are introduced."
0.8536,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems."
0.8589,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction."
0.8743,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system."
0.8882,Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities.,"Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools."
