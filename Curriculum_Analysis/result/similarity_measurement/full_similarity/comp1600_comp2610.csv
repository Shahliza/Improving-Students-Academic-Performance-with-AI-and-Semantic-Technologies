score,s1,s2
0.8382,Information theory studies the fundamental limits of the representation and transmission of information.,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8545,Information theory studies the fundamental limits of the representation and transmission of information.,Prove simple programs correct using Hoare Logic.
0.8591,Information theory studies the fundamental limits of the representation and transmission of information.,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8808,Information theory studies the fundamental limits of the representation and transmission of information.,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8845,Information theory studies the fundamental limits of the representation and transmission of information.,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8870,Information theory studies the fundamental limits of the representation and transmission of information.,Design a Turing Machine which will accomplish simple tasks.
0.8957,Information theory studies the fundamental limits of the representation and transmission of information.,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8373,"This course provides an introduction to information theory, studying fundamental concepts such as probability, information, and entropy and examining their applications in the areas of data compression, coding, communications, pattern recognition and probabilistic inference.",Prove simple programs correct using Hoare Logic.
0.8503,"This course provides an introduction to information theory, studying fundamental concepts such as probability, information, and entropy and examining their applications in the areas of data compression, coding, communications, pattern recognition and probabilistic inference.",Design a Turing Machine which will accomplish simple tasks.
0.8523,"This course provides an introduction to information theory, studying fundamental concepts such as probability, information, and entropy and examining their applications in the areas of data compression, coding, communications, pattern recognition and probabilistic inference.","Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8632,"This course provides an introduction to information theory, studying fundamental concepts such as probability, information, and entropy and examining their applications in the areas of data compression, coding, communications, pattern recognition and probabilistic inference.","Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8884,"This course provides an introduction to information theory, studying fundamental concepts such as probability, information, and entropy and examining their applications in the areas of data compression, coding, communications, pattern recognition and probabilistic inference.","Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.9085,"This course provides an introduction to information theory, studying fundamental concepts such as probability, information, and entropy and examining their applications in the areas of data compression, coding, communications, pattern recognition and probabilistic inference.","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.9111,"This course provides an introduction to information theory, studying fundamental concepts such as probability, information, and entropy and examining their applications in the areas of data compression, coding, communications, pattern recognition and probabilistic inference.","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8470,"Understand and apply fundamental concepts in information theory such as probability, entropy, information content and their inter-relationships.","Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8790,"Understand and apply fundamental concepts in information theory such as probability, entropy, information content and their inter-relationships.",Design a Turing Machine which will accomplish simple tasks.
0.8889,"Understand and apply fundamental concepts in information theory such as probability, entropy, information content and their inter-relationships.","Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8904,"Understand and apply fundamental concepts in information theory such as probability, entropy, information content and their inter-relationships.","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8954,"Understand and apply fundamental concepts in information theory such as probability, entropy, information content and their inter-relationships.",Prove simple programs correct using Hoare Logic.
0.9083,"Understand and apply fundamental concepts in information theory such as probability, entropy, information content and their inter-relationships.","Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.9136,"Understand and apply fundamental concepts in information theory such as probability, entropy, information content and their inter-relationships.","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.7819,Understand the principles of data compression.,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8351,Understand the principles of data compression.,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8372,Understand the principles of data compression.,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8424,Understand the principles of data compression.,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8444,Understand the principles of data compression.,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8756,Understand the principles of data compression.,Prove simple programs correct using Hoare Logic.
0.8908,Understand the principles of data compression.,Design a Turing Machine which will accomplish simple tasks.
0.8137,Compute entropy and mutual information of random variables.,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8268,Compute entropy and mutual information of random variables.,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8376,Compute entropy and mutual information of random variables.,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8425,Compute entropy and mutual information of random variables.,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8529,Compute entropy and mutual information of random variables.,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8610,Compute entropy and mutual information of random variables.,Design a Turing Machine which will accomplish simple tasks.
0.8680,Compute entropy and mutual information of random variables.,Prove simple programs correct using Hoare Logic.
0.8187,Implement and analyse basic coding and compression algorithms.,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8737,Implement and analyse basic coding and compression algorithms.,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8778,Implement and analyse basic coding and compression algorithms.,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8798,Implement and analyse basic coding and compression algorithms.,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8841,Implement and analyse basic coding and compression algorithms.,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8978,Implement and analyse basic coding and compression algorithms.,Prove simple programs correct using Hoare Logic.
0.9026,Implement and analyse basic coding and compression algorithms.,Design a Turing Machine which will accomplish simple tasks.
0.8455,Understand the relationship of information theoretical principles and Bayesian inference in data modelling and pattern recognition.,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8862,Understand the relationship of information theoretical principles and Bayesian inference in data modelling and pattern recognition.,Design a Turing Machine which will accomplish simple tasks.
0.8894,Understand the relationship of information theoretical principles and Bayesian inference in data modelling and pattern recognition.,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8904,Understand the relationship of information theoretical principles and Bayesian inference in data modelling and pattern recognition.,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.9101,Understand the relationship of information theoretical principles and Bayesian inference in data modelling and pattern recognition.,Prove simple programs correct using Hoare Logic.
0.9118,Understand the relationship of information theoretical principles and Bayesian inference in data modelling and pattern recognition.,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.9200,Understand the relationship of information theoretical principles and Bayesian inference in data modelling and pattern recognition.,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8246,"Understand some key theorems and inequalities that quantify essential limitations on compression, communication and inference.","Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8708,"Understand some key theorems and inequalities that quantify essential limitations on compression, communication and inference.",Design a Turing Machine which will accomplish simple tasks.
0.8848,"Understand some key theorems and inequalities that quantify essential limitations on compression, communication and inference.","This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8925,"Understand some key theorems and inequalities that quantify essential limitations on compression, communication and inference.","Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.9044,"Understand some key theorems and inequalities that quantify essential limitations on compression, communication and inference.","The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.9068,"Understand some key theorems and inequalities that quantify essential limitations on compression, communication and inference.",Prove simple programs correct using Hoare Logic.
0.9120,"Understand some key theorems and inequalities that quantify essential limitations on compression, communication and inference.","Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.7841,Know the basic concepts regarding communications over noisy channels.,"Given a description of a regular language, either in English, as a regular expression or as a grammar, generate a finite state automaton that recognizes that language. Similarly, given a deterministic or nondeterministic automaton, give a description of the language which it accepts."
0.8461,Know the basic concepts regarding communications over noisy channels.,"Given an inductive definition of a simple data structure, write a recursive definition of a given simple operation on data of that type. Given some such recursively defined operations, prove simple properties of these functions using the appropriate structural induction principle."
0.8488,Know the basic concepts regarding communications over noisy channels.,"The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages."
0.8530,Know the basic concepts regarding communications over noisy channels.,"This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties."
0.8624,Know the basic concepts regarding communications over noisy channels.,"Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare Logic)."
0.8847,Know the basic concepts regarding communications over noisy channels.,Prove simple programs correct using Hoare Logic.
0.8924,Know the basic concepts regarding communications over noisy channels.,Design a Turing Machine which will accomplish simple tasks.
